D G "__PCH__" 0 215 ""4.084""
D G "__DEVICE__" 0 215 "4620"
D G "__DATE__" 0 215 ""16-Aug-12""
D G "__TIME__" 0 215 ""16:06:55"" "Standard Header file for the PIC18F4620 device ////////////////"
d G "PIN_A0" 2 25 "31744"
d G "PIN_A1" 2 26 "31745"
d G "PIN_A2" 2 27 "31746"
d G "PIN_A3" 2 28 "31747"
d G "PIN_A4" 2 29 "31748"
d G "PIN_A5" 2 30 "31749"
d G "PIN_A6" 2 31 "31750"
d G "PIN_A7" 2 32 "31751"
d G "PIN_B0" 2 34 "31752"
d G "PIN_B1" 2 35 "31753"
d G "PIN_B2" 2 36 "31754"
d G "PIN_B3" 2 37 "31755"
d G "PIN_B4" 2 38 "31756"
d G "PIN_B5" 2 39 "31757"
d G "PIN_B6" 2 40 "31758"
d G "PIN_B7" 2 41 "31759"
d G "PIN_C0" 2 43 "31760"
d G "PIN_C1" 2 44 "31761"
d G "PIN_C2" 2 45 "31762"
d G "PIN_C3" 2 46 "31763"
d G "PIN_C4" 2 47 "31764"
d G "PIN_C5" 2 48 "31765"
d G "PIN_C6" 2 49 "31766"
d G "PIN_C7" 2 50 "31767"
d G "PIN_D0" 2 52 "31768"
d G "PIN_D1" 2 53 "31769"
d G "PIN_D2" 2 54 "31770"
d G "PIN_D3" 2 55 "31771"
d G "PIN_D4" 2 56 "31772"
d G "PIN_D5" 2 57 "31773"
d G "PIN_D6" 2 58 "31774"
d G "PIN_D7" 2 59 "31775"
d G "PIN_E0" 2 61 "31776"
d G "PIN_E1" 2 62 "31777"
d G "PIN_E2" 2 63 "31778"
d G "PIN_E3" 2 64 "31779"
d G "FALSE" 2 67 "0"
d G "TRUE" 2 68 "1"
d G "BYTE" 2 70 "int8"
d G "BOOLEAN" 2 71 "int1"
d G "getc" 2 73 "getch"
d G "fgetc" 2 74 "getch"
d G "getchar" 2 75 "getch"
d G "putc" 2 76 "putchar"
d G "fputc" 2 77 "putchar"
d G "fgets" 2 78 "gets"
d G "fputs" 2 79 "puts"
d G "WDT_TIMEOUT" 2 85 "7"
d G "MCLR_FROM_SLEEP" 2 86 "11"
d G "MCLR_FROM_RUN" 2 87 "15"
d G "NORMAL_POWER_UP" 2 88 "12"
d G "BROWNOUT_RESTART" 2 89 "14"
d G "WDT_FROM_SLEEP" 2 90 "3"
d G "RESET_INSTRUCTION" 2 91 "0"
d G "RTCC_INTERNAL" 2 97 "0"
d G "RTCC_EXT_L_TO_H" 2 98 "32"
d G "RTCC_EXT_H_TO_L" 2 99 "48"
d G "RTCC_DIV_1" 2 101 "8"
d G "RTCC_DIV_2" 2 102 "0"
d G "RTCC_DIV_4" 2 103 "1"
d G "RTCC_DIV_8" 2 104 "2"
d G "RTCC_DIV_16" 2 105 "3"
d G "RTCC_DIV_32" 2 106 "4"
d G "RTCC_DIV_64" 2 107 "5"
d G "RTCC_DIV_128" 2 108 "6"
d G "RTCC_DIV_256" 2 109 "7"
d G "RTCC_OFF" 2 111 "0x80"
d G "RTCC_8_BIT" 2 113 "0x40"
d G "WDT_ON" 2 124 "0x100"
d G "WDT_OFF" 2 125 "0"
d G "T1_DISABLED" 2 131 "0"
d G "T1_INTERNAL" 2 132 "0x85"
d G "T1_EXTERNAL" 2 133 "0x87"
d G "T1_EXTERNAL_SYNC" 2 134 "0x83"
d G "T1_CLK_OUT" 2 136 "8"
d G "T1_DIV_BY_1" 2 138 "0"
d G "T1_DIV_BY_2" 2 139 "0x10"
d G "T1_DIV_BY_4" 2 140 "0x20"
d G "T1_DIV_BY_8" 2 141 "0x30"
d G "T2_DISABLED" 2 146 "0"
d G "T2_DIV_BY_1" 2 147 "4"
d G "T2_DIV_BY_4" 2 148 "5"
d G "T2_DIV_BY_16" 2 149 "6"
d G "T3_DISABLED" 2 155 "0"
d G "T3_INTERNAL" 2 156 "0x85"
d G "T3_EXTERNAL" 2 157 "0x87"
d G "T3_EXTERNAL_SYNC" 2 158 "0x83"
d G "T3_DIV_BY_1" 2 160 "0"
d G "T3_DIV_BY_2" 2 161 "0x10"
d G "T3_DIV_BY_4" 2 162 "0x20"
d G "T3_DIV_BY_8" 2 163 "0x30"
d G "T3_CCP1_TO_2" 2 166 "0x48"
d G "T3_CCP2" 2 167 "0x8"
d G "CCP_OFF" 2 173 "0"
d G "CCP_CAPTURE_FE" 2 174 "4"
d G "CCP_CAPTURE_RE" 2 175 "5"
d G "CCP_CAPTURE_DIV_4" 2 176 "6"
d G "CCP_CAPTURE_DIV_16" 2 177 "7"
d G "CCP_COMPARE_SET_ON_MATCH" 2 178 "8"
d G "CCP_COMPARE_CLR_ON_MATCH" 2 179 "9"
d G "CCP_COMPARE_INT" 2 180 "0xA"
d G "CCP_COMPARE_INT_AND_TOGGLE" 2 181 "0x2"
d G "CCP_COMPARE_RESET_TIMER" 2 182 "0xB"
d G "CCP_PWM" 2 183 "0xC"
d G "CCP_PWM_PLUS_1" 2 184 "0x1c"
d G "CCP_PWM_PLUS_2" 2 185 "0x2c"
d G "CCP_PWM_PLUS_3" 2 186 "0x3c"
d G "CCP_PWM_H_H" 2 192 "0x0c"
d G "CCP_PWM_H_L" 2 193 "0x0d"
d G "CCP_PWM_L_H" 2 194 "0x0e"
d G "CCP_PWM_L_L" 2 195 "0x0f"
d G "CCP_PWM_FULL_BRIDGE" 2 197 "0x40"
d G "CCP_PWM_FULL_BRIDGE_REV" 2 198 "0xC0"
d G "CCP_PWM_HALF_BRIDGE" 2 199 "0x80"
d G "CCP_SHUTDOWN_ON_COMP1" 2 201 "0x100000"
d G "CCP_SHUTDOWN_ON_COMP2" 2 202 "0x200000"
d G "CCP_SHUTDOWN_ON_COMP" 2 203 "0x300000"
d G "CCP_SHUTDOWN_ON_INT0" 2 204 "0x400000"
d G "CCP_SHUTDOWN_ON_COMP1_INT0" 2 205 "0x500000"
d G "CCP_SHUTDOWN_ON_COMP2_INT0" 2 206 "0x600000"
d G "CCP_SHUTDOWN_ON_COMP_INT0" 2 207 "0x700000"
d G "CCP_SHUTDOWN_AC_L" 2 209 "0x000000"
d G "CCP_SHUTDOWN_AC_H" 2 210 "0x040000"
d G "CCP_SHUTDOWN_AC_F" 2 211 "0x080000"
d G "CCP_SHUTDOWN_BD_L" 2 213 "0x000000"
d G "CCP_SHUTDOWN_BD_H" 2 214 "0x010000"
d G "CCP_SHUTDOWN_BD_F" 2 215 "0x020000"
d G "CCP_SHUTDOWN_RESTART" 2 217 "0x80000000"
d G "PSP_ENABLED" 2 227 "0x10"
d G "PSP_DISABLED" 2 228 "0"
d G "SPI_MASTER" 2 235 "0x20"
d G "SPI_SLAVE" 2 236 "0x24"
d G "SPI_L_TO_H" 2 237 "0"
d G "SPI_H_TO_L" 2 238 "0x10"
d G "SPI_CLK_DIV_4" 2 239 "0"
d G "SPI_CLK_DIV_16" 2 240 "1"
d G "SPI_CLK_DIV_64" 2 241 "2"
d G "SPI_CLK_T2" 2 242 "3"
d G "SPI_SS_DISABLED" 2 243 "1"
d G "SPI_SAMPLE_AT_END" 2 245 "0x8000"
d G "SPI_XMIT_L_TO_H" 2 246 "0x4000"
d G "UART_ADDRESS" 2 252 "2"
d G "UART_DATA" 2 253 "4"
d G "UART_AUTODETECT" 2 254 "8"
d G "UART_AUTODETECT_NOWAIT" 2 255 "9"
d G "UART_WAKEUP_ON_RDA" 2 256 "10"
d G "UART_SEND_BREAK" 2 257 "13"
d G "A0_A3_A1_A3" 2 261 "0xfff04"
d G "A0_A3_A1_A2_OUT_ON_A4_A5" 2 262 "0xfcf03"
d G "A0_A3_A1_A3_OUT_ON_A4_A5" 2 263 "0xbcf05"
d G "NC_NC_NC_NC" 2 264 "0x0ff07"
d G "A0_A3_A1_A2" 2 265 "0xfff02"
d G "A0_A3_NC_NC_OUT_ON_A4" 2 266 "0x9ef01"
d G "A0_VR_A1_VR" 2 267 "0x3ff06"
d G "A3_VR_A2_VR" 2 268 "0xcff0e"
d G "CP1_INVERT" 2 269 "0x0000010"
d G "CP2_INVERT" 2 270 "0x0000020"
d G "VREF_LOW" 2 278 "0xa0"
d G "VREF_HIGH" 2 279 "0x80"
d G "VREF_F5" 2 281 "0x40"
d G "VREF_COMP" 2 282 "0x10"
d G "LVD_LVDIN" 2 287 "0x1F"
d G "LVD_45" 2 288 "0x1E"
d G "LVD_42" 2 289 "0x1D"
d G "LVD_40" 2 290 "0x1C"
d G "LVD_38" 2 291 "0x1B"
d G "LVD_36" 2 292 "0x1A"
d G "LVD_35" 2 293 "0x19"
d G "LVD_33" 2 294 "0x18"
d G "LVD_30" 2 295 "0x17"
d G "LVD_28" 2 296 "0x16"
d G "LVD_27" 2 297 "0x15"
d G "LVD_25" 2 298 "0x14"
d G "LVD_24" 2 299 "0x13"
d G "LVD_23" 2 300 "0x12"
d G "LVD_22" 2 301 "0x11"
d G "LVD_21" 2 302 "0x10"
d G "LVD_TRIGGER_BELOW" 2 304 "0"
d G "LVD_TRIGGER_ABOVE" 2 305 "0x80"
d G "OSC_31KHZ" 2 311 "0"
d G "OSC_125KHZ" 2 312 "0x10"
d G "OSC_250KHZ" 2 313 "0x20"
d G "OSC_500KHZ" 2 314 "0x30"
d G "OSC_1MHZ" 2 315 "0x40"
d G "OSC_2MHZ" 2 316 "0x50"
d G "OSC_4MHZ" 2 317 "0x60"
d G "OSC_8MHZ" 2 318 "0x70"
d G "OSC_16MHZ" 2 319 "0x4060"
d G "OSC_32MHZ" 2 320 "0x4070"
d G "OSC_TIMER1" 2 322 "1"
d G "OSC_INTRC" 2 323 "2"
d G "OSC_NORMAL" 2 324 "0"
d G "OSC_IDLE_MODE" 2 326 "0x80"
d G "OSC_31250" 2 327 "0x8000"
d G "OSC_PLL_ON" 2 328 "0x4000"
d G "OSC_PLL_OFF" 2 329 "0"
d G "OSC_STATE_STABLE" 2 333 "4"
d G "OSC_STATE_EXT_RUNNING" 2 334 "8"
d G "ADC_OFF" 2 341 "0" "ADC Off"
d G "ADC_CLOCK_DIV_2" 2 342 "0x100"
d G "ADC_CLOCK_DIV_4" 2 343 "0x04"
d G "ADC_CLOCK_DIV_8" 2 344 "0x01"
d G "ADC_CLOCK_DIV_16" 2 345 "0x05"
d G "ADC_CLOCK_DIV_32" 2 346 "0x02"
d G "ADC_CLOCK_DIV_64" 2 347 "0x06"
d G "ADC_CLOCK_INTERNAL" 2 348 "0x07" "Internal 2-6us"
d G "ADC_TAD_MUL_0" 2 350 "0x00"
d G "ADC_TAD_MUL_2" 2 351 "0x08"
d G "ADC_TAD_MUL_4" 2 352 "0x10"
d G "ADC_TAD_MUL_6" 2 353 "0x18"
d G "ADC_TAD_MUL_8" 2 354 "0x20"
d G "ADC_TAD_MUL_12" 2 355 "0x28"
d G "ADC_TAD_MUL_16" 2 356 "0x30"
d G "ADC_TAD_MUL_20" 2 357 "0x38"
d G "NO_ANALOGS" 2 360 "0x0F" "None"
d G "ALL_ANALOG" 2 361 "0x00" "A0 A1 A2 A3 A5 E0 E1 E2 B2 B3 B1 B4 B0"
d G "AN0_TO_AN11" 2 362 "0x03" "A0 A1 A2 A3 A5 E0 E1 E2 B2 B3 B1 B4"
d G "AN0_TO_AN10" 2 363 "0x04" "A0 A1 A2 A3 A5 E0 E1 E2 B2 B3 B1"
d G "AN0_TO_AN9" 2 364 "0x05" "A0 A1 A2 A3 A5 E0 E1 E2 B2 B3"
d G "AN0_TO_AN8" 2 365 "0x06" "A0 A1 A2 A3 A5 E0 E1 E2 B2"
d G "AN0_TO_AN7" 2 366 "0x07" "A0 A1 A2 A3 A5 E0 E1 E2"
d G "AN0_TO_AN6" 2 367 "0x08" "A0 A1 A2 A3 A5 E0 E1"
d G "AN0_TO_AN5" 2 368 "0x09" "A0 A1 A2 A3 A5 E0"
d G "AN0_TO_AN4" 2 369 "0x0A" "A0 A1 A2 A3 A5"
d G "AN0_TO_AN3" 2 370 "0x0B" "A0 A1 A2 A3"
d G "AN0_TO_AN2" 2 371 "0x0C" "A0 A1 A2"
d G "AN0_TO_AN1" 2 372 "0x0D" "A0 A1"
d G "AN0" 2 373 "0x0E" "A0"
d G "AN0_TO_AN11_ANALOG" 2 374 "0x03" "!old only provided for compatibility"
d G "AN0_TO_AN10_ANALOG" 2 375 "0x04" "!old only provided for compatibility"
d G "AN0_TO_AN9_ANALOG" 2 376 "0x05" "!old only provided for compatibility"
d G "AN0_TO_AN8_ANALOG" 2 377 "0x06" "!old only provided for compatibility"
d G "AN0_TO_AN7_ANALOG" 2 378 "0x07" "!old only provided for compatibility"
d G "AN0_TO_AN6_ANALOG" 2 379 "0x08" "!old only provided for compatibility"
d G "AN0_TO_AN5_ANALOG" 2 380 "0x09" "!old only provided for compatibility"
d G "AN0_TO_AN4_ANALOG" 2 381 "0x0A" "!old only provided for compatibility"
d G "AN0_TO_AN3_ANALOG" 2 382 "0x0B" "!old only provided for compatibility"
d G "AN0_TO_AN2_ANALOG" 2 383 "0x0C" "!old only provided for compatibility"
d G "AN0_TO_AN1_ANALOG" 2 384 "0x0D" "!old only provided for compatibility"
d G "AN0_ANALOG" 2 385 "0x0E" "!old only provided for compatibility"
d G "VSS_VDD" 2 388 "0x00" "Range 0-Vdd"
d G "VREF_VREF" 2 389 "0x30" "Range VrefL-VrefH"
d G "VREF_VDD" 2 390 "0x20" "Range VrefL-Vdd"
d G "VSS_VREF" 2 391 "0x10" "Range 0-VrefH"
d G "ADC_START_AND_READ" 2 395 "7" "This is the default if nothing is specified"
d G "ADC_START_ONLY" 2 396 "1"
d G "ADC_READ_ONLY" 2 397 "6"
d G "L_TO_H" 2 409 "0x40"
d G "H_TO_L" 2 410 "0"
d G "GLOBAL" 2 412 "0xF2C0"
d G "INT_RTCC" 2 413 "0xF220"
d G "INT_TIMER0" 2 414 "0xF220"
d G "INT_TIMER1" 2 415 "0x9D01"
d G "INT_TIMER2" 2 416 "0x9D02"
d G "INT_TIMER3" 2 417 "0xA002"
d G "INT_EXT" 2 418 "0xF210"
d G "INT_EXT1" 2 419 "0xF008"
d G "INT_EXT2" 2 420 "0xF010"
d G "INT_RB" 2 421 "0xFFF208"
d G "INT_PSP" 2 422 "0x9D80"
d G "INT_AD" 2 423 "0x9D40"
d G "INT_RDA" 2 424 "0x9D20"
d G "INT_TBE" 2 425 "0x9D10"
d G "INT_SSP" 2 426 "0x9D08"
d G "INT_CCP1" 2 427 "0x9D04"
d G "INT_CCP2" 2 428 "0xA001"
d G "INT_BUSCOL" 2 429 "0xA008"
d G "INT_LOWVOLT" 2 430 "0xA004"
d G "INT_COMP" 2 431 "0xA040"
d G "INT_EEPROM" 2 432 "0xA010"
d G "INT_OSCF" 2 433 "0xA080"
D G "STACK_USE_ICMP" 0 2 "1"
D G "STACK_USE_ARP" 0 3 "1"
D G "STACK_USE_TCP" 0 4 "1"
D G "STACK_USE_CCS_PICENS" 3 21 "1" "TODO"
D G "STACK_USE_CCS_PICNET" 3 22 "0"
D G "STACK_USE_CCS_PICEEC" 3 23 "0"
D G "STACK_USE_MCPENC" 3 26 "1"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
D G "STACK_INCLUDE" 4 65 ""
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 2 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
D G "STACK_TSK_H" 5 49 ""
C G "" 6 1 1 "*"
C G "" 6 1 1 "*"
C G "" 6 1 1 "*"
C G "" 6 1 1 "*"
C G "" 6 1 1 "*"
C G "" 6 1 1 "*"
C G "" 6 1 1 "*"
C G "" 6 1 1 "*"
C G "" 6 1 1 "*"
C G "" 6 1 1 "*"
C G "" 6 1 1 "*"
C G "" 6 1 1 "*"
C G "" 6 1 1 "*"
C G "" 6 1 1 "*"
C G "" 6 1 1 "*"
C G "" 6 1 1 "*"
C G "" 6 1 1 "*"
C G "" 6 1 1 "*"
C G "" 6 1 1 "*"
C G "" 6 1 1 "*"
C G "" 6 1 1 "*"
C G "" 6 1 1 "*"
C G "" 6 1 1 "*"
C G "" 6 1 1 "*"
C G "" 6 1 1 "*"
C G "" 6 1 1 "*"
C G "" 6 1 1 "*"
C G "" 6 1 1 "*"
C G "" 6 1 1 "*"
D G "COMPILER_H" 6 43 ""
C G "" 6 49 1 "*"
C G "" 6 111 1 "*"
C G "" 6 175 1 "*"
C G "" 6 238 1 "*"
C G "" 5 53 1 "*"
C G "" 5 53 1 "*"
C G "" 5 53 1 "*"
C G "" 5 53 1 "*"
C G "" 5 53 1 "*"
C G "" 5 53 2 "*"
C G "" 5 64 1 "*"
C G "" 5 64 1 "*"
C G "" 5 64 1 "*"
C G "" 5 64 1 "*"
C G "" 5 64 1 "*"
C G "" 5 64 1 "*"
C G "" 5 64 1 "*"
C G "" 5 64 1 "*"
C G "" 5 64 2 "*"
C G "" 5 77 1 "*"
C G "" 5 77 1 "*"
C G "" 5 77 1 "*"
C G "" 5 77 1 "*"
C G "" 5 77 1 "*"
D G "MPFS_RESERVE_BLOCK" 5 87 " (64)"
C G "" 5 89 1 "*"
C G "" 5 89 1 "*"
C G "" 5 89 1 "*"
C G "" 5 89 1 "*"
D G "STACK_USE_MAC" 5 97 "TRUE"
D G "STACK_USE_MCPINC" 5 105 "FALSE"
D G "STACK_USE_MAC" 5 111 "TRUE"
D G "STACK_USE_PPP" 5 122 "FALSE"
D G "STACK_USE_SLIP" 5 126 "FALSE"
D G "STACK_USE_DNS" 5 138 "FALSE"
D G "STACK_USE_DHCP" 5 142 "FALSE"
D G "STACK_USE_UDP" 5 146 "FALSE"
D G "STACK_USE_TELNET" 5 158 "FALSE"
D G "STACK_USE_HTTP" 5 162 "FALSE"
D G "STACK_USE_SMTP" 5 166 "FALSE"
D G "STACK_USE_SNMP" 5 170 "FALSE"
D G "STACK_USE_ANNOUNCE" 5 174 "FALSE"
D G "STACK_USE_IP_GLEANING" 5 186 "FALSE"
D G "STACK_USE_MPFS" 5 190 "FALSE"
D G "STACK_USE_HTTP2" 5 194 "FALSE"
C G "" 5 197 1 "*"
C G "" 5 205 1 "*"
C G "" 5 215 1 "*"
C G "" 5 225 1 "*"
C G "" 5 225 1 "*"
C G "" 5 225 1 "*"
D G "MCHP_MAC" 5 232 ""
C G "" 5 236 1 "*"
C G "" 5 236 1 "*"
C G "" 5 236 1 "*"
C G "" 5 236 1 "*"
C G "" 5 236 1 "*"
C G "" 5 236 1 "*"
C G "" 5 236 1 "*"
C G "" 5 236 1 "*"
C G "" 5 236 1 "*"
D G "___TCPIP_STACK_CONFIGURATION" 7 29 ""
D G "MODEM_DCD" 7 51 "PIN_G3"
D G "MODEM_RESET" 7 52 "PIN_G4"
D G "MODEM_TX" 7 53 "PIN_G1"
D G "MODEM_RX" 7 54 "PIN_G2"
D G "MODEM_INIT_STR" 7 55 ""ATM1L3&K0"" "speaker on, volume high, no hw flow control"
D G "MODEM_DIAL_STR" 7 56 ""ATDT""
D G "MODEM_BAUD_RATE" 7 57 "115200"
D G "MODEM_RESPONSE_TIMEOUT" 7 59 "2000" "time to wait for a response to an AT command (in ms)"
D G "MODEM_CONNECT_TIMEOUT" 7 60 "60000" "time to wait for modem to make a connection (in ms)"
D G "PIN_ENC_MAC_SO" 7 87 "PIN_C4" "PIC <<<< ENC"
D G "PIN_ENC_MAC_SI" 7 88 "PIN_C5" "PIC >>>> ENC"
D G "PIN_ENC_MAC_CLK" 7 89 "PIN_C3"
D G "PIN_ENC_MAC_CS" 7 90 "PIN_D1"
D G "PIN_ENC_MAC_RST" 7 91 "PIN_D0"
D G "PIN_ENC_MAC_INT" 7 92 "PIN_B0"
D G "PIN_ENC_MAC_WOL" 7 93 "PIN_B1"
D G "ENC_MAC_USE_SPI" 7 94 "TRUE" "due to an errata in the ENC28J60, you should always use HW SPI to assure that SPI clock is over 8MHz!"
D G "mac_enc_spi_tris_init" 7 95 "()  *0xF93=(*0xF93 | 0b11); *0xF94 = (*0xF94 & 0b11010111) | 0x10; *0xF95=*0xF95 & 0xFC"
D G "TCP_NO_WAIT_FOR_ACK" 7 107 "FALSE"
D G "MY_DEFAULT_IP_ADDR_BYTE1" 7 114 "192" "IP ADDRESS"
D G "MY_DEFAULT_IP_ADDR_BYTE2" 7 115 "168" "This unit's IP address."
D G "MY_DEFAULT_IP_ADDR_BYTE3" 7 116 "2"
D G "MY_DEFAULT_IP_ADDR_BYTE4" 7 117 "5"
D G "MY_DEFAULT_MASK_BYTE1" 7 119 "0xff" "NETMASK"
D G "MY_DEFAULT_MASK_BYTE2" 7 120 "0xff" "Netmask tells the IP / ARP stack which"
D G "MY_DEFAULT_MASK_BYTE3" 7 121 "0xff" "IP's are on your local network."
D G "MY_DEFAULT_MASK_BYTE4" 7 122 "0x00"
D G "MY_DEFAULT_GATE_BYTE1" 7 124 "192" "GATEWAY IP ADDRESS"
D G "MY_DEFAULT_GATE_BYTE2" 7 125 "168" "Gateway acts as a conduit between two networks."
D G "MY_DEFAULT_GATE_BYTE3" 7 126 "2"
D G "MY_DEFAULT_GATE_BYTE4" 7 127 "1"
D G "MY_DEFAULT_MAC_BYTE1" 7 133 "0x00"
D G "MY_DEFAULT_MAC_BYTE2" 7 134 "0x04"
D G "MY_DEFAULT_MAC_BYTE3" 7 135 "0xa3"
D G "MY_DEFAULT_MAC_BYTE4" 7 136 "0x00"
D G "MY_DEFAULT_MAC_BYTE5" 7 137 "0x00"
D G "MY_DEFAULT_MAC_BYTE6" 7 138 "0x00"
D G "MAX_SOCKETS" 7 144 "5"
D G "MAX_UDP_SOCKETS" 7 151 "2"
D G "MAC_TX_BUFFER_SIZE" 7 173 "1024" "do not modify this line"
D G "MAC_TX_BUFFER_COUNT" 7 174 "1" "do not modify this line"
D G "MAC_RX_BUFFER_SIZE" 7 183 "MAC_TX_BUFFER_SIZE" "do not modify this line unless you are certain you know what you're doing"
D G "MY_MAC_BYTE1" 5 255 "AppConfig.MyMACAddr.v[0]"
D G "MY_MAC_BYTE2" 5 256 "AppConfig.MyMACAddr.v[1]"
D G "MY_MAC_BYTE3" 5 257 "AppConfig.MyMACAddr.v[2]"
D G "MY_MAC_BYTE4" 5 258 "AppConfig.MyMACAddr.v[3]"
D G "MY_MAC_BYTE5" 5 259 "AppConfig.MyMACAddr.v[4]"
D G "MY_MAC_BYTE6" 5 260 "AppConfig.MyMACAddr.v[5]"
C G "" 5 262 1 "*"
C G "" 5 262 1 "*"
D G "MY_MASK_BYTE1" 5 267 "AppConfig.MyMask.v[0]"
D G "MY_MASK_BYTE2" 5 268 "AppConfig.MyMask.v[1]"
D G "MY_MASK_BYTE3" 5 269 "AppConfig.MyMask.v[2]"
D G "MY_MASK_BYTE4" 5 270 "AppConfig.MyMask.v[3]"
C G "" 5 272 1 "*"
C G "" 5 272 1 "*"
D G "MY_IP" 5 279 "AppConfig.MyIPAddr"
D G "MY_IP_BYTE1" 5 281 "AppConfig.MyIPAddr.v[0]"
D G "MY_IP_BYTE2" 5 282 "AppConfig.MyIPAddr.v[1]"
D G "MY_IP_BYTE3" 5 283 "AppConfig.MyIPAddr.v[2]"
D G "MY_IP_BYTE4" 5 284 "AppConfig.MyIPAddr.v[3]"
C G "" 5 286 1 "*"
D G "MY_GATE_BYTE1" 5 290 "AppConfig.MyGateway.v[0]"
D G "MY_GATE_BYTE2" 5 291 "AppConfig.MyGateway.v[1]"
D G "MY_GATE_BYTE3" 5 292 "AppConfig.MyGateway.v[2]"
D G "MY_GATE_BYTE4" 5 293 "AppConfig.MyGateway.v[3]"
T G "BOOL" 5 328 "int1"
T G "BUFFER" 5 330 "int8"
T G "WORD" 5 332 "int16"
T G "DWORD" 5 333 "int32"
T G "BYTE_VAL" 5 349 "{int8 Val}"
T G "SWORD_VAL" 5 361 "{int32 Val}"
T G "WORD_VAL" 5 373 "{int16 Val,int8[2] v}" "typedef union _DWORD_VAL"
T G "DWORD_VAL" 5 435 "{DWORD Val,WORD[2] w,int8[4] v}"
D G "LOWER_LSB" 5 438 "(a)    (a).v[0]"
D G "LOWER_MSB" 5 439 "(a)   (a).v[1]"
D G "UPPER_LSB" 5 440 "(a)    (a).v[2]"
D G "UPPER_MSB" 5 441 "(a)    (a).v[3]"
T G "MAC_ADDR" 5 446 "{int8[6] v}"
T G "IP_ADDR" 5 452 "{int8[4] v,DWORD Val}"
T G "NODE_INFO" 5 459 "{MAC_ADDR MACAddr,IP_ADDR IPAddr}"
T G "APP_CONFIG" 5 477 "{IP_ADDR MyIPAddr,MAC_ADDR MyMACAddr,IP_ADDR MyMask,IP_ADDR MyGateway,IP_ADDR PrimaryDNSServer}" "typedef union _STACK_FLAGS"
V G "AppConfig" 5 488 "APP_CONFIG"
D G "StackIsInConfigMode" 5 493 "()   FALSE"
C L "StackInit" 5 497 1 "*"
C L "StackInit" 5 497 1 "*"
C L "StackInit" 5 497 1 "*"
C L "StackInit" 5 497 1 "*"
C L "StackInit" 5 497 1 "*"
C L "StackInit" 5 497 1 "*"
C L "StackInit" 5 497 1 "*"
F G "StackInit" 5 512 "void()"
C L "StackInit" 5 515 1 "*"
C L "StackInit" 5 515 1 "*"
C L "StackInit" 5 515 1 "*"
C L "StackInit" 5 515 1 "*"
C L "StackInit" 5 515 1 "*"
C L "StackInit" 5 515 1 "*"
C L "StackInit" 5 515 1 "*"
C L "StackInit" 5 515 1 "*"
C L "StackInit" 5 515 1 "*"
C L "StackInit" 5 515 1 "*"
F G "StackTask" 5 534 "void()"
D G "_STRING" 8 12 ""
D G "_STDDEF" 9 13 ""
D G "ptrdiff_t" 9 18 "unsigned int16"
D G "size_t" 9 21 "unsigned int8"
D G "wchar_t" 9 22 "char"
D G "NULL" 9 23 "0"
D G "offsetof" 9 25 "(s,f) (offsetofbit(s,f)/8)"
D G "_CTYPE" 10 12 ""
D G "islower" 10 14 "(x)  isamong(x,"abcdefghijklmnopqrstuvwxyz")"
D G "isupper" 10 15 "(x)  isamong(x,"ABCDEFGHIJKLMNOPQRSTUVWXYZ")"
D G "isalnum" 10 16 "(x)  isamong(x,"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz")"
D G "isalpha" 10 17 "(x)  isamong(x,"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz")"
D G "isdigit" 10 18 "(x)  isamong(x,"0123456789")"
D G "isspace" 10 19 "(x)  ((x)==' ')"
D G "isxdigit" 10 20 "(x) isamong(x,"0123456789ABCDEFabcdef")"
D G "iscntrl" 10 21 "(x)  ((x)<' ')"
D G "isprint" 10 22 "(x)  ((x)>=' ')"
D G "isgraph" 10 23 "(x)  ((x)>' ')"
D G "ispunct" 10 24 "(x)  (((x)>' ')&&!isalnum(x))"
C L "StackTask" 8 19 10 "FUNCTION"
F G "memmove" 8 34 "*int8(*int8 s1,*int8 s2,int8 n)"
V L "s1" 8 34 "*int8"
V L "s2" 8 34 "*int8"
V L "n" 8 34 "int8"
V L "sc1" 8 36 "*int8"
V L "sc2" 8 37 "*int8"
D G "strcopy" 8 54 "strcpy"
C L "strncpy" 8 19 4 "FUNCTION"
F G "strncpy" 8 61 "*int8(*int8 s1,*int8 s2,int8 n)"
V L "s1" 8 61 "*int8"
V L "s2" 8 61 "*int8"
V L "n" 8 61 "int8"
V L "s" 8 63 "*int8"
C L "strcat" 8 19 3 "FUNCTION"
F G "strcat" 8 78 "*int8(*int8 s1,*int8 s2)"
V L "s1" 8 78 "*int8"
V L "s2" 8 78 "*int8"
V L "s" 8 80 "*int8"
C L "strncat" 8 19 2 "FUNCTION"
F G "strncat" 8 96 "*int8(*int8 s1,*int8 s2,int8 n)"
V L "s1" 8 96 "*int8"
V L "s2" 8 96 "*int8"
V L "n" 8 96 "int8"
V L "s" 8 98 "*int8"
C L "memcmp" 8 19 3 "FUNCTION"
F G "memcmp" 8 120 "sint8(*int8 s1,*int8 s2,int8 n)"
V L "s1" 8 120 "*int8"
V L "s2" 8 120 "*int8"
V L "n" 8 120 "int8"
V L "su1" 8 122 "*int8"
V L "su2" 8 122 "*int8"
C L "strcmp" 8 19 2 "FUNCTION"
F G "strcmp" 8 134 "sint8(*int8 s1,*int8 s2)"
V L "s1" 8 134 "*int8"
V L "s2" 8 134 "*int8"
C L "strcoll" 8 19 2 "FUNCTION"
F G "strcoll" 8 144 "sint8(*int8 s1,*int8 s2)"
V L "s1" 8 144 "*int8"
V L "s2" 8 144 "*int8"
C L "strncmp" 8 19 4 "FUNCTION"
F G "strncmp" 8 157 "sint8(*int8 s1,*int8 s2,int8 n)"
V L "s1" 8 157 "*int8"
V L "s2" 8 157 "*int8"
V L "n" 8 157 "int8"
C L "strxfrm" 8 19 3 "FUNCTION"
F G "strxfrm" 8 169 "int8(*int8 s1,*int8 s2,int8 n)"
V L "s1" 8 169 "*int8"
V L "s2" 8 169 "*int8"
V L "n" 8 169 "int8"
V L "s" 8 171 "*int8"
V L "n1" 8 172 "int8"
C L "memchr" 8 19 3 "FUNCTION"
F G "memchr" 8 191 "*int8(*int8 s,int8 c,int8 n)"
V L "s" 8 191 "*int8"
V L "c" 8 191 "int8"
V L "n" 8 191 "int8"
V L "uc" 8 193 "int8"
V L "su" 8 194 "*int8"
C L "strchr" 8 19 2 "FUNCTION"
F G "strchr" 8 205 "*int8(*int8 s,int8 c)"
V L "s" 8 205 "*int8"
V L "c" 8 205 "int8"
C L "strcspn" 8 19 4 "FUNCTION"
F G "strcspn" 8 217 "int8(*int8 s1,*int8 s2)"
V L "s1" 8 217 "*int8"
V L "s2" 8 217 "*int8"
V L "sc1" 8 219 "*int8"
V L "sc2" 8 219 "*int8"
C L "strpbrk" 8 19 4 "FUNCTION"
F G "strpbrk" 8 232 "*int8(*int8 s1,*int8 s2)"
V L "s1" 8 232 "*int8"
V L "s2" 8 232 "*int8"
V L "sc1" 8 234 "*int8"
V L "sc2" 8 234 "*int8"
C L "strrchr" 8 19 2 "FUNCTION"
F G "strrchr" 8 247 "*int8(*int8 s,int8 c)"
V L "s" 8 247 "*int8"
V L "c" 8 247 "int8"
V L "p" 8 249 "*int8"
C L "strspn" 8 19 2 "FUNCTION"
F G "strspn" 8 262 "int8(*int8 s1,*int8 s2)"
V L "s1" 8 262 "*int8"
V L "s2" 8 262 "*int8"
V L "sc1" 8 264 "*int8"
V L "sc2" 8 264 "*int8"
C L "strstr" 8 19 6 "FUNCTION"
F G "strstr" 8 281 "*int8(*int8 s1,*int8 s2)"
V L "s1" 8 281 "*int8"
V L "s2" 8 281 "*int8"
V L "s" 8 283 "*int8"
V L "t" 8 283 "*int8"
C L "strtok" 8 19 13 "FUNCTION"
F G "strtok" 8 320 "*int8(*int8 s1,*int8 s2)"
V L "s1" 8 320 "*int8"
V L "s2" 8 320 "*int8"
V L "beg" 8 322 "*int8"
V L "end" 8 322 "*int8"
V L "save" 8 323 "*int8"
C L "strlen" 8 19 6 "FUNCTION"
F G "strlen" 8 369 "int8(*int8 s)"
V L "s" 8 369 "*int8"
V L "sc" 8 371 "*int8"
C L "stricmp" 8 19 2 "FUNCTION"
F G "stricmp" 8 380 "sint8(*int8 s1,*int8 s2)"
V L "s1" 8 380 "*int8"
V L "s2" 8 380 "*int8"
C L "strlwr" 8 19 3 "FUNCTION"
F G "strlwr" 8 394 "*int8(*int8 s)"
V L "s" 8 394 "*int8"
V L "p" 8 396 "*int8"
D G "_STDLIB" 11 12 ""
D G "RAND_MAX" 11 19 "32767" "The value of which is the maximum value"
D G "LONG_POINTERS" 11 25 "1"
T G "div_t" 11 33 "{sint8 quot,sint8 rem}"
T G "ldiv_t" 11 38 "{sint16 quot,sint16 rem}" "(C) Copyright 1996,2003 Custom Computer Services           ////"
C L "atoi" 9 3 6 "FUNCTION"
C L "atoi" 11 43 2 "FUNCTION"
C L "atoi" 11 46 1 "*"
C L "atoi" 11 46 1 "*"
F G "atoi" 11 50 "sint8(*int8 s)"
V L "s" 11 50 "*int8" "Syntax: signed int32  atoi32(char * s)"
F G "atoi32" 11 58 "sint32(*int8 s)"
V L "s" 11 58 "*int8"
C L "atoi32" 11 46 3 "FUNCTION"
F G "itoa" 11 79 "*int8(sint32 num,int8 base,*int8 s)"
V L "num" 11 79 "sint32"
V L "base" 11 79 "int8"
V L "s" 11 79 "*int8" "Standard template: signed int16  atol(char * s)"
C L "itoa" 11 81 1 "*"
C L "itoa" 11 81 1 "*"
F G "atol" 11 85 "sint16(*int8 s)"
V L "s" 11 85 "*int8" "Standard template: int16 strtoul(char * s,char *endptr,signed int base)"
C L "atol" 11 87 1 "*"
C L "atol" 11 87 1 "*"
C L "atol" 11 87 1 "*"
C L "atol" 11 87 1 "*"
F G "strtol" 11 93 "sint16(*int8 s,*int8 endptr,sint8 base)"
V L "s" 11 93 "*int8"
V L "endptr" 11 93 "*int8"
V L "base" 11 93 "sint8" "Standard template: int16 strtoul(char * s,char *endptr,signed int base)"
C L "strtol" 11 95 1 "*"
C L "strtol" 11 95 1 "*"
C L "strtol" 11 95 1 "*"
C L "strtol" 11 95 1 "*"
F G "strtoul" 11 101 "int16(*int8 s,*int8 endptr,sint8 base)"
V L "s" 11 101 "*int8"
V L "endptr" 11 101 "*int8"
V L "base" 11 101 "sint8" "Standart template: float strtof(char * s,char *endptr)"
C L "strtoul" 11 95 2 "FUNCTION"
C L "strtoul" 11 103 1 "*"
C L "strtoul" 11 103 1 "*"
C L "strtoul" 11 103 1 "*"
F G "strtof" 11 110 "float(*int8 s,*int8 endptr)"
V L "s" 11 110 "*int8"
V L "endptr" 11 110 "*int8"
D G "strtof48" 11 116 "(s, e) strtof(s, e)"
D G "strtod" 11 117 "(s, e) strtof(s, e)"
C L "strtof" 11 103 1 "FUNCTION"
C L "strtof" 11 120 1 "*"
D G "atof" 11 124 "(s)   strtof(s, 0)"
C L "strtof" 11 120 1 "FUNCTION"
C L "strtof" 11 143 1 "*"
C L "strtof" 11 143 1 "*"
C L "strtof" 11 143 1 "*"
F G "atoe" 11 149 "float(*int8 s)"
V L "s" 11 149 "*int8"
C L "atoe" 11 143 2 "FUNCTION"
C L "atoe" 11 160 1 "*"
C L "atoe" 11 160 1 "*"
C L "atoe" 11 160 1 "*"
C L "atoe" 11 160 1 "*"
C L "atoe" 11 160 1 "*"
F G "rand" 11 169 "int16()"
C L "rand" 11 160 1 "FUNCTION"
C L "rand" 11 171 1 "*"
C L "rand" 11 171 1 "*"
C L "rand" 11 171 1 "*"
C L "rand" 11 171 1 "*"
C L "rand" 11 171 1 "*"
C L "rand" 11 171 1 "*"
C L "rand" 11 171 1 "*"
C L "rand" 11 171 1 "*"
C L "rand" 11 171 1 "*"
C L "rand" 11 171 1 "*"
C L "rand" 11 171 1 "*"
C L "rand" 11 171 1 "*"
C L "rand" 11 171 1 "*"
C L "rand" 11 171 1 "*"
C L "rand" 11 171 1 "*"
F G "srand" 11 191 "void(int32 seed)"
V L "seed" 11 191 "int32" "Memory management functions"
C L "srand" 11 171 3 "FUNCTION"
F G "system" 11 205 "sint8(*int8 string)"
V L "string" 11 205 "*int8" "Searching and sorting utilities"
C L "system" 11 171 1 "FUNCTION"
C L "system" 11 211 1 "*"
C L "system" 11 211 1 "*"
C L "system" 11 211 1 "*"
C L "system" 11 211 1 "*"
C L "system" 11 211 1 "*"
C L "system" 11 211 1 "*"
C L "system" 11 211 1 "*"
C L "system" 11 211 1 "*"
C L "system" 11 211 1 "*"
C L "system" 11 211 1 "*"
C L "system" 11 211 4 "*"
C L "system" 11 229 1 "*"
C L "system" 11 229 1 "*"
C L "system" 11 229 1 "*"
C L "system" 11 229 1 "*"
C L "system" 11 229 1 "*"
C L "system" 11 229 1 "*"
C L "system" 11 229 1 "*"
C L "system" 11 229 1 "*"
D G "labs" 11 249 "abs"
F G "div" 11 251 "div_t(sint8 numer,sint8 denom)"
V L "numer" 11 251 "sint8"
V L "denom" 11 251 "sint8"
F G "ldiv" 11 252 "ldiv_t(sint16 numer,sint16 denom)"
V L "numer" 11 252 "sint16"
V L "denom" 11 252 "sint16" "Multibyte character functions"
C L "ldiv" 11 229 4 "FUNCTION"
C L "ldiv" 9 2 7 "FUNCTION"
C L "ldiv" 8 2 7 "FUNCTION"
F G "div" 11 274 "div_t()"
V L "numer" 11 274 "sint8"
V L "denom" 11 274 "sint8"
V L "val" 11 276 "div_t"
F G "ldiv" 11 282 "ldiv_t()"
V L "numer" 11 282 "sint16"
V L "denom" 11 282 "sint16"
V L "val" 11 284 "ldiv_t"
F G "atoe" 11 361 "float()"
V L "s" 11 361 "*int8"
V L "pow10" 11 363 "float"
V L "result" 11 364 "float"
V L "sign" 11 365 "int8"
V L "expsign" 11 366 "int8"
V L "c" 11 367 "int8"
V L "ptr" 11 368 "int8"
V L "i" 11 369 "int8"
V L "exp" 11 370 "float"
V L "expcnt" 11 371 "int8"
C L "atoe" 11 397 1 "FUNCTION"
F G "atoi" 11 429 "sint8()"
V L "s" 11 429 "*int8"
V L "result" 11 431 "sint8"
V L "sign" 11 432 "int8"
V L "base" 11 432 "int8"
V L "index" 11 432 "int8"
V L "c" 11 433 "int8"
C L "atoi" 11 397 1 "FUNCTION"
C L "atoi" 11 397 1 "FUNCTION"
C L "atoi" 11 397 1 "FUNCTION"
C L "atoi" 11 397 1 "FUNCTION"
C L "atoi" 11 397 1 "FUNCTION"
C L "atoi" 11 397 1 "FUNCTION"
F G "atol" 11 498 "sint16()"
V L "s" 11 498 "*int8"
V L "result" 11 500 "sint16"
V L "sign" 11 501 "int8"
V L "base" 11 501 "int8"
V L "index" 11 501 "int8"
V L "c" 11 502 "int8"
C L "atol" 11 397 1 "FUNCTION"
C L "atol" 11 397 1 "FUNCTION"
C L "atol" 11 397 1 "FUNCTION"
C L "atol" 11 397 1 "FUNCTION"
C L "mult_with10" 11 397 1 "FUNCTION"
F G "mult_with10" 11 565 "sint32(int32 num)"
V L "num" 11 565 "int32"
F G "atoi32" 11 571 "sint32()"
V L "s" 11 571 "*int8"
V L "result" 11 573 "sint32"
V L "sign" 11 574 "int8"
V L "base" 11 574 "int8"
V L "index" 11 574 "int8"
V L "c" 11 575 "int8"
C L "atoi32" 11 397 1 "FUNCTION"
C L "atoi32" 11 397 1 "FUNCTION"
C L "atoi32" 11 397 1 "FUNCTION"
C L "atoi32" 11 397 1 "FUNCTION"
C L "atoi32" 11 397 1 "FUNCTION"
F G "itoa" 11 770 "*int8()"
V L "num" 11 770 "sint32"
V L "base" 11 770 "int8"
V L "s" 11 770 "*int8"
V L "temp" 11 772 "int32"
V L "i" 11 773 "int8"
V L "sign" 11 773 "int8"
V L "cnt" 11 773 "int8"
V L "c" 11 774 "int8"
C L "itoa" 11 397 1 "FUNCTION"
C L "itoa" 11 397 1 "FUNCTION"
C L "itoa" 11 397 1 "FUNCTION"
C L "itoa" 11 397 1 "FUNCTION"
C L "itoa" 11 397 1 "FUNCTION"
F G "strtof" 11 807 "float()"
V L "s" 11 807 "*int8"
V L "endptr" 11 807 "*int8"
V L "pow10" 11 809 "float"
V L "result" 11 810 "float"
V L "skip" 11 811 "int1"
V L "sign" 11 811 "int1"
V L "point" 11 811 "int1"
V L "c" 11 812 "int8"
V L "ptr" 11 813 "int8"
F G "strtoul" 11 1025 "int16()"
V L "s" 11 1025 "*int8"
V L "endptr" 11 1025 "*int8"
V L "base" 11 1025 "sint8"
V L "sc" 11 1027 "*int8"
V L "s1" 11 1027 "*int8"
V L "sd" 11 1027 "*int8"
V L "x" 11 1028 "int16"
V L "sign" 11 1029 "int8"
V L "digits" 11 1030 "int8[1]"
C L "strtoul" 11 397 1 "FUNCTION"
C L "strtoul" 11 397 1 "FUNCTION"
C L "strtoul" 11 397 1 "FUNCTION"
F G "strtol" 11 1087 "sint16()"
V L "s" 11 1087 "*int8"
V L "endptr" 11 1087 "*int8"
V L "base" 11 1087 "sint8"
V L "sc" 11 1089 "*int8"
V L "s1" 11 1089 "*int8"
V L "sd" 11 1089 "*int8"
V L "x" 11 1090 "sint16"
V L "sign" 11 1091 "int8"
V L "digits" 11 1092 "int8[1]"
C L "strtol" 11 397 1 "FUNCTION"
C L "strtol" 11 397 1 "FUNCTION"
C L "strtol" 11 397 1 "FUNCTION"
F G "system" 11 1150 "sint8(*int8 s,int8 n)"
V L "string" 11 1150 "*int8"
F G "mblen" 11 1155 "int8(*int8 string,int8 n)"
V L "s" 11 1155 "*int8"
V L "n" 11 1155 "int8"
F G "mbtowc" 11 1160 "int8(*int8 pwc,*int8 s,int8 n)"
V L "pwc" 11 1160 "*int8"
V L "s" 11 1160 "*int8"
V L "n" 11 1160 "int8"
F G "wctomb" 11 1166 "int8(*int8 s,int8 wchar)"
V L "s" 11 1166 "*int8"
V L "wchar" 11 1166 "int8"
F G "mbstowcs" 11 1172 "int8(*int8 pwcs,*int8 s,int8 n)"
V L "pwcs" 11 1172 "*int8"
V L "s" 11 1172 "*int8"
V L "n" 11 1172 "int8"
F G "wcstombs" 11 1178 "int8(*int8 s,*int8 pwcs,int8 n)"
V L "s" 11 1178 "*int8"
V L "pwcs" 11 1178 "*int8"
V L "n" 11 1178 "int8"
V G "_Randseed" 11 1188 "int32"
F G "rand" 11 1190 "int16(int16 ,int16 )"
F G "srand" 11 1196 "void(*int8 p1,*int8 p2)"
V L "seed" 11 1196 "int32"
T G "*_Cmpfun" 11 1206 "sint8(int32 seed,*int8 p2)"
V L "p1" 11 1206 "*int8"
V L "p2" 11 1206 "*int8"
F G "qsort" 11 1213 "void(*int8 qdata,int8 qitems,int8 qsize,_Cmpfun cmp)"
V L "qdata" 11 1213 "*int8"
V L "qitems" 11 1213 "int8"
V L "qsize" 11 1213 "int8"
V L "cmp" 11 1213 "_Cmpfun"
V L "m" 11 1214 "int8"
V L "j" 11 1214 "int8"
V L "i" 11 1214 "int8"
V L "l" 11 1214 "int8"
V L "done" 11 1215 "int1"
V L "t" 11 1216 "int8[16]"
F G "bsearch" 11 1241 "*int8(*int8 key,*int8 base,int8 num,int8 width,_Cmpfun cmp)"
V L "key" 11 1241 "*int8"
V L "base" 11 1241 "*int8"
V L "num" 11 1241 "int8"
V L "width" 11 1241 "int8"
V L "cmp" 11 1241 "_Cmpfun"
V L "p" 11 1243 "*int8"
V L "q" 11 1243 "*int8"
V L "n" 11 1244 "int8"
V L "pivot" 11 1245 "int8"
V L "val" 11 1246 "sint8"
C L "bsearch" 11 397 1 "FUNCTION"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
D G "HELPERS_H" 13 44 ""
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 2 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
F G "ReadStringUART" 13 53 "int8(*int8 Dest,int8 BufferLen)"
V L "Dest" 13 53 "*int8"
V L "BufferLen" 13 53 "int8"
F G "hexatob" 13 54 "int8(WORD_VAL AsciiChars)"
V L "AsciiChars" 13 54 "WORD_VAL"
F G "btohexa_high" 13 55 "int8(int8 b)"
V L "b" 13 55 "int8"
F G "btohexa_low" 13 56 "int8(int8 b)"
V L "b" 13 56 "int8"
F G "swaps" 13 58 "WORD(WORD_VAL v)"
V L "v" 13 58 "WORD_VAL"
F G "swapl" 13 59 "DWORD(DWORD_VAL v)"
V L "v" 13 59 "DWORD_VAL"
F G "CalcIPChecksum" 13 61 "WORD(*int8 buffer,WORD count)"
V L "buffer" 13 61 "*int8"
V L "len" 13 61 "WORD"
F G "CalcIPBufferChecksum" 13 62 "WORD(WORD len)"
V L "len" 13 62 "WORD" "*                  MAC Module Defs for Microchip Stack"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
D G "MAC_H" 14 41 ""
C L "CalcIPBufferChecksum" 15 1 1 "*"
C L "CalcIPBufferChecksum" 15 1 1 "*"
C L "CalcIPBufferChecksum" 15 1 1 "*"
C L "CalcIPBufferChecksum" 15 1 1 "*"
C L "CalcIPBufferChecksum" 15 1 1 "*"
C L "CalcIPBufferChecksum" 15 1 1 "*"
C L "CalcIPBufferChecksum" 15 1 1 "*"
C L "CalcIPBufferChecksum" 15 1 1 "*"
C L "CalcIPBufferChecksum" 15 1 1 "*"
C L "CalcIPBufferChecksum" 15 1 1 "*"
C L "CalcIPBufferChecksum" 15 1 1 "*"
C L "CalcIPBufferChecksum" 15 1 1 "*"
C L "CalcIPBufferChecksum" 15 1 1 "*"
C L "CalcIPBufferChecksum" 15 1 1 "*"
C L "CalcIPBufferChecksum" 15 1 1 "*"
C L "CalcIPBufferChecksum" 15 1 1 "*"
C L "CalcIPBufferChecksum" 15 1 1 "*"
C L "CalcIPBufferChecksum" 15 1 1 "*"
C L "CalcIPBufferChecksum" 15 1 1 "*"
C L "CalcIPBufferChecksum" 15 1 1 "*"
C L "CalcIPBufferChecksum" 15 1 1 "*"
C L "CalcIPBufferChecksum" 15 1 1 "*"
C L "CalcIPBufferChecksum" 15 1 1 "*"
C L "CalcIPBufferChecksum" 15 1 1 "*"
C L "CalcIPBufferChecksum" 15 1 1 "*"
C L "CalcIPBufferChecksum" 15 1 1 "*"
C L "CalcIPBufferChecksum" 15 1 1 "*"
C L "CalcIPBufferChecksum" 15 1 1 "*"
C L "CalcIPBufferChecksum" 15 1 1 "*"
C L "CalcIPBufferChecksum" 15 1 1 "*"
C L "CalcIPBufferChecksum" 15 1 1 "*"
C L "CalcIPBufferChecksum" 15 1 1 "*"
C L "CalcIPBufferChecksum" 15 1 1 "*"
C L "CalcIPBufferChecksum" 15 1 2 "*"
C L "CalcIPBufferChecksum" 15 1 1 "*"
C L "CalcIPBufferChecksum" 15 1 1 "*"
D G "MAC_IP" 14 45 " (0u)"
D G "MAC_ARP" 14 46 " (0x6u)"
D G "MAC_UNKNOWN" 14 47 " (0x0ffu)"
D G "INVALID_BUFFER" 14 49 " (0xffu)"
C L "CalcIPBufferChecksum" 14 51 1 "*"
C L "CalcIPBufferChecksum" 16 1 1 "*"
C L "CalcIPBufferChecksum" 16 1 1 "*"
C L "CalcIPBufferChecksum" 16 1 1 "*"
C L "CalcIPBufferChecksum" 16 1 1 "*"
C L "CalcIPBufferChecksum" 16 1 1 "*"
C L "CalcIPBufferChecksum" 16 1 1 "*"
C L "CalcIPBufferChecksum" 16 1 1 "*"
C L "CalcIPBufferChecksum" 16 1 1 "*"
C L "CalcIPBufferChecksum" 16 1 1 "*"
C L "CalcIPBufferChecksum" 16 1 1 "*"
C L "CalcIPBufferChecksum" 16 1 1 "*"
C L "CalcIPBufferChecksum" 16 1 1 "*"
C L "CalcIPBufferChecksum" 16 1 1 "*"
C L "CalcIPBufferChecksum" 16 1 1 "*"
C L "CalcIPBufferChecksum" 16 1 1 "*"
C L "CalcIPBufferChecksum" 16 1 1 "*"
C L "CalcIPBufferChecksum" 16 1 1 "*"
C L "CalcIPBufferChecksum" 16 1 1 "*"
C L "CalcIPBufferChecksum" 16 1 1 "*"
C L "CalcIPBufferChecksum" 16 1 1 "*"
C L "CalcIPBufferChecksum" 16 1 1 "*"
C L "CalcIPBufferChecksum" 16 1 1 "*"
C L "CalcIPBufferChecksum" 16 1 1 "*"
C L "CalcIPBufferChecksum" 16 1 1 "*"
C L "CalcIPBufferChecksum" 16 1 1 "*"
C L "CalcIPBufferChecksum" 16 1 1 "*"
C L "CalcIPBufferChecksum" 16 1 1 "*"
C L "CalcIPBufferChecksum" 16 1 1 "*"
D G "ENC28J60_H" 16 42 ""
T G "TXSTATUS" 16 68 "{int8[7] v}"
T G "RXSTATUS" 16 91 "{int8[4] v}" "* Register locations"
D G "ERDPTL" 16 97 "0x00"
D G "ERDPTH" 16 98 "0x01"
D G "EWRPTL" 16 99 "0x02"
D G "EWRPTH" 16 100 "0x03"
D G "ETXSTL" 16 101 "0x04"
D G "ETXSTH" 16 102 "0x05"
D G "ETXNDL" 16 103 "0x06"
D G "ETXNDH" 16 104 "0x07"
D G "ERXSTL" 16 105 "0x08"
D G "ERXSTH" 16 106 "0x09"
D G "ERXNDL" 16 107 "0x0A"
D G "ERXNDH" 16 108 "0x0B"
D G "ERXRDPTL" 16 109 "0x0C"
D G "ERXRDPTH" 16 110 "0x0D"
D G "ERXWRPTL" 16 111 "0x0E"
D G "ERXWRPTH" 16 112 "0x0F"
D G "EDMASTL" 16 113 "0x10"
D G "EDMASTH" 16 114 "0x11"
D G "EDMANDL" 16 115 "0x12"
D G "EDMANDH" 16 116 "0x13"
D G "EDMADSTL" 16 117 "0x14"
D G "EDMADSTH" 16 118 "0x15"
D G "EDMACSL" 16 119 "0x16"
D G "EDMACSH" 16 120 "0x17"
D G "EIE" 16 124 "0x1B"
D G "EIR" 16 125 "0x1C"
D G "ESTAT" 16 126 "0x1D"
D G "ECON2" 16 127 "0x1E"
D G "ECON1" 16 128 "0x1F"
D G "EHT0" 16 131 "0x100"
D G "EHT1" 16 132 "0x101"
D G "EHT2" 16 133 "0x102"
D G "EHT3" 16 134 "0x103"
D G "EHT4" 16 135 "0x104"
D G "EHT5" 16 136 "0x105"
D G "EHT6" 16 137 "0x106"
D G "EHT7" 16 138 "0x107"
D G "EPMM0" 16 139 "0x108"
D G "EPMM1" 16 140 "0x109"
D G "EPMM2" 16 141 "0x10A"
D G "EPMM3" 16 142 "0x10B"
D G "EPMM4" 16 143 "0x10C"
D G "EPMM5" 16 144 "0x10D"
D G "EPMM6" 16 145 "0x10E"
D G "EPMM7" 16 146 "0x10F"
D G "EPMCSL" 16 147 "0x110"
D G "EPMCSH" 16 148 "0x111"
D G "EPMOL" 16 151 "0x114"
D G "EPMOH" 16 152 "0x115"
D G "ERXFCON" 16 155 "0x118"
D G "EPKTCNT" 16 156 "0x119"
D G "MACON1" 16 165 "0x200"
D G "MACON2" 16 166 "0x201"
D G "MACON3" 16 168 "0x202"
D G "MACON4" 16 169 "0x203"
D G "MABBIPG" 16 170 "0x204"
D G "MAIPGL" 16 172 "0x206"
D G "MAIPGH" 16 173 "0x207"
D G "MACLCON1" 16 174 "0x208"
D G "MACLCON2" 16 175 "0x209"
D G "MAMXFLL" 16 176 "0x20A"
D G "MAMXFLH" 16 177 "0x20B"
D G "MICMD" 16 184 "0x212"
D G "MIREGADR" 16 186 "0x214"
D G "MIWRL" 16 188 "0x216"
D G "MIWRH" 16 189 "0x217"
D G "MIRDL" 16 190 "0x218"
D G "MIRDH" 16 191 "0x219"
D G "MAADR5" 16 200 "0x300"
D G "MAADR6" 16 201 "0x301"
D G "MAADR3" 16 202 "0x302"
D G "MAADR4" 16 203 "0x303"
D G "MAADR1" 16 204 "0x304"
D G "MAADR2" 16 205 "0x305"
D G "EBSTSD" 16 206 "0x306"
D G "EBSTCON" 16 207 "0x307"
D G "EBSTCSL" 16 208 "0x308"
D G "EBSTCSH" 16 209 "0x309"
D G "MISTAT" 16 210 "0x30A"
D G "EREVID" 16 218 "0x312"
D G "ECOCON" 16 221 "0x315"
D G "EFLOCON" 16 223 "0x317"
D G "EPAUSL" 16 224 "0x318"
D G "EPAUSH" 16 225 "0x319"
C L "CalcIPBufferChecksum" 16 1 7 "FUNCTION"
C L "CalcIPBufferChecksum" 16 1 1 "FUNCTION"
C L "CalcIPBufferChecksum" 16 1 1 "FUNCTION"
C L "CalcIPBufferChecksum" 16 1 1 "FUNCTION"
C L "CalcIPBufferChecksum" 16 1 1 "FUNCTION"
C L "CalcIPBufferChecksum" 16 1 1 "FUNCTION"
C L "CalcIPBufferChecksum" 16 1 1 "FUNCTION"
C L "CalcIPBufferChecksum" 16 1 1 "FUNCTION"
C L "CalcIPBufferChecksum" 16 1 1 "FUNCTION"
C L "CalcIPBufferChecksum" 16 1 1 "FUNCTION"
C L "CalcIPBufferChecksum" 16 1 1 "FUNCTION"
C L "CalcIPBufferChecksum" 16 1 1 "FUNCTION"
C L "CalcIPBufferChecksum" 16 1 1 "FUNCTION"
C L "CalcIPBufferChecksum" 16 1 1 "FUNCTION"
C L "CalcIPBufferChecksum" 16 1 1 "FUNCTION"
T G "REG" 16 406 "{int8 Val}" "* PH Register Locations"
D G "PHCON1" 16 412 "0x00"
D G "PHSTAT1" 16 413 "0x01"
D G "PHID1" 16 414 "0x02"
D G "PHID2" 16 415 "0x03"
D G "PHCON2" 16 416 "0x10"
D G "PHSTAT2" 16 417 "0x11"
D G "PHIE" 16 418 "0x12"
D G "PHIR" 16 419 "0x13"
D G "PHLCON" 16 420 "0x14"
C L "CalcIPBufferChecksum" 16 1 1 "FUNCTION"
C L "CalcIPBufferChecksum" 16 1 1 "FUNCTION"
C L "CalcIPBufferChecksum" 16 1 1 "FUNCTION"
C L "CalcIPBufferChecksum" 16 1 1 "FUNCTION"
C L "CalcIPBufferChecksum" 16 1 1 "FUNCTION"
C L "CalcIPBufferChecksum" 16 1 1 "FUNCTION"
C L "CalcIPBufferChecksum" 16 1 1 "FUNCTION"
C L "CalcIPBufferChecksum" 16 1 1 "FUNCTION"
T G "PHYREG" 16 546 "{int16 Val,WORD_VAL VAL}" "* Individual Register Bits"
D G "EIE_INTIE" 16 555 " (1<<7)"
D G "EIE_PKTIE" 16 556 " (1<<6)"
D G "EIE_DMAIE" 16 557 " (1<<5)"
D G "EIE_LINKIE" 16 558 " (1<<4)"
D G "EIE_TXIE" 16 559 " (1<<3)"
D G "EIE_TXERIE" 16 560 " (1<<1)"
D G "EIE_RXERIE" 16 561 " (1)"
D G "EIR_PKTIF" 16 564 " (1<<6)"
D G "EIR_DMAIF" 16 565 " (1<<5)"
D G "EIR_LINKIF" 16 566 " (1<<4)"
D G "EIR_TXIF" 16 567 " (1<<3)"
D G "EIR_TXERIF" 16 568 " (1<<1)"
D G "EIR_RXERIF" 16 569 " (1)"
D G "ESTAT_INT" 16 572 " (1<<7)"
D G "ESTAT_BUFFER" 16 573 " (1<<6)"
D G "ESTAT_LATECOL" 16 574 " (1<<4)"
D G "ESTAT_RXBUSY" 16 575 " (1<<2)"
D G "ESTAT_TXABRT" 16 576 " (1<<1)"
D G "ESTAT_CLKRDY" 16 577 " (1)"
D G "ECON2_AUTOINC" 16 580 " (1<<7)"
D G "ECON2_PKTDEC" 16 581 " (1<<6)"
D G "ECON2_PWRSV" 16 582 " (1<<5)"
D G "ECON2_VRPS" 16 583 " (1<<3)"
D G "ECON1_TXRST" 16 586 " (1<<7)"
D G "ECON1_RXRST" 16 587 " (1<<6)"
D G "ECON1_DMAST" 16 588 " (1<<5)"
D G "ECON1_CSUMEN" 16 589 " (1<<4)"
D G "ECON1_TXRTS" 16 590 " (1<<3)"
D G "ECON1_RXEN" 16 591 " (1<<2)"
D G "ECON1_BSEL1" 16 592 " (1<<1)"
D G "ECON1_BSEL0" 16 593 " (1)"
D G "ERXFCON_UCEN" 16 596 " (1<<7)"
D G "ERXFCON_ANDOR" 16 597 " (1<<6)"
D G "ERXFCON_CRCEN" 16 598 " (1<<5)"
D G "ERXFCON_PMEN" 16 599 " (1<<4)"
D G "ERXFCON_MPEN" 16 600 " (1<<3)"
D G "ERXFCON_HTEN" 16 601 " (1<<2)"
D G "ERXFCON_MCEN" 16 602 " (1<<1)"
D G "ERXFCON_BCEN" 16 603 " (1)"
D G "MACON1_TXPAUS" 16 606 " (1<<3)"
D G "MACON1_RXPAUS" 16 607 " (1<<2)"
D G "MACON1_PASSALL" 16 608 " (1<<1)"
D G "MACON1_MARXEN" 16 609 " (1)"
D G "MACON3_PADCFG2" 16 612 " (1<<7)"
D G "MACON3_PADCFG1" 16 613 " (1<<6)"
D G "MACON3_PADCFG0" 16 614 " (1<<5)"
D G "MACON3_TXCRCEN" 16 615 " (1<<4)"
D G "MACON3_PHDRLEN" 16 616 " (1<<3)"
D G "MACON3_HFRMEN" 16 617 " (1<<2)"
D G "MACON3_FRMLNEN" 16 618 " (1<<1)"
D G "MACON3_FULDPX" 16 619 " (1)"
D G "MACON4_DEFER" 16 622 " (1<<6)"
D G "MACON4_BPEN" 16 623 " (1<<5)"
D G "MACON4_NOBKOFF" 16 624 " (1<<4)"
D G "MICMD_MIISCAN" 16 628 " (1<<1)"
D G "MICMD_MIIRD" 16 629 " (1)"
D G "EBSTCON_PSV2" 16 632 " (1<<7)"
D G "EBSTCON_PSV1" 16 633 " (1<<6)"
D G "EBSTCON_PSV0" 16 634 " (1<<5)"
D G "EBSTCON_PSEL" 16 635 " (1<<4)"
D G "EBSTCON_TMSEL1" 16 636 " (1<<3)"
D G "EBSTCON_TMSEL0" 16 637 " (1<<2)"
D G "EBSTCON_TME" 16 638 " (1<<1)"
D G "EBSTCON_BISTST" 16 639 " (1)"
D G "MISTAT_NVALID" 16 642 " (1<<2)"
D G "MISTAT_SCAN" 16 643 " (1<<1)"
D G "MISTAT_BUSY" 16 644 " (1)"
D G "ECOCON_COCON2" 16 647 " (1<<2)"
D G "ECOCON_COCON1" 16 648 " (1<<1)"
D G "ECOCON_COCON0" 16 649 " (1)"
D G "EFLOCON_FULDPXS" 16 652 " (1<<2)"
D G "EFLOCON_FCEN1" 16 653 " (1<<1)"
D G "EFLOCON_FCEN0" 16 654 " (1)"
D G "PHCON1_PRST" 16 661 " (1ul<<15)"
D G "PHCON1_PLOOPBK" 16 662 " (1ul<<14)"
D G "PHCON1_PPWRSV" 16 663 " (1ul<<11)"
D G "PHCON1_PDPXMD" 16 664 " (1ul<<8)"
D G "PHSTAT1_PFDPX" 16 667 " (1ul<<12)"
D G "PHSTAT1_PHDPX" 16 668 " (1ul<<11)"
D G "PHSTAT1_LLSTAT" 16 669 " (1ul<<2)"
D G "PHSTAT1_JBSTAT" 16 670 " (1ul<<1)"
D G "PHID2_PID24" 16 673 " (1ul<<15)"
D G "PHID2_PID23" 16 674 " (1ul<<14)"
D G "PHID2_PID22" 16 675 " (1ul<<13)"
D G "PHID2_PID21" 16 676 " (1ul<<12)"
D G "PHID2_PID20" 16 677 " (1ul<<11)"
D G "PHID2_PID19" 16 678 " (1ul<<10)"
D G "PHID2_PPN5" 16 679 " (1ul<<9)"
D G "PHID2_PPN4" 16 680 " (1ul<<8)"
D G "PHID2_PPN3" 16 681 " (1ul<<7)"
D G "PHID2_PPN2" 16 682 " (1ul<<6)"
D G "PHID2_PPN1" 16 683 " (1ul<<5)"
D G "PHID2_PPN0" 16 684 " (1ul<<4)"
D G "PHID2_PREV3" 16 685 " (1ul<<3)"
D G "PHID2_PREV2" 16 686 " (1ul<<2)"
D G "PHID2_PREV1" 16 687 " (1ul<<1)"
D G "PHID2_PREV0" 16 688 " (1ul)"
D G "PHCON2_FRCLNK" 16 691 " (1ul<<14)"
D G "PHCON2_TXDIS" 16 692 " (1ul<<13)"
D G "PHCON2_JABBER" 16 693 " (1ul<<10)"
D G "PHCON2_HDLDIS" 16 694 " (1ul<<8)"
D G "PHSTAT2_TXSTAT" 16 697 " (1ul<<13)"
D G "PHSTAT2_RXSTAT" 16 698 " (1ul<<12)"
D G "PHSTAT2_COLSTAT" 16 699 " (1ul<<11)"
D G "PHSTAT2_LSTAT" 16 700 " (1ul<<10)"
D G "PHSTAT2_DPXSTAT" 16 701 " (1ul<<9)"
D G "PHSTAT2_PLRITY" 16 702 " (1ul<<5)"
D G "PHIE_PLNKIE" 16 705 " (1ul<<4)"
D G "PHIE_PGEIE" 16 706 " (1ul<<1)"
D G "PHIR_PLNKIF" 16 709 " (1ul<<4)"
D G "PHIR_PGIF" 16 710 " (1ul<<2)"
D G "PHLCON_LACFG3" 16 713 " (1ul<<11)"
D G "PHLCON_LACFG2" 16 714 " (1ul<<10)"
D G "PHLCON_LACFG1" 16 715 " (1ul<<9)"
D G "PHLCON_LACFG0" 16 716 " (1ul<<8)"
D G "PHLCON_LBCFG3" 16 717 " (1ul<<7)"
D G "PHLCON_LBCFG2" 16 718 " (1ul<<6)"
D G "PHLCON_LBCFG1" 16 719 " (1ul<<5)"
D G "PHLCON_LBCFG0" 16 720 " (1ul<<4)"
D G "PHLCON_LFRQ1" 16 721 " (1ul<<3)"
D G "PHLCON_LFRQ0" 16 722 " (1ul<<2)"
D G "PHLCON_STRCH" 16 723 " (1ul<<1)"
C L "CalcIPBufferChecksum" 14 64 1 "FUNCTION"
E G "HALF" 14 67 "0"
E G "FULL" 14 68 "1"
E G "USE_PHY" 14 69 "2"
T G "DUPLEX" 14 69 "_DUPLEX"
E G "Divide1" 14 73 "0"
E G "Divide2" 14 74 "1"
E G "Divide3" 14 75 "2"
E G "Divide4" 14 76 "3"
E G "Divide8" 14 77 "4"
T G "CLK_CONFIG" 14 77 "_CLK_CONFIG"
F G "MACSetDuplex" 14 78 "void(DUPLEX DuplexState)"
V L "DuplexState" 14 78 "DUPLEX"
F G "CalcIPBufferChecksum" 14 79 "WORD()"
V L "len" 14 79 "WORD"
F G "MACPowerDown" 14 81 "void(WORD len)"
F G "MACPowerUp" 14 82 "void()"
F G "MACCalcRxChecksum" 14 83 "WORD(WORD offset,WORD len)"
V L "offset" 14 83 "WORD"
V L "len" 14 83 "WORD"
F G "MACCalcTxChecksum" 14 84 "WORD(WORD offset,WORD len)"
V L "offset" 14 84 "WORD"
V L "len" 14 84 "WORD"
F G "MACCopyRxToTx" 14 85 "void(WORD RxOffset,WORD TxOffset,WORD len)"
V L "RxOffset" 14 85 "WORD"
V L "TxOffset" 14 85 "WORD"
V L "len" 14 85 "WORD"
F G "WritePHYReg" 14 86 "void(int8 Register,WORD Data)"
V L "Register" 14 86 "int8"
V L "Data" 14 86 "WORD"
F G "ReadPHYReg" 14 87 "PHYREG(int8 Register)"
V L "Register" 14 87 "int8"
F G "SetRXHashTableEntry" 14 88 "void(MAC_ADDR DestMACAddr)"
V L "DestMACAddr" 14 88 "MAC_ADDR" "* Macro:           void SetLEDConfig(WORD NewConfig)"
C L "SetRXHashTableEntry" 14 91 1 "*"
C L "SetRXHashTableEntry" 14 91 1 "*"
C L "SetRXHashTableEntry" 14 91 1 "*"
C L "SetRXHashTableEntry" 14 91 1 "*"
C L "SetRXHashTableEntry" 14 91 1 "*"
C L "SetRXHashTableEntry" 14 91 1 "*"
C L "SetRXHashTableEntry" 14 91 1 "*"
C L "SetRXHashTableEntry" 14 91 1 "*"
C L "SetRXHashTableEntry" 14 91 1 "*"
C L "SetRXHashTableEntry" 14 91 1 "*"
C L "SetRXHashTableEntry" 14 91 1 "*"
C L "SetRXHashTableEntry" 14 91 1 "*"
C L "SetRXHashTableEntry" 14 91 1 "*"
C L "SetRXHashTableEntry" 14 91 1 "*"
C L "SetRXHashTableEntry" 14 91 1 "*"
C L "SetRXHashTableEntry" 14 91 1 "*"
C L "SetRXHashTableEntry" 14 91 1 "*"
C L "SetRXHashTableEntry" 14 91 1 "*"
C L "SetRXHashTableEntry" 14 91 1 "*"
C L "SetRXHashTableEntry" 14 91 1 "*"
C L "SetRXHashTableEntry" 14 91 1 "*"
C L "SetRXHashTableEntry" 14 91 1 "*"
C L "SetRXHashTableEntry" 14 91 1 "*"
C L "SetRXHashTableEntry" 14 91 1 "*"
C L "SetRXHashTableEntry" 14 91 1 "*"
C L "SetRXHashTableEntry" 14 91 1 "*"
C L "SetRXHashTableEntry" 14 91 1 "*"
C L "SetRXHashTableEntry" 14 91 1 "*"
C L "SetRXHashTableEntry" 14 91 1 "*"
C L "SetRXHashTableEntry" 14 91 1 "*"
C L "SetRXHashTableEntry" 14 91 1 "*"
C L "SetRXHashTableEntry" 14 91 1 "*"
C L "SetRXHashTableEntry" 14 91 1 "*"
C L "SetRXHashTableEntry" 14 91 1 "*"
C L "SetRXHashTableEntry" 14 91 1 "*"
C L "SetRXHashTableEntry" 14 91 1 "*"
D G "SetLEDConfig" 14 139 "(NewConfig)      WritePHYReg(PHLCON, NewConfig)"
C L "SetRXHashTableEntry" 14 142 1 "*"
C L "SetRXHashTableEntry" 14 142 1 "*"
C L "SetRXHashTableEntry" 14 142 1 "*"
C L "SetRXHashTableEntry" 14 142 1 "*"
C L "SetRXHashTableEntry" 14 142 1 "*"
C L "SetRXHashTableEntry" 14 142 1 "*"
C L "SetRXHashTableEntry" 14 142 1 "*"
C L "SetRXHashTableEntry" 14 142 1 "*"
C L "SetRXHashTableEntry" 14 142 1 "*"
C L "SetRXHashTableEntry" 14 142 1 "*"
C L "SetRXHashTableEntry" 14 142 1 "*"
C L "SetRXHashTableEntry" 14 142 1 "*"
C L "SetRXHashTableEntry" 14 142 1 "*"
C L "SetRXHashTableEntry" 14 142 1 "*"
C L "SetRXHashTableEntry" 14 142 1 "*"
C L "SetRXHashTableEntry" 14 142 1 "*"
C L "SetRXHashTableEntry" 14 142 1 "*"
C L "SetRXHashTableEntry" 14 142 1 "*"
C L "SetRXHashTableEntry" 14 142 1 "*"
C L "SetRXHashTableEntry" 14 142 1 "*"
C L "SetRXHashTableEntry" 14 142 1 "*"
C L "SetRXHashTableEntry" 14 142 1 "*"
C L "SetRXHashTableEntry" 14 142 1 "*"
C L "SetRXHashTableEntry" 14 142 1 "*"
C L "SetRXHashTableEntry" 14 142 1 "*"
C L "SetRXHashTableEntry" 14 142 1 "*"
C L "SetRXHashTableEntry" 14 142 1 "*"
C L "SetRXHashTableEntry" 14 142 1 "*"
C L "SetRXHashTableEntry" 14 142 1 "*"
C L "SetRXHashTableEntry" 14 142 1 "*"
C L "SetRXHashTableEntry" 14 142 1 "*"
C L "SetRXHashTableEntry" 14 142 1 "*"
C L "SetRXHashTableEntry" 14 142 1 "*"
C L "SetRXHashTableEntry" 14 142 1 "*"
C L "SetRXHashTableEntry" 14 142 1 "*"
D G "GetLEDConfig" 14 188 "()      ReadPHYReg(PHLCON).Val"
F G "MACInit" 14 193 "void()"
F G "MACIsLinked" 14 194 "int8()"
F G "MACGetHeader" 14 196 "int8(*MAC_ADDR remote,*int8 type)"
V L "remote" 14 196 "*MAC_ADDR"
V L "type" 14 196 "*int8"
F G "MACSetRxBuffer" 14 197 "void(WORD offset)"
V L "offset" 14 197 "WORD"
F G "MACGet" 14 198 "int8()"
F G "MACGetArray" 14 199 "WORD(*int8 val,WORD len)"
V L "val" 14 199 "*int8"
V L "len" 14 199 "WORD"
F G "MACDiscardRx" 14 200 "void()"
F G "MACGetFreeRxSize" 14 201 "WORD()"
F G "MACPutHeader" 14 203 "void(*MAC_ADDR remote,int8 type,WORD dataLen)"
V L "remote" 14 203 "*MAC_ADDR"
V L "type" 14 204 "int8"
V L "dataLen" 14 205 "WORD"
F G "MACIsTxReady" 14 206 "int8(int8 HighPriority)"
V L "HighPriority" 14 206 "int8"
F G "MACSetTxBuffer" 14 207 "void(BUFFER buffer,WORD offset)"
V L "buffer" 14 207 "BUFFER"
V L "offset" 14 207 "WORD"
F G "MACPut" 14 208 "void(int8 val)"
V L "val" 14 208 "int8"
F G "MACPutArray" 14 209 "void(*int8 val,WORD len)"
V L "val" 14 209 "*int8"
V L "len" 14 209 "WORD"
F G "MACDiscardTx" 14 210 "void(BUFFER buffer)"
V L "buffer" 14 210 "BUFFER"
F G "MACFlush" 14 211 "void()"
F G "MACGetTxBuffer" 14 212 "BUFFER(int8 HighPriority)"
V L "HighPriority" 14 212 "int8" "extern *"
V G "CurrentTxBuffer" 14 215 "BUFFER" "* Function:        BYTE hexatob(WORD_VAL AsciiChars)"
C L "MACGetTxBuffer" 12 51 1 "*"
C L "MACGetTxBuffer" 12 51 1 "*"
C L "MACGetTxBuffer" 12 51 1 "*"
C L "MACGetTxBuffer" 12 51 1 "*"
C L "MACGetTxBuffer" 12 51 1 "*"
C L "MACGetTxBuffer" 12 51 1 "*"
C L "MACGetTxBuffer" 12 51 1 "*"
F G "hexatob" 12 67 "int8()"
V L "AsciiChars" 12 67 "WORD_VAL" "Convert lowercase to uppercase"
C L "hexatob" 12 51 1 "FUNCTION"
C L "hexatob" 12 51 1 "FUNCTION"
C L "btohexa_high" 12 90 1 "*"
C L "btohexa_high" 12 90 1 "*"
C L "btohexa_high" 12 90 1 "*"
C L "btohexa_high" 12 90 1 "*"
C L "btohexa_high" 12 90 1 "*"
C L "btohexa_high" 12 90 1 "*"
C L "btohexa_high" 12 90 1 "*"
C L "btohexa_high" 12 90 1 "*"
C L "btohexa_high" 12 90 1 "*"
C L "btohexa_high" 12 90 1 "*"
F G "btohexa_high" 12 108 "int8(WORD_VAL AsciiChars)"
V L "b" 12 108 "int8"
C L "btohexa_low" 12 114 1 "*"
C L "btohexa_low" 12 114 1 "*"
C L "btohexa_low" 12 114 1 "*"
C L "btohexa_low" 12 114 1 "*"
C L "btohexa_low" 12 114 1 "*"
C L "btohexa_low" 12 114 1 "*"
C L "btohexa_low" 12 114 1 "*"
C L "btohexa_low" 12 114 1 "*"
C L "btohexa_low" 12 114 1 "*"
C L "btohexa_low" 12 114 1 "*"
F G "btohexa_low" 12 132 "int8(int8 b)"
V L "b" 12 132 "int8"
F G "swaps" 12 138 "WORD(int8 b)"
V L "v" 12 138 "WORD_VAL"
V L "new" 12 140 "WORD_VAL"
F G "swapl" 12 148 "DWORD()"
V L "v" 12 148 "DWORD_VAL"
V L "new" 12 150 "DWORD_VAL"
F G "CalcIPChecksum" 12 160 "WORD()"
V L "buffer" 12 160 "*int8"
V L "count" 12 160 "WORD"
V L "i" 12 162 "WORD"
V L "val" 12 163 "*WORD"
V L "tempSum" 12 173 "{DWORD Val}"
V L "sum" 12 173 "{DWORD Val}"
C G "" 12 198 1 "*"
C G "" 12 198 1 "*"
C G "" 12 198 1 "*"
C G "" 12 198 1 "*"
C G "" 12 198 1 "*"
C G "" 12 198 1 "*"
C G "" 12 198 1 "*"
C G "" 12 198 1 "*"
C G "" 12 198 1 "*"
C G "" 12 198 1 "*"
F G "strupr" 12 257 "*int8(*int8 s)"
V L "s" 12 257 "*int8"
V L "c" 12 259 "int8"
V L "t" 12 260 "*int8"
F G "delay_s" 12 272 "void(int8 s)"
V L "s" 12 272 "int8"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
D G "TICK_INCLUDE" 17 44 ""
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 2 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
D G "TICK_H" 18 43 ""
T G "TICKTYPE" 18 45 "int16" "* This value is used by TCP to implement timeout actions."
D G "TICKS_PER_SECOND" 18 50 "10"
D G "CYCLES_PER_TICKS_PER_SECOND" 18 57 "getenv("CLOCK")/(4 * 16 * TICKS_PER_SECOND)"
D G "TICK_COUNTER" 18 68 "0xFFFF-CYCLES_PER_TICKS_PER_SECOND"
D G "TICK_SECOND" 18 82 "TICKS_PER_SECOND"
D G "TickGetDiff" 18 85 "(a, b)       ((TICKTYPE)(a < b) ? (((TICKTYPE)0xffff - b) + a + 1) : (a - b))"
C L "TickInit" 18 88 1 "*"
C L "TickInit" 18 88 1 "*"
C L "TickInit" 18 88 1 "*"
C L "TickInit" 18 88 1 "*"
C L "TickInit" 18 88 1 "*"
C L "TickInit" 18 88 1 "*"
C L "TickInit" 18 88 1 "*"
F G "TickInit" 18 103 "void()"
C L "TickInit" 18 107 1 "*"
C L "TickInit" 18 107 1 "*"
C L "TickInit" 18 107 1 "*"
C L "TickInit" 18 107 1 "*"
C L "TickInit" 18 107 1 "*"
C L "TickInit" 18 107 1 "*"
C L "TickInit" 18 107 1 "*"
F G "TickGet" 18 122 "TICKTYPE()"
C L "TickGet" 18 125 1 "*"
C L "TickGet" 18 125 1 "*"
C L "TickGet" 18 125 1 "*"
C L "TickGet" 18 125 1 "*"
C L "TickGet" 18 125 1 "*"
C L "TickGet" 18 125 1 "*"
C L "TickGet" 18 125 1 "*"
C L "TickGet" 18 125 1 "*"
C L "TickGet" 18 125 2 "*"
V G "TickCount" 17 50 "TICKTYPE"
C L "TickGet" 17 50 1 "FUNCTION"
C L "TickGet" 17 53 1 "*"
C L "TickGet" 17 53 1 "*"
C L "TickGet" 17 53 1 "*"
C L "TickGet" 17 53 1 "*"
C L "TickGet" 17 53 1 "*"
C L "TickGet" 17 53 1 "*"
C L "TickGet" 17 53 1 "*"
F G "TickInit" 17 68 "void()"
C L "TickGet" 17 78 1 "*"
C L "TickGet" 17 78 1 "*"
C L "TickGet" 17 78 1 "*"
C L "TickGet" 17 78 1 "*"
C L "TickGet" 17 78 1 "*"
C L "TickGet" 17 78 1 "*"
C L "TickGet" 17 78 1 "*"
F G "TickGet" 17 93 "TICKTYPE()"
V L "ret" 17 95 "int16"
C G "" 17 102 1 "*"
C G "" 17 102 1 "*"
C G "" 17 102 1 "*"
C G "" 17 102 1 "*"
C G "" 17 102 1 "*"
C G "" 17 102 1 "*"
C G "" 17 102 1 "*"
V G "second_counter" 17 117 "int8"
V G "second_counter_intermediate" 17 118 "int8"
F G "Tick_Isr" 17 126 "void()"
C L "Tick_Isr" 17 102 1 "FUNCTION"
C L "Tick_Isr" 17 102 1 "FUNCTION"
C L "Tick_Isr" 17 102 1 "FUNCTION"
D G "debug_stack" 4 73 ""
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
D G "THIS_IS_MAC_LAYER" 19 47 ""
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 2 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
D G "debug_mac" 19 61 ""
D G "SPISelectEthernet" 19 76 "()		output_low(PIN_ENC_MAC_CS)" "changed by ccs"
D G "SPIUnselectEthernet" 19 77 "()	output_high(PIN_ENC_MAC_CS)" "changed by ccs"
D G "HALF_DUPLEX" 19 98 ""
D G "LOW" 19 103 "(a) 					(a & 0xFF)"
D G "HIGH" 19 104 "(a) 				((a>>8) & 0xFF)"
D G "RAMSIZE" 19 107 "8192ul"
D G "TXSTART" 19 108 " (RAMSIZE-(MAC_TX_BUFFER_COUNT * (MAC_TX_BUFFER_SIZE + 8ul)))"
D G "RXSTART" 19 109 " (0ul)						" "Should be an even memory address"
D G "RXSTOP" 19 110 " ((TXSTART-2ul) | 0x0001ul)	" "Odd for errata workaround"
D G "RXSIZE" 19 111 " (RXSTOP-RXSTART+1ul)"
D G "WCR" 19 114 " (0b010<<5)			" "Write Control Register command"
D G "BFS" 19 115 " (0b100<<5)			" "Bit Field Set command"
D G "BFC" 19 116 " (0b101<<5)			" "Bit Field Clear command"
D G "RCR" 19 117 " (0b000<<5)			" "Read Control Register command"
D G "RBM" 19 118 " ((0b001<<5) | 0x1A)	" "Read Buffer Memory command"
D G "WBM" 19 119 " ((0b011<<5) | 0x1A)" "Write Buffer Memory command"
D G "SR" 19 120 " ((0b111<<5) | 0x1F)	" "System Reset command does not use an address."
D G "ETHER_IP" 19 123 " (0x00u)"
D G "ETHER_ARP" 19 124 " (0x06u)"
D G "MAXFRAMEC" 19 126 " (1500u+sizeof(ETHER_HEADER)+4u)"
T G "ETHER_HEADER" 19 135 "{MAC_ADDR DestMACAddr,MAC_ADDR SourceMACAddr,WORD_VAL Type}" "A header appended at the start of all RX frames by the hardware"
T G "ENC_PREAMBLE" 19 146 "{int16 NextPacketPointer,RXSTATUS StatusVector,MAC_ADDR DestMACAddr,MAC_ADDR SourceMACAddr,WORD_VAL Type}"
T G "DATA_BUFFER" 19 157 "{WORD_VAL StartAddress,WORD_VAL EndAddress}"
F G "MACSetDuplex" 19 159 "void(WORD Register)"
V L "DuplexState" 19 159 "DUPLEX" "Prototypes of functions intended for MAC layer use only."
F G "BankSel" 19 162 "void(DUPLEX DuplexState)"
V L "Register" 19 162 "WORD"
F G "ReadETHReg" 19 163 "REG(int8 Address)"
V L "Address" 19 163 "int8"
F G "ReadMACReg" 19 164 "REG(int8 Address)"
V L "Address" 19 164 "int8"
F G "WriteReg" 19 165 "void(int8 Address,int8 Data)"
V L "Address" 19 165 "int8"
V L "Data" 19 165 "int8"
F G "BFCReg" 19 166 "void(int8 Address,int8 Data)"
V L "Address" 19 166 "int8"
V L "Data" 19 166 "int8"
F G "BFSReg" 19 167 "void(int8 Address,int8 Data)"
V L "Address" 19 167 "int8"
V L "Data" 19 167 "int8"
F G "SendSystemReset" 19 168 "void()"
C L "SendSystemReset" 19 79 4 "FUNCTION"
V G "NextPacketLocation" 19 187 "WORD_VAL"
V G "CurrentPacketLocation" 19 188 "WORD_VAL"
V G "WasDiscarded" 19 189 "BOOL"
V G "ENCRevID" 19 190 "int8" "ENCSPIInit() added by CCS."
C L "SendSystemReset" 19 79 1 "FUNCTION"
F G "ENCSPIInit" 19 194 "void()"
C L "ENCSPIInit" 19 79 1 "FUNCTION"
C L "ENCSPIInit" 19 79 1 "FUNCTION"
C L "ENCSPIInit" 19 79 5 "FUNCTION"
C L "ENCSPIInit" 19 79 1 "FUNCTION"
C L "ENCSPIXfer" 19 79 2 "FUNCTION"
F G "ENCSPIXfer" 19 218 "int8(int8 c)"
V L "c" 19 218 "int8"
C L "MACInit" 19 234 1 "*"
C L "MACInit" 19 234 1 "*"
C L "MACInit" 19 234 1 "*"
C L "MACInit" 19 234 1 "*"
C L "MACInit" 19 234 1 "*"
C L "MACInit" 19 234 1 "*"
C L "MACInit" 19 234 1 "*"
C L "MACInit" 19 234 1 "*"
C L "MACInit" 19 234 1 "*"
F G "MACInit" 19 251 "void()"
V L "i" 19 253 "int8"
C L "MACInit" 19 234 4 "FUNCTION"
C L "MACInit" 19 234 1 "FUNCTION"
C L "MACInit" 19 234 2 "FUNCTION"
C L "MACInit" 19 234 1 "FUNCTION"
C L "MACInit" 19 234 1 "FUNCTION"
C L "MACInit" 19 234 1 "FUNCTION"
C L "MACInit" 19 234 7 "FUNCTION"
C L "MACInit" 19 234 1 "FUNCTION"
C L "MACInit" 19 234 1 "FUNCTION"
C L "MACInit" 19 234 3 "FUNCTION"
C L "MACInit" 19 234 3 "FUNCTION"
C L "MACInit" 19 234 3 "FUNCTION"
C L "MACInit" 19 234 1 "FUNCTION"
C L "MACInit" 19 234 1 "FUNCTION"
C L "MACInit" 19 234 1 "FUNCTION"
C L "MACInit" 19 234 2 "FUNCTION"
C L "MACInit" 19 234 1 "FUNCTION"
C L "MACInit" 19 234 1 "FUNCTION"
C L "MACInit" 19 234 2 "FUNCTION"
C L "MACIsLinked" 19 234 1 "FUNCTION"
C L "MACIsLinked" 19 381 1 "*"
C L "MACIsLinked" 19 381 1 "*"
C L "MACIsLinked" 19 381 1 "*"
C L "MACIsLinked" 19 381 1 "*"
C L "MACIsLinked" 19 381 1 "*"
C L "MACIsLinked" 19 381 1 "*"
C L "MACIsLinked" 19 381 1 "*"
C L "MACIsLinked" 19 381 1 "*"
C L "MACIsLinked" 19 381 1 "*"
C L "MACIsLinked" 19 381 1 "*"
C L "MACIsLinked" 19 381 1 "*"
F G "MACIsLinked" 19 400 "int8()"
C L "MACIsLinked" 19 381 5 "FUNCTION"
C L "MACIsTxReady" 19 410 1 "*"
C L "MACIsTxReady" 19 410 1 "*"
C L "MACIsTxReady" 19 410 1 "*"
C L "MACIsTxReady" 19 410 1 "*"
C L "MACIsTxReady" 19 410 1 "*"
C L "MACIsTxReady" 19 410 1 "*"
C L "MACIsTxReady" 19 410 1 "*"
C L "MACIsTxReady" 19 410 1 "*"
C L "MACIsTxReady" 19 410 1 "*"
C L "MACIsTxReady" 19 410 1 "*"
C L "MACIsTxReady" 19 410 1 "*"
C L "MACIsTxReady" 19 410 1 "*"
F G "MACIsTxReady" 19 430 "int8()"
V L "HighPriority" 19 430 "int8"
F G "MACGetTxBuffer" 19 463 "BUFFER(int8 HighPriority)"
V L "HighPriority" 19 463 "int8"
F G "MACDiscardTx" 19 495 "void(int8 HighPriority)"
V L "buffer" 19 495 "BUFFER"
C L "MACDiscardRx" 19 507 1 "*"
C L "MACDiscardRx" 19 507 1 "*"
C L "MACDiscardRx" 19 507 1 "*"
C L "MACDiscardRx" 19 507 1 "*"
C L "MACDiscardRx" 19 507 1 "*"
C L "MACDiscardRx" 19 507 1 "*"
C L "MACDiscardRx" 19 507 1 "*"
C L "MACDiscardRx" 19 507 1 "*"
C L "MACDiscardRx" 19 507 1 "*"
F G "MACDiscardRx" 19 524 "void(BUFFER buffer)"
V L "NewRXRDLocation" 19 526 "WORD_VAL" "Make sure the current packet was not already discarded"
C L "MACDiscardRx" 19 507 4 "FUNCTION"
C L "MACDiscardRx" 19 507 1 "FUNCTION"
C L "MACDiscardRx" 19 507 3 "FUNCTION"
C L "MACGetFreeRxSize" 19 558 1 "*"
C L "MACGetFreeRxSize" 19 558 1 "*"
C L "MACGetFreeRxSize" 19 558 1 "*"
C L "MACGetFreeRxSize" 19 558 1 "*"
C L "MACGetFreeRxSize" 19 558 1 "*"
C L "MACGetFreeRxSize" 19 558 1 "*"
C L "MACGetFreeRxSize" 19 558 1 "*"
C L "MACGetFreeRxSize" 19 558 1 "*"
F G "MACGetFreeRxSize" 19 574 "WORD()"
V L "ReadPT" 19 576 "WORD_VAL"
V L "WritePT" 19 576 "WORD_VAL" "Read the Ethernet hardware buffer write pointer.  Because packets can be"
C L "MACGetFreeRxSize" 19 558 3 "FUNCTION"
C L "MACGetFreeRxSize" 19 558 1 "FUNCTION"
C L "MACGetFreeRxSize" 19 558 1 "FUNCTION"
C L "MACGetFreeRxSize" 19 558 2 "FUNCTION"
C L "MACGetHeader" 19 615 1 "*"
C L "MACGetHeader" 19 615 1 "*"
C L "MACGetHeader" 19 615 1 "*"
C L "MACGetHeader" 19 615 1 "*"
C L "MACGetHeader" 19 615 1 "*"
C L "MACGetHeader" 19 615 1 "*"
C L "MACGetHeader" 19 615 1 "*"
C L "MACGetHeader" 19 615 1 "*"
C L "MACGetHeader" 19 615 1 "*"
C L "MACGetHeader" 19 615 1 "*"
C L "MACGetHeader" 19 615 1 "*"
C L "MACGetHeader" 19 615 1 "*"
C L "MACGetHeader" 19 615 1 "*"
C L "MACGetHeader" 19 615 1 "*"
C L "MACGetHeader" 19 615 1 "*"
F G "MACGetHeader" 19 638 "int8()"
V L "remote" 19 638 "*MAC_ADDR"
V L "type" 19 638 "*int8"
V L "header" 19 640 "ENC_PREAMBLE" "Test if at least one packet has been received and is waiting"
C L "MACGetHeader" 19 615 1 "FUNCTION"
C L "MACGetHeader" 19 615 1 "FUNCTION"
C L "MACGetHeader" 19 615 1 "FUNCTION"
C L "MACGetHeader" 19 615 1 "FUNCTION"
C L "MACGetHeader" 19 615 2 "FUNCTION"
C L "MACGetHeader" 19 615 3 "FUNCTION"
C L "MACGetHeader" 19 615 1 "FUNCTION"
C L "MACGetHeader" 19 615 1 "FUNCTION"
C L "MACGetHeader" 19 615 3 "FUNCTION"
C L "MACGetHeader" 19 615 1 "FUNCTION"
C L "MACGetHeader" 19 615 1 "FUNCTION"
C L "MACPutHeader" 19 704 1 "*"
C L "MACPutHeader" 19 704 1 "*"
C L "MACPutHeader" 19 704 1 "*"
C L "MACPutHeader" 19 704 1 "*"
C L "MACPutHeader" 19 704 1 "*"
C L "MACPutHeader" 19 704 1 "*"
C L "MACPutHeader" 19 704 1 "*"
C L "MACPutHeader" 19 704 1 "*"
C L "MACPutHeader" 19 704 1 "*"
C L "MACPutHeader" 19 704 1 "*"
C L "MACPutHeader" 19 704 1 "*"
C L "MACPutHeader" 19 704 1 "*"
C L "MACPutHeader" 19 704 1 "*"
C L "MACPutHeader" 19 704 1 "*"
C L "MACPutHeader" 19 704 1 "*"
C L "MACPutHeader" 19 704 1 "*"
C L "MACPutHeader" 19 704 1 "*"
C L "MACPutHeader" 19 704 1 "*"
F G "MACPutHeader" 19 730 "void(*int8 type)"
V L "remote" 19 730 "*MAC_ADDR"
V L "type" 19 731 "int8"
V L "dataLen" 19 732 "WORD"
C L "MACPutHeader" 19 704 1 "FUNCTION"
C L "MACPutHeader" 19 704 1 "FUNCTION"
C L "MACPutHeader" 19 704 1 "FUNCTION"
C L "MACPutHeader" 19 704 2 "FUNCTION"
C L "MACPutHeader" 19 704 1 "FUNCTION"
C L "MACPutHeader" 19 704 1 "FUNCTION"
C L "MACPutHeader" 19 704 1 "FUNCTION"
C L "MACFlush" 19 772 1 "*"
C L "MACFlush" 19 772 1 "*"
C L "MACFlush" 19 772 1 "*"
C L "MACFlush" 19 772 1 "*"
C L "MACFlush" 19 772 1 "*"
C L "MACFlush" 19 772 1 "*"
C L "MACFlush" 19 772 1 "*"
C L "MACFlush" 19 772 1 "*"
C L "MACFlush" 19 772 1 "*"
C L "MACFlush" 19 772 1 "*"
C L "MACFlush" 19 772 1 "*"
C L "MACFlush" 19 772 1 "*"
C L "MACFlush" 19 772 1 "*"
C L "MACFlush" 19 772 1 "*"
C L "MACFlush" 19 772 1 "*"
F G "MACFlush" 19 795 "void(*MAC_ADDR remote,int8 type,WORD dataLen)"
C L "MACFlush" 19 772 2 "FUNCTION"
C L "MACFlush" 19 772 5 "FUNCTION"
C L "MACFlush" 19 772 1 "FUNCTION"
V L "ReadPtrSave" 19 830 "WORD_VAL"
V L "TXEnd" 19 831 "WORD_VAL"
V L "TXStatus" 19 832 "TXSTATUS"
V L "i" 19 833 "int8" "Cancel the previous transmission if it has become stuck set"
C L "MACFlush" 19 772 1 "FUNCTION"
C L "MACFlush" 19 772 1 "FUNCTION"
C L "MACFlush" 19 772 1 "FUNCTION"
C L "MACFlush" 19 772 3 "FUNCTION"
C L "MACFlush" 19 772 1 "FUNCTION"
C L "MACFlush" 19 772 1 "FUNCTION"
C L "MACFlush" 19 772 1 "FUNCTION"
C L "MACFlush" 19 772 1 "FUNCTION"
C L "MACFlush" 19 772 1 "FUNCTION"
C L "MACSetRxBuffer" 19 891 1 "*"
C L "MACSetRxBuffer" 19 891 1 "*"
C L "MACSetRxBuffer" 19 891 1 "*"
C L "MACSetRxBuffer" 19 891 1 "*"
C L "MACSetRxBuffer" 19 891 1 "*"
C L "MACSetRxBuffer" 19 891 1 "*"
C L "MACSetRxBuffer" 19 891 1 "*"
C L "MACSetRxBuffer" 19 891 1 "*"
C L "MACSetRxBuffer" 19 891 1 "*"
C L "MACSetRxBuffer" 19 891 1 "*"
C L "MACSetRxBuffer" 19 891 1 "*"
C L "MACSetRxBuffer" 19 891 1 "*"
C L "MACSetRxBuffer" 19 891 1 "*"
C L "MACSetRxBuffer" 19 891 1 "*"
C L "MACSetRxBuffer" 19 891 1 "*"
F G "MACSetRxBuffer" 19 914 "void()"
V L "offset" 19 914 "WORD"
V L "ReadPT" 19 916 "WORD_VAL" "Determine the address of the beginning of the entire packet"
C L "MACSetRxBuffer" 19 891 1 "FUNCTION"
C L "MACSetRxBuffer" 19 891 1 "FUNCTION"
C L "MACSetRxBuffer" 19 891 1 "FUNCTION"
C L "MACSetTxBuffer" 19 935 1 "*"
C L "MACSetTxBuffer" 19 935 1 "*"
C L "MACSetTxBuffer" 19 935 1 "*"
C L "MACSetTxBuffer" 19 935 1 "*"
C L "MACSetTxBuffer" 19 935 1 "*"
C L "MACSetTxBuffer" 19 935 1 "*"
C L "MACSetTxBuffer" 19 935 1 "*"
C L "MACSetTxBuffer" 19 935 1 "*"
C L "MACSetTxBuffer" 19 935 1 "*"
C L "MACSetTxBuffer" 19 935 1 "*"
C L "MACSetTxBuffer" 19 935 1 "*"
C L "MACSetTxBuffer" 19 935 1 "*"
C L "MACSetTxBuffer" 19 935 1 "*"
C L "MACSetTxBuffer" 19 935 1 "*"
F G "MACSetTxBuffer" 19 957 "void()"
V L "buffer" 19 957 "BUFFER"
V L "offset" 19 957 "WORD"
C L "MACSetTxBuffer" 19 935 4 "FUNCTION"
C L "MACSetTxBuffer" 19 935 1 "FUNCTION"
C L "MACCalcRxChecksum" 19 935 2 "FUNCTION"
C L "MACCalcRxChecksum" 19 983 1 "*"
C L "MACCalcRxChecksum" 19 983 1 "*"
C L "MACCalcRxChecksum" 19 983 1 "*"
C L "MACCalcRxChecksum" 19 983 1 "*"
C L "MACCalcRxChecksum" 19 983 1 "*"
C L "MACCalcRxChecksum" 19 983 1 "*"
C L "MACCalcRxChecksum" 19 983 1 "*"
C L "MACCalcRxChecksum" 19 983 1 "*"
C L "MACCalcRxChecksum" 19 983 1 "*"
C L "MACCalcRxChecksum" 19 983 1 "*"
C L "MACCalcRxChecksum" 19 983 1 "*"
F G "MACCalcRxChecksum" 19 1002 "WORD(BUFFER buffer,WORD offset)"
V L "offset" 19 1002 "WORD"
V L "len" 19 1002 "WORD"
V L "temp" 19 1004 "WORD_VAL" "Add the offset requested by firmware plus the Ethernet header"
C L "MACCalcRxChecksum" 19 983 1 "FUNCTION"
C L "MACCalcRxChecksum" 19 983 1 "FUNCTION"
C L "MACCalcRxChecksum" 19 983 1 "FUNCTION"
C L "MACCalcRxChecksum" 19 983 1 "FUNCTION"
C L "MACCalcRxChecksum" 19 983 1 "FUNCTION"
C L "MACCalcRxChecksum" 19 983 1 "FUNCTION"
C L "MACCalcRxChecksum" 19 983 1 "FUNCTION"
C L "MACCalcTxChecksum" 19 1040 1 "*"
C L "MACCalcTxChecksum" 19 1040 1 "*"
C L "MACCalcTxChecksum" 19 1040 1 "*"
C L "MACCalcTxChecksum" 19 1040 1 "*"
C L "MACCalcTxChecksum" 19 1040 1 "*"
C L "MACCalcTxChecksum" 19 1040 1 "*"
C L "MACCalcTxChecksum" 19 1040 1 "*"
C L "MACCalcTxChecksum" 19 1040 1 "*"
C L "MACCalcTxChecksum" 19 1040 1 "*"
C L "MACCalcTxChecksum" 19 1040 1 "*"
C L "MACCalcTxChecksum" 19 1040 1 "*"
F G "MACCalcTxChecksum" 19 1059 "WORD(WORD len)"
V L "offset" 19 1059 "WORD"
V L "len" 19 1059 "WORD"
V L "temp" 19 1061 "WORD_VAL" "Program the start address of the DMA, after adjusting for the Ethernet"
C L "MACCalcTxChecksum" 19 1040 1 "FUNCTION"
C L "MACCalcTxChecksum" 19 1040 1 "FUNCTION"
C L "MACCalcTxChecksum" 19 1040 1 "FUNCTION"
C L "MACCalcTxChecksum" 19 1040 1 "FUNCTION"
C L "MACCalcTxChecksum" 19 1040 1 "FUNCTION"
C L "CalcIPBufferChecksum" 19 1092 1 "*"
C L "CalcIPBufferChecksum" 19 1092 1 "*"
C L "CalcIPBufferChecksum" 19 1092 1 "*"
C L "CalcIPBufferChecksum" 19 1092 1 "*"
C L "CalcIPBufferChecksum" 19 1092 1 "*"
C L "CalcIPBufferChecksum" 19 1092 1 "*"
C L "CalcIPBufferChecksum" 19 1092 1 "*"
C L "CalcIPBufferChecksum" 19 1092 1 "*"
C L "CalcIPBufferChecksum" 19 1092 1 "*"
C L "CalcIPBufferChecksum" 19 1092 1 "*"
C L "CalcIPBufferChecksum" 19 1092 1 "*"
C L "CalcIPBufferChecksum" 19 1092 1 "*"
C L "CalcIPBufferChecksum" 19 1092 1 "*"
C L "CalcIPBufferChecksum" 19 1092 1 "*"
C L "CalcIPBufferChecksum" 19 1092 1 "*"
C L "CalcIPBufferChecksum" 19 1092 1 "*"
F G "CalcIPBufferChecksum" 19 1116 "WORD(WORD len)"
V L "len" 19 1116 "WORD"
V L "temp" 19 1118 "WORD_VAL" "Take care of special cases which the DMA cannot be used for"
C L "CalcIPBufferChecksum" 19 1092 1 "FUNCTION"
C L "CalcIPBufferChecksum" 19 1092 2 "FUNCTION"
C L "CalcIPBufferChecksum" 19 1092 1 "FUNCTION"
C L "CalcIPBufferChecksum" 19 1092 1 "FUNCTION"
C L "CalcIPBufferChecksum" 19 1092 1 "FUNCTION"
C L "MACGet" 19 1092 1 "FUNCTION"
C L "MACGet" 19 1176 1 "*"
C L "MACGet" 19 1176 1 "*"
C L "MACGet" 19 1176 1 "*"
C L "MACGet" 19 1176 1 "*"
C L "MACGet" 19 1176 1 "*"
C L "MACGet" 19 1176 1 "*"
C L "MACGet" 19 1176 1 "*"
C L "MACGet" 19 1176 1 "*"
C L "MACGet" 19 1176 1 "*"
C L "MACGet" 19 1176 1 "*"
C L "MACGet" 19 1176 1 "*"
C L "MACGet" 19 1176 1 "*"
C L "MACGet" 19 1176 1 "*"
C L "MACGet" 19 1176 4 "*"
C L "MACGet" 19 1361 1 "*"
C L "MACGet" 19 1361 1 "*"
C L "MACGet" 19 1361 1 "*"
C L "MACGet" 19 1361 1 "*"
C L "MACGet" 19 1361 1 "*"
C L "MACGet" 19 1361 1 "*"
C L "MACGet" 19 1361 1 "*"
C L "MACGet" 19 1361 1 "*"
C L "MACGet" 19 1361 1 "*"
C L "MACGet" 19 1361 1 "*"
F G "MACGet" 19 1379 "int8()" "SPISelectEthernet();"
C L "MACGet" 19 1361 9 "FUNCTION"
V L "c" 19 1394 "int8"
C L "MACGetArray" 19 1361 1 "FUNCTION"
C L "MACGetArray" 19 1404 1 "*"
C L "MACGetArray" 19 1404 1 "*"
C L "MACGetArray" 19 1404 1 "*"
C L "MACGetArray" 19 1404 1 "*"
C L "MACGetArray" 19 1404 1 "*"
C L "MACGetArray" 19 1404 1 "*"
C L "MACGetArray" 19 1404 1 "*"
C L "MACGetArray" 19 1404 1 "*"
C L "MACGetArray" 19 1404 1 "*"
C L "MACGetArray" 19 1404 1 "*"
C L "MACGetArray" 19 1404 1 "*"
C L "MACGetArray" 19 1404 1 "*"
C L "MACGetArray" 19 1404 1 "*"
F G "MACGetArray" 19 1425 "WORD()"
V L "val" 19 1425 "*int8"
V L "len" 19 1425 "WORD" "int16 i;"
C L "MACGetArray" 19 1404 14 "FUNCTION"
C L "MACGetArray" 19 1427 5 "*val"
V L "i" 19 1455 "int16"
C L "MACPut" 19 1427 1 "FUNCTION"
C L "MACPut" 19 1471 1 "*"
C L "MACPut" 19 1471 1 "*"
C L "MACPut" 19 1471 1 "*"
C L "MACPut" 19 1471 1 "*"
C L "MACPut" 19 1471 1 "*"
C L "MACPut" 19 1471 1 "*"
C L "MACPut" 19 1471 1 "*"
C L "MACPut" 19 1471 1 "*"
C L "MACPut" 19 1471 1 "*"
C L "MACPut" 19 1471 1 "*"
F G "MACPut" 19 1489 "void(WORD len)"
V L "val" 19 1489 "int8" "SPISelectEthernet();"
C L "MACPut" 19 1471 7 "FUNCTION"
C L "MACPutArray" 19 1471 1 "FUNCTION"
C L "MACPutArray" 19 1508 1 "*"
C L "MACPutArray" 19 1508 1 "*"
C L "MACPutArray" 19 1508 1 "*"
C L "MACPutArray" 19 1508 1 "*"
C L "MACPutArray" 19 1508 1 "*"
C L "MACPutArray" 19 1508 1 "*"
C L "MACPutArray" 19 1508 1 "*"
C L "MACPutArray" 19 1508 1 "*"
C L "MACPutArray" 19 1508 1 "*"
C L "MACPutArray" 19 1508 1 "*"
C L "MACPutArray" 19 1508 1 "*"
F G "MACPutArray" 19 1527 "void(int8 val)"
V L "val" 19 1527 "*int8"
V L "len" 19 1527 "WORD" "Select the chip and send the proper opcode"
C L "MACPutArray" 19 1508 14 "FUNCTION"
C L "SendSystemReset" 19 1508 1 "FUNCTION"
C L "SendSystemReset" 19 1560 1 "*"
C L "SendSystemReset" 19 1560 1 "*"
C L "SendSystemReset" 19 1560 1 "*"
C L "SendSystemReset" 19 1560 1 "*"
C L "SendSystemReset" 19 1560 1 "*"
C L "SendSystemReset" 19 1560 1 "*"
C L "SendSystemReset" 19 1560 1 "*"
C L "SendSystemReset" 19 1560 1 "*"
C L "SendSystemReset" 19 1560 1 "*"
C L "SendSystemReset" 19 1560 1 "*"
F G "SendSystemReset" 19 1578 "void(*int8 val,WORD len)"
C L "SendSystemReset" 19 1560 5 "FUNCTION"
C L "ReadETHReg" 19 1560 1 "FUNCTION"
C L "ReadETHReg" 19 1593 1 "*"
C L "ReadETHReg" 19 1593 1 "*"
C L "ReadETHReg" 19 1593 1 "*"
C L "ReadETHReg" 19 1593 1 "*"
C L "ReadETHReg" 19 1593 1 "*"
C L "ReadETHReg" 19 1593 1 "*"
C L "ReadETHReg" 19 1593 1 "*"
C L "ReadETHReg" 19 1593 1 "*"
C L "ReadETHReg" 19 1593 1 "*"
C L "ReadETHReg" 19 1593 1 "*"
C L "ReadETHReg" 19 1593 1 "*"
C L "ReadETHReg" 19 1593 1 "*"
C L "ReadETHReg" 19 1593 1 "*"
C L "ReadETHReg" 19 1593 1 "*"
F G "ReadETHReg" 19 1615 "REG(*int8 val,WORD len)"
V L "Address" 19 1615 "int8"
V L "c" 19 1617 "int8" "Select the chip and send the Read Control Register opcode/address"
C L "ReadETHReg" 19 1593 10 "FUNCTION"
C L "ReadMACReg" 19 1593 1 "FUNCTION"
C L "ReadMACReg" 19 1642 1 "*"
C L "ReadMACReg" 19 1642 1 "*"
C L "ReadMACReg" 19 1642 1 "*"
C L "ReadMACReg" 19 1642 1 "*"
C L "ReadMACReg" 19 1642 1 "*"
C L "ReadMACReg" 19 1642 1 "*"
C L "ReadMACReg" 19 1642 1 "*"
C L "ReadMACReg" 19 1642 1 "*"
C L "ReadMACReg" 19 1642 1 "*"
C L "ReadMACReg" 19 1642 1 "*"
C L "ReadMACReg" 19 1642 1 "*"
C L "ReadMACReg" 19 1642 1 "*"
C L "ReadMACReg" 19 1642 1 "*"
C L "ReadMACReg" 19 1642 1 "*"
F G "ReadMACReg" 19 1664 "REG(WORD len)"
V L "Address" 19 1664 "int8"
V L "c" 19 1666 "int8" "SPISelectEthernet();"
C L "ReadMACReg" 19 1642 13 "FUNCTION"
C L "ReadPHYReg" 19 1642 1 "FUNCTION"
C L "ReadPHYReg" 19 1700 1 "*"
C L "ReadPHYReg" 19 1700 1 "*"
C L "ReadPHYReg" 19 1700 1 "*"
C L "ReadPHYReg" 19 1700 1 "*"
C L "ReadPHYReg" 19 1700 1 "*"
C L "ReadPHYReg" 19 1700 1 "*"
C L "ReadPHYReg" 19 1700 1 "*"
C L "ReadPHYReg" 19 1700 1 "*"
F G "ReadPHYReg" 19 1716 "PHYREG()"
V L "Register" 19 1716 "int8"
V L "Result" 19 1718 "PHYREG" "Set the right address and start the register read operation"
C L "ReadPHYReg" 19 1700 2 "FUNCTION"
C L "ReadPHYReg" 19 1700 1 "FUNCTION"
C L "ReadPHYReg" 19 1700 1 "FUNCTION"
C L "WriteReg" 19 1700 1 "FUNCTION"
C L "WriteReg" 19 1741 1 "*"
C L "WriteReg" 19 1741 1 "*"
C L "WriteReg" 19 1741 1 "*"
C L "WriteReg" 19 1741 1 "*"
C L "WriteReg" 19 1741 1 "*"
C L "WriteReg" 19 1741 1 "*"
C L "WriteReg" 19 1741 1 "*"
C L "WriteReg" 19 1741 1 "*"
C L "WriteReg" 19 1741 1 "*"
C L "WriteReg" 19 1741 1 "*"
C L "WriteReg" 19 1741 1 "*"
C L "WriteReg" 19 1741 1 "*"
C L "WriteReg" 19 1741 1 "*"
C L "WriteReg" 19 1741 1 "*"
C L "WriteReg" 19 1741 1 "*"
C L "WriteReg" 19 1741 1 "*"
C L "WriteReg" 19 1741 1 "*"
F G "WriteReg" 19 1766 "void()"
V L "Address" 19 1766 "int8"
V L "Data" 19 1766 "int8" "SPISelectEthernet();"
C L "WriteReg" 19 1741 7 "FUNCTION"
C L "BFCReg" 19 1741 1 "FUNCTION"
C L "BFCReg" 19 1785 1 "*"
C L "BFCReg" 19 1785 1 "*"
C L "BFCReg" 19 1785 1 "*"
C L "BFCReg" 19 1785 1 "*"
C L "BFCReg" 19 1785 1 "*"
C L "BFCReg" 19 1785 1 "*"
C L "BFCReg" 19 1785 1 "*"
C L "BFCReg" 19 1785 1 "*"
C L "BFCReg" 19 1785 1 "*"
C L "BFCReg" 19 1785 1 "*"
C L "BFCReg" 19 1785 1 "*"
C L "BFCReg" 19 1785 1 "*"
C L "BFCReg" 19 1785 1 "*"
C L "BFCReg" 19 1785 1 "*"
F G "BFCReg" 19 1807 "void(int8 Address,int8 Data,int8 NewConfig)"
V L "Address" 19 1807 "int8"
V L "Data" 19 1807 "int8" "SPISelectEthernet();"
C L "BFCReg" 19 1785 7 "FUNCTION"
C L "BFSReg" 19 1785 1 "FUNCTION"
C L "BFSReg" 19 1826 1 "*"
C L "BFSReg" 19 1826 1 "*"
C L "BFSReg" 19 1826 1 "*"
C L "BFSReg" 19 1826 1 "*"
C L "BFSReg" 19 1826 1 "*"
C L "BFSReg" 19 1826 1 "*"
C L "BFSReg" 19 1826 1 "*"
C L "BFSReg" 19 1826 1 "*"
C L "BFSReg" 19 1826 1 "*"
C L "BFSReg" 19 1826 1 "*"
C L "BFSReg" 19 1826 1 "*"
C L "BFSReg" 19 1826 1 "*"
C L "BFSReg" 19 1826 1 "*"
C L "BFSReg" 19 1826 1 "*"
F G "BFSReg" 19 1848 "void(int8 Address,int8 Data,int8 NewConfig)"
V L "Address" 19 1848 "int8"
V L "Data" 19 1848 "int8" "SPISelectEthernet();"
C L "BFSReg" 19 1826 7 "FUNCTION"
C L "WritePHYReg" 19 1826 1 "FUNCTION"
C L "WritePHYReg" 19 1867 1 "*"
C L "WritePHYReg" 19 1867 1 "*"
C L "WritePHYReg" 19 1867 1 "*"
C L "WritePHYReg" 19 1867 1 "*"
C L "WritePHYReg" 19 1867 1 "*"
C L "WritePHYReg" 19 1867 1 "*"
C L "WritePHYReg" 19 1867 1 "*"
C L "WritePHYReg" 19 1867 1 "*"
C L "WritePHYReg" 19 1867 1 "*"
F G "WritePHYReg" 19 1884 "void(int8 Address,int8 Data,int8 NewConfig)"
V L "Register" 19 1884 "int8"
V L "Data" 19 1884 "WORD" "Write the register address"
C L "WritePHYReg" 19 1867 2 "FUNCTION"
C L "WritePHYReg" 19 1867 1 "FUNCTION"
C L "BankSel" 19 1867 1 "FUNCTION"
C L "BankSel" 19 1901 1 "*"
C L "BankSel" 19 1901 1 "*"
C L "BankSel" 19 1901 1 "*"
C L "BankSel" 19 1901 1 "*"
C L "BankSel" 19 1901 1 "*"
C L "BankSel" 19 1901 1 "*"
C L "BankSel" 19 1901 1 "*"
C L "BankSel" 19 1901 1 "*"
C L "BankSel" 19 1901 1 "*"
F G "BankSel" 19 1918 "void(int8 Register,WORD Data,int8 NewConfig)"
V L "Register" 19 1918 "WORD"
C L "MACSetDuplex" 19 1901 1 "FUNCTION"
C L "MACSetDuplex" 19 1925 1 "*"
C L "MACSetDuplex" 19 1925 1 "*"
C L "MACSetDuplex" 19 1925 1 "*"
C L "MACSetDuplex" 19 1925 1 "*"
C L "MACSetDuplex" 19 1925 1 "*"
C L "MACSetDuplex" 19 1925 1 "*"
C L "MACSetDuplex" 19 1925 1 "*"
C L "MACSetDuplex" 19 1925 1 "*"
C L "MACSetDuplex" 19 1925 1 "*"
C L "MACSetDuplex" 19 1925 1 "*"
C L "MACSetDuplex" 19 1925 1 "*"
C L "MACSetDuplex" 19 1925 1 "*"
C L "MACSetDuplex" 19 1925 1 "*"
C L "MACSetDuplex" 19 1925 1 "*"
C L "MACSetDuplex" 19 1925 1 "*"
C L "MACSetDuplex" 19 1925 1 "*"
C L "MACSetDuplex" 19 2040 1 "*"
C L "MACSetDuplex" 19 2040 1 "*"
C L "MACSetDuplex" 19 2040 1 "*"
C L "MACSetDuplex" 19 2040 1 "*"
C L "MACSetDuplex" 19 2040 1 "*"
C L "MACSetDuplex" 19 2040 1 "*"
C L "MACSetDuplex" 19 2040 1 "*"
C L "MACSetDuplex" 19 2040 1 "*"
C L "MACSetDuplex" 19 2040 1 "*"
C L "MACSetDuplex" 19 2040 1 "*"
C L "MACSetDuplex" 19 2040 1 "*"
C L "MACSetDuplex" 19 2040 1 "*"
C L "MACSetDuplex" 19 2040 1 "*"
C L "MACSetDuplex" 19 2040 1 "*"
C L "MACSetDuplex" 19 2040 1 "*"
F G "MACSetDuplex" 19 2063 "void(WORD Register,WORD Data,int8 NewConfig)"
V L "DuplexState" 19 2063 "DUPLEX"
V L "Register" 19 2065 "REG"
V L "PhyReg" 19 2066 "PHYREG" "Disable receive logic and abort any packets currently being transmitted"
C L "MACSetDuplex" 19 2040 1 "FUNCTION"
C L "MACSetDuplex" 19 2040 1 "FUNCTION"
C L "MACSetDuplex" 19 2040 4 "FUNCTION"
C L "MACSetDuplex" 19 2040 1 "FUNCTION"
C L "MACPowerDown" 19 2040 1 "FUNCTION"
C L "MACPowerDown" 19 2100 1 "*"
C L "MACPowerDown" 19 2100 1 "*"
C L "MACPowerDown" 19 2100 1 "*"
C L "MACPowerDown" 19 2100 1 "*"
C L "MACPowerDown" 19 2100 1 "*"
C L "MACPowerDown" 19 2100 1 "*"
C L "MACPowerDown" 19 2100 1 "*"
C L "MACPowerDown" 19 2100 1 "*"
C L "MACPowerDown" 19 2100 1 "*"
C L "MACPowerDown" 19 2100 1 "*"
C L "MACPowerDown" 19 2100 1 "*"
F G "MACPowerDown" 19 2119 "void(int8 NewConfig)"
C L "MACPowerDown" 19 2100 1 "FUNCTION"
C L "MACPowerDown" 19 2100 2 "FUNCTION"
C L "MACPowerDown" 19 2100 1 "FUNCTION"
C L "MACPowerDown" 19 2100 1 "FUNCTION"
C L "MACPowerUp" 19 2100 1 "FUNCTION"
C L "MACPowerUp" 19 2136 1 "*"
C L "MACPowerUp" 19 2136 1 "*"
C L "MACPowerUp" 19 2136 1 "*"
C L "MACPowerUp" 19 2136 1 "*"
C L "MACPowerUp" 19 2136 1 "*"
C L "MACPowerUp" 19 2136 1 "*"
C L "MACPowerUp" 19 2136 1 "*"
C L "MACPowerUp" 19 2136 1 "*"
C L "MACPowerUp" 19 2136 1 "*"
C L "MACPowerUp" 19 2136 1 "*"
C L "MACPowerUp" 19 2136 1 "*"
F G "MACPowerUp" 19 2155 "void(int8 NewConfig)"
C L "MACPowerUp" 19 2136 1 "FUNCTION"
C L "MACPowerUp" 19 2136 2 "FUNCTION"
C L "MACPowerUp" 19 2136 1 "FUNCTION"
C L "SetCLKOUT" 19 2136 1 "FUNCTION"
C L "SetCLKOUT" 19 2169 1 "*"
C L "SetCLKOUT" 19 2169 1 "*"
C L "SetCLKOUT" 19 2169 1 "*"
C L "SetCLKOUT" 19 2169 1 "*"
C L "SetCLKOUT" 19 2169 1 "*"
C L "SetCLKOUT" 19 2169 1 "*"
C L "SetCLKOUT" 19 2169 1 "*"
C L "SetCLKOUT" 19 2169 1 "*"
C L "SetCLKOUT" 19 2169 1 "*"
C L "SetCLKOUT" 19 2169 1 "*"
C L "SetCLKOUT" 19 2169 1 "*"
C L "SetCLKOUT" 19 2169 1 "*"
C L "SetCLKOUT" 19 2169 1 "*"
C L "SetCLKOUT" 19 2169 1 "*"
F G "SetCLKOUT" 19 2191 "void(int8 NewConfig)"
V L "NewConfig" 19 2191 "int8"
C L "GetCLKOUT" 19 2169 1 "FUNCTION"
C L "GetCLKOUT" 19 2198 1 "*"
C L "GetCLKOUT" 19 2198 1 "*"
C L "GetCLKOUT" 19 2198 1 "*"
C L "GetCLKOUT" 19 2198 1 "*"
C L "GetCLKOUT" 19 2198 1 "*"
C L "GetCLKOUT" 19 2198 1 "*"
C L "GetCLKOUT" 19 2198 1 "*"
C L "GetCLKOUT" 19 2198 1 "*"
C L "GetCLKOUT" 19 2198 1 "*"
C L "GetCLKOUT" 19 2198 1 "*"
C L "GetCLKOUT" 19 2198 1 "*"
C L "GetCLKOUT" 19 2198 1 "*"
C L "GetCLKOUT" 19 2198 1 "*"
C L "GetCLKOUT" 19 2198 1 "*"
F G "GetCLKOUT" 19 2220 "int8()"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 2 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 23 1 1 "*"
C G "" 23 1 1 "*"
C G "" 23 1 1 "*"
C G "" 23 1 1 "*"
C G "" 23 1 1 "*"
C G "" 23 1 1 "*"
C G "" 23 1 1 "*"
C G "" 23 1 1 "*"
C G "" 23 1 1 "*"
C G "" 23 1 1 "*"
C G "" 23 1 1 "*"
C G "" 23 1 1 "*"
C G "" 23 1 1 "*"
C G "" 23 1 1 "*"
C G "" 23 1 1 "*"
C G "" 23 1 1 "*"
C G "" 23 1 1 "*"
C G "" 23 1 1 "*"
C G "" 23 1 1 "*"
C G "" 23 1 1 "*"
C G "" 23 1 1 "*"
C G "" 23 1 1 "*"
C G "" 23 1 1 "*"
C G "" 23 1 1 "*"
C G "" 23 1 1 "*"
C G "" 23 1 1 "*"
C G "" 23 1 1 "*"
C G "" 23 1 1 "*"
C G "" 23 1 1 "*"
C G "" 23 1 1 "*"
C G "" 23 1 1 "*"
C G "" 23 1 1 "*"
D G "IP_H" 23 45 ""
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 2 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
D G "IP_PROT_ICMP" 23 50 " (1)"
D G "IP_PROT_TCP" 23 51 " (6)"
D G "IP_PROT_UDP" 23 52 " (17)"
C G "" 23 55 1 "*"
T G "IP_HEADER" 23 71 "{int8 VersionIHL,int8 TypeOfService,WORD TotalLength,WORD Identification,WORD FragmentInfo,int8 TimeToLive,int8 Protocol,WORD HeaderChecksum,IP_ADDR SourceAddress,IP_ADDR DestAddress}" "* Function:        BOOL IPIsTxReady(BOOL HighPriority)"
C G "" 23 74 1 "*"
C G "" 23 74 1 "*"
C G "" 23 74 1 "*"
C G "" 23 74 1 "*"
C G "" 23 74 1 "*"
D G "IPIsTxReady" 23 89 "(HighPriority)       MACIsTxReady(HighPriority)"
C G "" 23 92 1 "*"
C G "" 23 92 1 "*"
C G "" 23 92 1 "*"
C G "" 23 92 1 "*"
C G "" 23 92 1 "*"
C G "" 23 92 1 "*"
C G "" 23 92 1 "*"
D G "IPSetTxBuffer" 23 108 "(a, b) MACSetTxBuffer(a, b+sizeof(IP_HEADER))"
C L "IPPutHeader" 23 112 1 "*"
C L "IPPutHeader" 23 112 1 "*"
C L "IPPutHeader" 23 112 1 "*"
C L "IPPutHeader" 23 112 1 "*"
C L "IPPutHeader" 23 112 1 "*"
C L "IPPutHeader" 23 112 1 "*"
C L "IPPutHeader" 23 112 1 "*"
C L "IPPutHeader" 23 112 1 "*"
C L "IPPutHeader" 23 112 1 "*"
C L "IPPutHeader" 23 112 1 "*"
C L "IPPutHeader" 23 112 1 "*"
C L "IPPutHeader" 23 112 1 "*"
C L "IPPutHeader" 23 112 1 "*"
C L "IPPutHeader" 23 112 1 "*"
C L "IPPutHeader" 23 112 1 "*"
C L "IPPutHeader" 23 112 1 "*"
F G "IPPutHeader" 23 136 "WORD(*NODE_INFO remote,int8 protocol,WORD len)"
V L "remote" 23 136 "*NODE_INFO"
V L "protocol" 23 137 "int8"
V L "len" 23 138 "WORD" "* Macro:           IPPutArray(a, b)"
C L "IPPutHeader" 23 141 1 "*"
C L "IPPutHeader" 23 141 1 "*"
C L "IPPutHeader" 23 141 1 "*"
C L "IPPutHeader" 23 141 1 "*"
C L "IPPutHeader" 23 141 1 "*"
D G "IPPutArray" 23 156 "(a, b)    MACPutArray(a, b)"
C L "IPPutHeader" 23 161 1 "*"
C L "IPPutHeader" 23 161 1 "*"
C L "IPPutHeader" 23 161 1 "*"
C L "IPPutHeader" 23 161 1 "*"
C L "IPPutHeader" 23 161 1 "*"
C L "IPPutHeader" 23 161 1 "*"
C L "IPPutHeader" 23 161 1 "*"
C L "IPPutHeader" 23 161 1 "*"
C L "IPPutHeader" 23 161 1 "*"
C L "IPPutHeader" 23 161 1 "*"
C L "IPPutHeader" 23 161 1 "*"
C L "IPPutHeader" 23 161 1 "*"
C L "IPPutHeader" 23 161 1 "*"
C L "IPPutHeader" 23 161 1 "*"
C L "IPPutHeader" 23 161 1 "*"
C L "IPPutHeader" 23 161 1 "*"
C L "IPPutHeader" 23 161 1 "*"
C L "IPPutHeader" 23 161 1 "*"
F G "IPGetHeader" 23 187 "int8(*IP_ADDR localIP,*NODE_INFO remote,*int8 protocol,*WORD len)"
V L "localIP" 23 187 "*IP_ADDR"
V L "remote" 23 188 "*NODE_INFO"
V L "protocol" 23 189 "*int8"
V L "len" 23 190 "*WORD" "* Macro:           IPDiscard()"
C L "IPGetHeader" 23 193 1 "*"
C L "IPGetHeader" 23 193 1 "*"
C L "IPGetHeader" 23 193 1 "*"
C L "IPGetHeader" 23 193 1 "*"
C L "IPGetHeader" 23 193 1 "*"
D G "IPDiscard" 23 208 "()         MACDiscard()"
C L "IPGetHeader" 23 212 1 "*"
C L "IPGetHeader" 23 212 1 "*"
C L "IPGetHeader" 23 212 1 "*"
C L "IPGetHeader" 23 212 1 "*"
C L "IPGetHeader" 23 212 1 "*"
C L "IPGetHeader" 23 212 1 "*"
D G "IPGetArray" 23 227 "(a, b)    MACGetArray(a, b)"
C L "IPGetHeader" 23 232 1 "*"
C L "IPGetHeader" 23 232 1 "*"
C L "IPGetHeader" 23 232 1 "*"
C L "IPGetHeader" 23 232 1 "*"
C L "IPGetHeader" 23 232 1 "*"
C L "IPGetHeader" 23 232 1 "*"
C L "IPGetHeader" 23 232 1 "*"
C L "IPGetHeader" 23 232 1 "*"
F G "IPSetRxBuffer" 23 248 "void(WORD Offset)"
V L "Offset" 23 248 "WORD" "This is left shifted by 4.  Actual value is 0x04."
D G "IPv4" 22 55 " (0x40u)"
D G "IP_VERSION" 22 56 "IPv4"
D G "debug_ip" 22 58 ""
D G "IP_IHL" 22 64 " (0x05)"
D G "IP_SERVICE_NW_CTRL" 22 66 " (0x07)"
D G "IP_SERVICE_IN_CTRL" 22 67 " (0x06)"
D G "IP_SERVICE_ECP" 22 68 " (0x05)"
D G "IP_SERVICE_OVR" 22 69 " (0x04)"
D G "IP_SERVICE_FLASH" 22 70 " (0x03)"
D G "IP_SERVICE_IMM" 22 71 " (0x02)"
D G "IP_SERVICE_PRIOR" 22 72 " (0x01)"
D G "IP_SERVICE_ROUTINE" 22 73 " (0x00)"
D G "IP_SERVICE_N_DELAY" 22 75 " (0x00)"
D G "IP_SERCICE_L_DELAY" 22 76 " (0x08)"
D G "IP_SERVICE_N_THRPT" 22 77 " (0x00)"
D G "IP_SERVICE_H_THRPT" 22 78 " (0x10)"
D G "IP_SERVICE_N_RELIB" 22 79 " (0x00)"
D G "IP_SERVICE_H_RELIB" 22 80 " (0x20)"
D G "IP_SERVICE" 22 82 " (IP_SERVICE_ROUTINE | IP_SERVICE_N_DELAY)"
D G "MY_IP_TTL" 22 84 " (100)" "Time-To-Live in Seconds"
V G "_Identifier" 22 89 "WORD"
V G "IPHeaderLen" 22 90 "int8"
F G "SwapIPHeader" 22 92 "void(*IP_HEADER h)"
V L "h" 22 92 "*IP_HEADER" "* Function:        BOOL IPGetHeader( IP_ADDR    *localIP,"
C L "SwapIPHeader" 22 97 1 "*"
C L "SwapIPHeader" 22 97 1 "*"
C L "SwapIPHeader" 22 97 1 "*"
C L "SwapIPHeader" 22 97 1 "*"
C L "SwapIPHeader" 22 97 1 "*"
C L "SwapIPHeader" 22 97 1 "*"
C L "SwapIPHeader" 22 97 1 "*"
C L "SwapIPHeader" 22 97 1 "*"
C L "SwapIPHeader" 22 97 1 "*"
C L "SwapIPHeader" 22 97 1 "*"
C L "SwapIPHeader" 22 97 1 "*"
C L "SwapIPHeader" 22 97 1 "*"
C L "SwapIPHeader" 22 97 1 "*"
C L "SwapIPHeader" 22 97 1 "*"
C L "SwapIPHeader" 22 97 1 "*"
C L "SwapIPHeader" 22 97 1 "*"
C L "SwapIPHeader" 22 97 1 "*"
F G "IPGetHeader" 22 123 "int8()"
V L "localIP" 22 123 "*IP_ADDR"
V L "remote" 22 124 "*NODE_INFO"
V L "protocol" 22 125 "*int8"
V L "len" 22 126 "*WORD"
V L "CalcChecksum" 22 128 "WORD_VAL"
V L "header" 22 129 "IP_HEADER"
C L "IPGetHeader" 22 97 1 "FUNCTION"
C L "IPGetHeader" 22 97 1 "FUNCTION"
C L "IPGetHeader" 22 97 4 "FUNCTION"
C L "IPGetHeader" 22 97 1 "FUNCTION"
C L "IPGetHeader" 22 97 2 "FUNCTION"
C L "IPGetHeader" 22 97 1 "FUNCTION"
C L "IPGetHeader" 22 97 2 "FUNCTION"
C L "IPPutHeader" 22 220 1 "*"
C L "IPPutHeader" 22 220 1 "*"
C L "IPPutHeader" 22 220 1 "*"
C L "IPPutHeader" 22 220 1 "*"
C L "IPPutHeader" 22 220 1 "*"
C L "IPPutHeader" 22 220 1 "*"
C L "IPPutHeader" 22 220 1 "*"
C L "IPPutHeader" 22 220 1 "*"
C L "IPPutHeader" 22 220 1 "*"
C L "IPPutHeader" 22 220 1 "*"
C L "IPPutHeader" 22 220 1 "*"
F G "IPPutHeader" 22 238 "WORD(*int8 protocol,*WORD len)"
V L "remote" 22 238 "*NODE_INFO"
V L "protocol" 22 239 "int8"
V L "len" 22 240 "WORD"
V L "header" 22 242 "IP_HEADER"
C L "IPPutHeader" 22 220 1 "FUNCTION"
C L "IPPutHeader" 22 220 1 "FUNCTION"
C L "IPSetRxBuffer" 22 278 1 "*"
C L "IPSetRxBuffer" 22 278 1 "*"
C L "IPSetRxBuffer" 22 278 1 "*"
C L "IPSetRxBuffer" 22 278 1 "*"
C L "IPSetRxBuffer" 22 278 1 "*"
C L "IPSetRxBuffer" 22 278 1 "*"
C L "IPSetRxBuffer" 22 278 1 "*"
C L "IPSetRxBuffer" 22 278 1 "*"
F G "IPSetRxBuffer" 22 294 "void(int8 protocol,WORD len)"
V L "Offset" 22 294 "WORD"
F G "SwapIPHeader" 22 301 "void(WORD Offset,WORD len)"
V L "h" 22 301 "*IP_HEADER"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 2 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 23 1 1 "*"
C G "" 23 1 1 "*"
C G "" 23 1 1 "*"
C G "" 23 1 1 "*"
C G "" 23 1 1 "*"
C G "" 23 1 1 "*"
C G "" 23 1 1 "*"
C G "" 23 1 1 "*"
C G "" 23 1 1 "*"
C G "" 23 1 1 "*"
C G "" 23 1 1 "*"
C G "" 23 1 1 "*"
C G "" 23 1 1 "*"
C G "" 23 1 1 "*"
C G "" 23 1 1 "*"
C G "" 23 1 1 "*"
C G "" 23 1 1 "*"
C G "" 23 1 1 "*"
C G "" 23 1 1 "*"
C G "" 23 1 1 "*"
C G "" 23 1 1 "*"
C G "" 23 1 1 "*"
C G "" 23 1 1 "*"
C G "" 23 1 1 "*"
C G "" 23 1 1 "*"
C G "" 23 1 1 "*"
C G "" 23 1 1 "*"
C G "" 23 1 1 "*"
C G "" 23 1 1 "*"
C G "" 23 1 1 "*"
C G "" 23 1 1 "*"
C G "" 23 1 1 "*"
C G "" 23 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
D G "TCP_H" 25 40 ""
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 2 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
T G "TCP_SOCKET" 25 45 "int8"
T G "TCP_PORT" 25 46 "WORD" "* Maximum number of times a connection be retried before"
D G "MAX_RETRY_COUNTS" 25 56 " (3)"
D G "INVALID_SOCKET" 25 58 " (0xfe)"
D G "UNKNOWN_SOCKET" 25 59 " (0xff)"
D G "REMOTE_HOST" 25 61 "(s)      (TCB[s].remote)"
C G "" 25 63 1 "*"
E G "TCP_LISTEN" 25 69 "0"
E G "TCP_SYN_SENT" 25 70 "1"
E G "TCP_SYN_RECEIVED" 25 71 "2"
E G "TCP_ESTABLISHED" 25 72 "3"
E G "TCP_FIN_WAIT_1" 25 73 "4"
E G "TCP_FIN_WAIT_2" 25 74 "5"
E G "TCP_CLOSING" 25 75 "6"
E G "TCP_TIME_WAIT" 25 76 "7"
E G "TCP_CLOSE_WAIT" 25 77 "8"
E G "TCP_LAST_ACK" 25 78 "9"
E G "TCP_CLOSED" 25 79 "10"
T G "TCP_STATE" 25 79 "_TCP_STATE" "* Socket info."
C G "" 25 81 1 "*"
T G "SOCKET_INFO" 25 115 "{TCP_STATE smState,NODE_INFO remote,TCP_PORT localPort,TCP_PORT remotePort,BUFFER TxBuffer,WORD TxCount,WORD RxCount,WORD RemoteWindow,DWORD SND_SEQ,DWORD SND_ACK,int8 RetryCount,TICKTYPE startTick,TICKTYPE TimeOut}" "* Function:        void TCPInit(void)"
C L "TCPInit" 25 117 1 "*"
C L "TCPInit" 25 117 1 "*"
C L "TCPInit" 25 117 1 "*"
C L "TCPInit" 25 117 1 "*"
C L "TCPInit" 25 117 1 "*"
C L "TCPInit" 25 117 1 "*"
C L "TCPInit" 25 117 1 "*"
F G "TCPInit" 25 133 "void()"
C L "TCPInit" 25 137 1 "*"
C L "TCPInit" 25 137 1 "*"
C L "TCPInit" 25 137 1 "*"
C L "TCPInit" 25 137 1 "*"
C L "TCPInit" 25 137 1 "*"
C L "TCPInit" 25 137 1 "*"
C L "TCPInit" 25 137 1 "*"
C L "TCPInit" 25 137 1 "*"
F G "TCPListen" 25 153 "TCP_SOCKET(TCP_PORT port)"
V L "port" 25 153 "TCP_PORT" "* Function:        TCP_SOCKET TCPConnect(NODE_INFO* remote,"
C L "TCPListen" 25 157 1 "*"
C L "TCPListen" 25 157 1 "*"
C L "TCPListen" 25 157 1 "*"
C L "TCPListen" 25 157 1 "*"
C L "TCPListen" 25 157 1 "*"
C L "TCPListen" 25 157 1 "*"
C L "TCPListen" 25 157 1 "*"
C L "TCPListen" 25 157 1 "*"
F G "TCPConnect" 25 174 "TCP_SOCKET(*NODE_INFO remote,TCP_PORT remotePort)"
V L "remote" 25 174 "*NODE_INFO"
V L "port" 25 174 "TCP_PORT" "* Function:        BOOL TCPIsConnected(TCP_SOCKET s)"
C L "TCPConnect" 25 177 1 "*"
C L "TCPConnect" 25 177 1 "*"
C L "TCPConnect" 25 177 1 "*"
C L "TCPConnect" 25 177 1 "*"
C L "TCPConnect" 25 177 1 "*"
C L "TCPConnect" 25 177 1 "*"
C L "TCPConnect" 25 177 1 "*"
C L "TCPConnect" 25 177 1 "*"
C L "TCPConnect" 25 177 1 "*"
C L "TCPConnect" 25 177 1 "*"
F G "TCPIsConnected" 25 196 "int8(TCP_SOCKET s)"
V L "s" 25 196 "TCP_SOCKET" "* Function:        void TCPDisconnect(TCP_SOCKET s)"
C L "TCPIsConnected" 25 199 1 "*"
C L "TCPIsConnected" 25 199 1 "*"
C L "TCPIsConnected" 25 199 1 "*"
C L "TCPIsConnected" 25 199 1 "*"
C L "TCPIsConnected" 25 199 1 "*"
C L "TCPIsConnected" 25 199 1 "*"
C L "TCPIsConnected" 25 199 1 "*"
F G "TCPDisconnect" 25 215 "void(TCP_SOCKET s)"
V L "s" 25 215 "TCP_SOCKET" "* Function:        BOOL TCPIsPutReady(TCP_SOCKET s)"
C L "TCPDisconnect" 25 218 1 "*"
C L "TCPDisconnect" 25 218 1 "*"
C L "TCPDisconnect" 25 218 1 "*"
C L "TCPDisconnect" 25 218 1 "*"
C L "TCPDisconnect" 25 218 1 "*"
C L "TCPDisconnect" 25 218 1 "*"
C L "TCPDisconnect" 25 218 1 "*"
C L "TCPDisconnect" 25 218 1 "*"
C L "TCPDisconnect" 25 218 1 "*"
C L "TCPDisconnect" 25 218 1 "*"
C L "TCPDisconnect" 25 218 1 "*"
C L "TCPDisconnect" 25 218 1 "*"
C L "TCPDisconnect" 25 218 1 "*"
F G "TCPIsPutReady" 25 240 "int8(TCP_SOCKET s)"
V L "s" 25 240 "TCP_SOCKET" "* Function:        BOOL TCPPut(TCP_SOCKET s, BYTE byte)"
C L "TCPIsPutReady" 25 243 1 "*"
C L "TCPIsPutReady" 25 243 1 "*"
C L "TCPIsPutReady" 25 243 1 "*"
C L "TCPIsPutReady" 25 243 1 "*"
C L "TCPIsPutReady" 25 243 1 "*"
C L "TCPIsPutReady" 25 243 1 "*"
C L "TCPIsPutReady" 25 243 1 "*"
C L "TCPIsPutReady" 25 243 1 "*"
F G "TCPPut" 25 260 "int8(TCP_SOCKET s,int8 byte)"
V L "socket" 25 260 "TCP_SOCKET"
V L "data" 25 260 "int8" "* Function:        BOOL TCPFlush(TCP_SOCKET s)"
C L "TCPPut" 25 263 1 "*"
C L "TCPPut" 25 263 1 "*"
C L "TCPPut" 25 263 1 "*"
C L "TCPPut" 25 263 1 "*"
C L "TCPPut" 25 263 1 "*"
C L "TCPPut" 25 263 1 "*"
C L "TCPPut" 25 263 1 "*"
F G "TCPFlush" 25 279 "int8(TCP_SOCKET s)"
V L "socket" 25 279 "TCP_SOCKET" "* Function:        BOOL TCPIsGetReady(TCP_SOCKET s)"
C L "TCPFlush" 25 281 1 "*"
C L "TCPFlush" 25 281 1 "*"
C L "TCPFlush" 25 281 1 "*"
C L "TCPFlush" 25 281 1 "*"
C L "TCPFlush" 25 281 1 "*"
C L "TCPFlush" 25 281 1 "*"
C L "TCPFlush" 25 281 1 "*"
F G "TCPIsGetReady" 25 297 "int8(TCP_SOCKET s)"
V L "s" 25 297 "TCP_SOCKET" "* Function:        BOOL TCPGet(TCP_SOCKET s, BYTE *byte)"
C L "TCPIsGetReady" 25 300 1 "*"
C L "TCPIsGetReady" 25 300 1 "*"
C L "TCPIsGetReady" 25 300 1 "*"
C L "TCPIsGetReady" 25 300 1 "*"
C L "TCPIsGetReady" 25 300 1 "*"
C L "TCPIsGetReady" 25 300 1 "*"
C L "TCPIsGetReady" 25 300 1 "*"
C L "TCPIsGetReady" 25 300 1 "*"
C L "TCPIsGetReady" 25 300 1 "*"
F G "TCPGet" 25 318 "int8(TCP_SOCKET s,*int8 data)"
V L "socket" 25 318 "TCP_SOCKET"
V L "data" 25 318 "*int8" "* Function:        WORD TCPGetArray(TCP_SOCKET s, BYTE *buffer,"
C L "TCPGet" 25 321 1 "*"
C L "TCPGet" 25 321 1 "*"
C L "TCPGet" 25 321 1 "*"
C L "TCPGet" 25 321 1 "*"
C L "TCPGet" 25 321 1 "*"
C L "TCPGet" 25 321 1 "*"
C L "TCPGet" 25 321 1 "*"
C L "TCPGet" 25 321 1 "*"
C L "TCPGet" 25 321 1 "*"
C L "TCPGet" 25 321 1 "*"
F G "TCPGetArray" 25 340 "WORD(TCP_SOCKET s,*int8 buff,WORD count)"
V L "s" 25 340 "TCP_SOCKET"
V L "buff" 25 340 "*int8"
V L "count" 25 340 "WORD" "* Function:        BOOL TCPDiscard(TCP_SOCKET s)"
C L "TCPGetArray" 25 343 1 "*"
C L "TCPGetArray" 25 343 1 "*"
C L "TCPGetArray" 25 343 1 "*"
C L "TCPGetArray" 25 343 1 "*"
C L "TCPGetArray" 25 343 1 "*"
C L "TCPGetArray" 25 343 1 "*"
C L "TCPGetArray" 25 343 1 "*"
C L "TCPGetArray" 25 343 1 "*"
F G "TCPDiscard" 25 360 "int8(TCP_SOCKET s)"
V L "socket" 25 360 "TCP_SOCKET" "* Function:        BOOL TCPProcess(NODE_INFO* remote,"
C L "TCPDiscard" 25 363 1 "*"
C L "TCPDiscard" 25 363 1 "*"
C L "TCPDiscard" 25 363 1 "*"
C L "TCPDiscard" 25 363 1 "*"
C L "TCPDiscard" 25 363 1 "*"
C L "TCPDiscard" 25 363 1 "*"
C L "TCPDiscard" 25 363 1 "*"
C L "TCPDiscard" 25 363 1 "*"
C L "TCPDiscard" 25 363 1 "*"
C L "TCPDiscard" 25 363 1 "*"
C L "TCPDiscard" 25 363 1 "*"
F G "TCPProcess" 25 383 "int8(*NODE_INFO remote,*IP_ADDR localIP,WORD len)"
V L "remote" 25 383 "*NODE_INFO"
V L "localIP" 25 384 "*IP_ADDR"
V L "len" 25 385 "WORD" "* Function:        void TCPTick(void)"
C L "TCPProcess" 25 388 1 "*"
C L "TCPProcess" 25 388 1 "*"
C L "TCPProcess" 25 388 1 "*"
C L "TCPProcess" 25 388 1 "*"
C L "TCPProcess" 25 388 1 "*"
C L "TCPProcess" 25 388 1 "*"
C L "TCPProcess" 25 388 1 "*"
F G "TCPTick" 25 404 "void()"
C L "TCPTick" 14 1 1 "*"
C L "TCPTick" 14 1 1 "*"
C L "TCPTick" 14 1 1 "*"
C L "TCPTick" 14 1 1 "*"
C L "TCPTick" 14 1 1 "*"
C L "TCPTick" 14 1 1 "*"
C L "TCPTick" 14 1 1 "*"
C L "TCPTick" 14 1 1 "*"
C L "TCPTick" 14 1 1 "*"
C L "TCPTick" 14 1 1 "*"
C L "TCPTick" 14 1 1 "*"
C L "TCPTick" 14 1 1 "*"
C L "TCPTick" 14 1 1 "*"
C L "TCPTick" 14 1 1 "*"
C L "TCPTick" 14 1 1 "*"
C L "TCPTick" 14 1 1 "*"
C L "TCPTick" 14 1 1 "*"
C L "TCPTick" 14 1 1 "*"
C L "TCPTick" 14 1 1 "*"
C L "TCPTick" 14 1 1 "*"
C L "TCPTick" 14 1 1 "*"
C L "TCPTick" 14 1 1 "*"
C L "TCPTick" 14 1 1 "*"
C L "TCPTick" 14 1 1 "*"
C L "TCPTick" 14 1 1 "*"
C L "TCPTick" 14 1 1 "*"
C L "TCPTick" 14 1 1 "*"
C L "TCPTick" 14 1 1 "*"
D G "debug_tcp" 24 80 "(a,b,c,d,e,f,g,h,i,k,l,m,n,o,p,q,r,s,t,u)"
D G "MAX_TCP_DATA_LEN" 24 85 " (MAC_TX_BUFFER_SIZE - 54)"
D G "TCP_START_TIMEOUT_VAL" 24 88 " (TICKS_PER_SECOND * (TICKTYPE)3)"
D G "FIN" 24 91 " (0x01)"
D G "SYN" 24 92 " (0x02)"
D G "RST" 24 93 " (0x04)"
D G "PSH" 24 94 " (0x08)"
D G "ACK" 24 95 " (0x10)"
D G "URG" 24 96 " (0x20)"
C L "TCPTick" 24 81 1 "FUNCTION"
T G "TCP_HEADER" 24 132 "{WORD SourcePort,WORD DestPort,DWORD SeqNumber,DWORD AckNumber}" "TCP Options as defined by RFC"
D G "TCP_OPTIONS_END_OF_LIST" 24 136 " (0x00)"
D G "TCP_OPTIONS_NO_OP" 24 137 " (0x01)"
D G "TCP_OPTIONS_MAX_SEG_SIZE" 24 138 " (0x02)"
T G "TCP_OPTIONS" 24 144 "{int8 Kind,int8 Length,WORD_VAL MaxSegSize}"
D G "SwapPseudoTCPHeader" 24 146 "(h)  (h.TCPLength = swaps(h.TCPLength))"
C L "TCPTick" 24 81 1 "FUNCTION"
T G "PSEUDO_HEADER" 24 156 "{IP_ADDR SourceAddress,IP_ADDR DestAddress,int8 Zero,int8 Protocol,WORD TCPLength}"
D G "LOCAL_PORT_START_NUMBER" 24 158 " (1024)"
D G "LOCAL_PORT_END_NUMBER" 24 159 " (5000)"
C L "TCPTick" 24 81 1 "FUNCTION"
V G "_NextPort" 24 162 "WORD"
C L "TCPTick" 24 81 12 "FUNCTION"
V G "TCB" 24 179 "SOCKET_INFO[5]" "#pragma udata bla   // Return to any other RAM section   //not needed in ccs"
F G "HandleTCPSeg" 24 182 "void(TCP_SOCKET s,*NODE_INFO remote,*TCP_HEADER h,WORD len)"
V L "s" 24 182 "TCP_SOCKET"
V L "remote" 24 183 "*NODE_INFO"
V L "h" 24 184 "*TCP_HEADER"
V L "len" 24 185 "WORD"
F G "TransmitTCP" 24 187 "void(*NODE_INFO remote,TCP_PORT localPort,TCP_PORT remotePort,DWORD tseq,DWORD tack,int8 flags,BUFFER buff,WORD len)"
V L "remote" 24 187 "*NODE_INFO"
V L "localPort" 24 188 "TCP_PORT"
V L "remotePort" 24 189 "TCP_PORT"
V L "tseq" 24 190 "DWORD"
V L "tack" 24 191 "DWORD"
V L "flags" 24 192 "int8"
V L "buff" 24 193 "BUFFER"
V L "len" 24 194 "WORD"
F G "FindMatching_TCP_Socket" 24 196 "TCP_SOCKET(*TCP_HEADER h,*NODE_INFO remote)"
V L "h" 24 196 "*TCP_HEADER"
V L "remote" 24 197 "*NODE_INFO"
F G "SwapTCPHeader" 24 198 "void(*TCP_HEADER header)"
V L "header" 24 198 "*TCP_HEADER"
F G "CloseSocket" 24 199 "void(*SOCKET_INFO ps)"
V L "ps" 24 199 "*SOCKET_INFO"
D G "SendTCP" 24 201 "(remote, localPort, remotePort, seq, ack, flags)              TransmitTCP(remote, localPort, remotePort, seq, ack, flags,                      INVALID_BUFFER, 0)"
C L "CloseSocket" 24 207 1 "*"
C L "CloseSocket" 24 207 1 "*"
C L "CloseSocket" 24 207 1 "*"
C L "CloseSocket" 24 207 1 "*"
C L "CloseSocket" 24 207 1 "*"
C L "CloseSocket" 24 207 1 "*"
C L "CloseSocket" 24 207 1 "*"
C L "CloseSocket" 24 207 1 "*"
V G "TCPInit_RandSeed" 24 223 "int16"
F G "TCPInit" 24 224 "void()"
V L "s" 24 226 "TCP_SOCKET"
V L "ps" 24 227 "*SOCKET_INFO" "Initialize all sockets."
C L "TCPInit" 24 207 1 "FUNCTION"
C L "TCPListen" 24 278 1 "*"
C L "TCPListen" 24 278 1 "*"
C L "TCPListen" 24 278 1 "*"
C L "TCPListen" 24 278 1 "*"
C L "TCPListen" 24 278 1 "*"
C L "TCPListen" 24 278 1 "*"
C L "TCPListen" 24 278 1 "*"
C L "TCPListen" 24 278 1 "*"
F G "TCPListen" 24 294 "TCP_SOCKET()"
V L "port" 24 294 "TCP_PORT"
V L "s" 24 296 "TCP_SOCKET"
V L "ps" 24 297 "*SOCKET_INFO"
C L "TCPListen" 24 278 2 "FUNCTION"
C L "TCPListen" 24 278 1 "FUNCTION"
C L "TCPListen" 24 278 1 "FUNCTION"
C L "TCPConnect" 24 340 1 "*"
C L "TCPConnect" 24 340 1 "*"
C L "TCPConnect" 24 340 1 "*"
C L "TCPConnect" 24 340 1 "*"
C L "TCPConnect" 24 340 1 "*"
C L "TCPConnect" 24 340 1 "*"
C L "TCPConnect" 24 340 1 "*"
C L "TCPConnect" 24 340 1 "*"
C L "TCPConnect" 24 340 1 "*"
F G "TCPConnect" 24 357 "TCP_SOCKET()"
V L "remote" 24 357 "*NODE_INFO"
V L "remotePort" 24 357 "TCP_PORT"
V L "s" 24 359 "TCP_SOCKET"
V L "ps" 24 360 "*SOCKET_INFO"
V L "lbFound" 24 361 "BOOL"
C L "TCPConnect" 24 340 1 "FUNCTION"
C L "TCPConnect" 24 340 1 "FUNCTION"
C L "TCPConnect" 24 340 2 "FUNCTION"
C L "TCPConnect" 24 340 1 "FUNCTION"
C L "TCPConnect" 24 340 1 "FUNCTION"
C L "TCPConnect" 24 340 2 "FUNCTION"
C L "TCPConnect" 24 340 1 "FUNCTION"
C L "TCPConnect" 24 340 1 "FUNCTION"
C L "TCPIsConnected" 24 423 1 "*"
C L "TCPIsConnected" 24 423 1 "*"
C L "TCPIsConnected" 24 423 1 "*"
C L "TCPIsConnected" 24 423 1 "*"
C L "TCPIsConnected" 24 423 1 "*"
C L "TCPIsConnected" 24 423 1 "*"
C L "TCPIsConnected" 24 423 1 "*"
C L "TCPIsConnected" 24 423 1 "*"
C L "TCPIsConnected" 24 423 1 "*"
C L "TCPIsConnected" 24 423 1 "*"
C L "TCPIsConnected" 24 423 1 "*"
F G "TCPIsConnected" 24 442 "int8()"
V L "s" 24 442 "TCP_SOCKET"
C L "TCPDisconnect" 24 449 1 "*"
C L "TCPDisconnect" 24 449 1 "*"
C L "TCPDisconnect" 24 449 1 "*"
C L "TCPDisconnect" 24 449 1 "*"
C L "TCPDisconnect" 24 449 1 "*"
C L "TCPDisconnect" 24 449 1 "*"
C L "TCPDisconnect" 24 449 1 "*"
C L "TCPDisconnect" 24 449 1 "*"
F G "TCPDisconnect" 24 465 "void(TCP_SOCKET s)"
V L "s" 24 465 "TCP_SOCKET"
V L "ps" 24 467 "*SOCKET_INFO"
C L "TCPDisconnect" 24 449 3 "FUNCTION"
C L "TCPDisconnect" 24 449 1 "FUNCTION"
C L "TCPDisconnect" 24 449 1 "FUNCTION"
C L "TCPDisconnect" 24 449 1 "FUNCTION"
C L "TCPFlush" 24 499 1 "*"
C L "TCPFlush" 24 499 1 "*"
C L "TCPFlush" 24 499 1 "*"
C L "TCPFlush" 24 499 1 "*"
C L "TCPFlush" 24 499 1 "*"
C L "TCPFlush" 24 499 1 "*"
C L "TCPFlush" 24 499 1 "*"
C L "TCPFlush" 24 499 1 "*"
F G "TCPFlush" 24 515 "int8()"
V L "s" 24 515 "TCP_SOCKET"
V L "ps" 24 517 "*SOCKET_INFO"
C L "TCPFlush" 24 499 1 "FUNCTION"
C L "TCPFlush" 24 499 1 "FUNCTION"
C L "TCPIsPutReady" 24 555 1 "*"
C L "TCPIsPutReady" 24 555 1 "*"
C L "TCPIsPutReady" 24 555 1 "*"
C L "TCPIsPutReady" 24 555 1 "*"
C L "TCPIsPutReady" 24 555 1 "*"
C L "TCPIsPutReady" 24 555 1 "*"
C L "TCPIsPutReady" 24 555 1 "*"
C L "TCPIsPutReady" 24 555 1 "*"
C L "TCPIsPutReady" 24 555 1 "*"
C L "TCPIsPutReady" 24 555 1 "*"
C L "TCPIsPutReady" 24 555 1 "*"
C L "TCPIsPutReady" 24 555 1 "*"
C L "TCPIsPutReady" 24 555 1 "*"
C L "TCPIsPutReady" 24 555 1 "*"
F G "TCPIsPutReady" 24 577 "int8(TCP_SOCKET s)"
V L "s" 24 577 "TCP_SOCKET"
F G "TCPPutAvailable" 24 589 "int16(TCP_SOCKET s)"
V L "s" 24 589 "TCP_SOCKET"
V L "txCount" 24 591 "int16"
V L "txAvail" 24 591 "int16"
C L "TCPPutArray" 24 608 1 "*"
C L "TCPPutArray" 24 608 1 "*"
C L "TCPPutArray" 24 608 1 "*"
C L "TCPPutArray" 24 608 1 "*"
C L "TCPPutArray" 24 608 1 "*"
C L "TCPPutArray" 24 608 1 "*"
C L "TCPPutArray" 24 608 1 "*"
C L "TCPPutArray" 24 608 1 "*"
C L "TCPPutArray" 24 608 1 "*"
C L "TCPPutArray" 24 608 1 "*"
C L "TCPPutArray" 24 608 1 "*"
C L "TCPPutArray" 24 608 1 "*"
F G "TCPPutArray" 24 628 "WORD(TCP_SOCKET s,*int8 ptr,WORD len)"
V L "s" 24 628 "TCP_SOCKET"
V L "ptr" 24 628 "*int8"
V L "len" 24 628 "WORD"
V L "ps" 24 630 "*SOCKET_INFO"
V L "n" 24 631 "WORD"
C L "TCPPutArray" 24 608 1 "FUNCTION"
C L "TCPPutArray" 24 608 1 "FUNCTION"
C L "TCPPut" 24 670 1 "*"
C L "TCPPut" 24 670 1 "*"
C L "TCPPut" 24 670 1 "*"
C L "TCPPut" 24 670 1 "*"
C L "TCPPut" 24 670 1 "*"
C L "TCPPut" 24 670 1 "*"
C L "TCPPut" 24 670 1 "*"
C L "TCPPut" 24 670 1 "*"
C L "TCPPut" 24 670 1 "*"
C L "TCPPut" 24 670 1 "*"
C L "TCPPut" 24 670 1 "*"
F G "TCPPut" 24 689 "int8()"
V L "s" 24 689 "TCP_SOCKET"
V L "byte" 24 689 "int8"
V L "ps" 24 691 "*SOCKET_INFO"
V L "tempCount" 24 692 "WORD"
C L "TCPPut" 24 670 1 "FUNCTION"
C L "TCPPut" 24 670 1 "FUNCTION"
C L "TCPDiscard" 24 728 1 "*"
C L "TCPDiscard" 24 728 1 "*"
C L "TCPDiscard" 24 728 1 "*"
C L "TCPDiscard" 24 728 1 "*"
C L "TCPDiscard" 24 728 1 "*"
C L "TCPDiscard" 24 728 1 "*"
C L "TCPDiscard" 24 728 1 "*"
C L "TCPDiscard" 24 728 1 "*"
C L "TCPDiscard" 24 728 1 "*"
F G "TCPDiscard" 24 745 "int8()"
V L "s" 24 745 "TCP_SOCKET"
V L "ps" 24 747 "*SOCKET_INFO"
C L "TCPDiscard" 24 728 1 "FUNCTION"
C L "TCPGetArray" 24 764 1 "*"
C L "TCPGetArray" 24 764 1 "*"
C L "TCPGetArray" 24 764 1 "*"
C L "TCPGetArray" 24 764 1 "*"
C L "TCPGetArray" 24 764 1 "*"
C L "TCPGetArray" 24 764 1 "*"
C L "TCPGetArray" 24 764 1 "*"
C L "TCPGetArray" 24 764 1 "*"
C L "TCPGetArray" 24 764 1 "*"
C L "TCPGetArray" 24 764 1 "*"
C L "TCPGetArray" 24 764 1 "*"
F G "TCPGetArray" 24 783 "WORD()"
V L "s" 24 783 "TCP_SOCKET"
V L "buff" 24 783 "*int8"
V L "count" 24 783 "WORD"
V L "ps" 24 785 "*SOCKET_INFO"
C L "TCPGetArray" 24 764 1 "FUNCTION"
C L "TCPGet" 24 809 1 "*"
C L "TCPGet" 24 809 1 "*"
C L "TCPGet" 24 809 1 "*"
C L "TCPGet" 24 809 1 "*"
C L "TCPGet" 24 809 1 "*"
C L "TCPGet" 24 809 1 "*"
C L "TCPGet" 24 809 1 "*"
C L "TCPGet" 24 809 1 "*"
C L "TCPGet" 24 809 1 "*"
C L "TCPGet" 24 809 1 "*"
F G "TCPGet" 24 827 "int8(*int8 buff,WORD count)"
V L "s" 24 827 "TCP_SOCKET"
V L "data" 24 827 "*int8"
V L "ps" 24 829 "*SOCKET_INFO"
C L "TCPGet" 24 809 2 "FUNCTION"
C L "TCPIsGetReady" 24 860 1 "*"
C L "TCPIsGetReady" 24 860 1 "*"
C L "TCPIsGetReady" 24 860 1 "*"
C L "TCPIsGetReady" 24 860 1 "*"
C L "TCPIsGetReady" 24 860 1 "*"
C L "TCPIsGetReady" 24 860 1 "*"
C L "TCPIsGetReady" 24 860 1 "*"
C L "TCPIsGetReady" 24 860 1 "*"
F G "TCPIsGetReady" 24 876 "int8(*int8 data)"
V L "s" 24 876 "TCP_SOCKET" "* A socket is said to be "Get" ready when it has already"
C L "TCPIsGetReady" 24 878 1 "*"
C L "TCPIsGetReady" 24 878 1 "*"
C L "TCPIsGetReady" 24 878 1 "*"
C L "TCPIsGetReady" 24 878 1 "*"
C L "DebugTCPDisplayState" 24 878 1 "FUNCTION"
F G "DebugTCPDisplayState" 24 890 "void(TCP_SOCKET s)"
V L "st" 24 890 "TCP_STATE"
C L "TCPTick" 24 909 1 "*"
C L "TCPTick" 24 909 1 "*"
C L "TCPTick" 24 909 1 "*"
C L "TCPTick" 24 909 1 "*"
C L "TCPTick" 24 909 1 "*"
C L "TCPTick" 24 909 1 "*"
C L "TCPTick" 24 909 1 "*"
C L "TCPTick" 24 909 1 "*"
F G "TCPTick" 24 925 "void()"
V L "s" 24 927 "TCP_SOCKET"
V L "diffTicks" 24 928 "TICKTYPE"
V L "tick" 24 929 "TICKTYPE"
V L "ps" 24 930 "*SOCKET_INFO"
V L "seq" 24 931 "DWORD"
V L "flags" 24 932 "int8" "BYTE debugLastState;"
C L "TCPTick" 24 909 1 "FUNCTION"
C L "TCPTick" 24 909 1 "FUNCTION"
C L "TCPTick" 24 909 2 "FUNCTION"
C L "TCPTick" 24 909 3 "FUNCTION"
C L "TCPTick" 24 909 1 "FUNCTION"
C L "TCPTick" 24 909 1 "FUNCTION"
C L "TCPTick" 24 909 2 "FUNCTION"
C L "TCPTick" 24 909 1 "FUNCTION"
C L "TCPTick" 24 909 1 "FUNCTION"
C L "TCPTick" 24 909 1 "FUNCTION"
C L "TCPTick" 24 909 2 "FUNCTION"
C L "TCPTick" 24 909 4 "FUNCTION"
C L "TCPTick" 24 909 3 "FUNCTION"
C L "TCPTick" 24 909 3 "FUNCTION"
C L "TCPTick" 24 909 1 "FUNCTION"
C L "TCPTick" 24 909 1 "FUNCTION"
C L "TCPTick" 24 909 1 "FUNCTION"
C L "TCPTick" 24 909 1 "FUNCTION"
C L "TCPTick" 24 909 2 "FUNCTION"
C L "TCPTick" 24 909 2 "FUNCTION"
C L "TCPTick" 24 909 1 "FUNCTION"
C L "TCPTick" 24 909 1 "FUNCTION"
C L "TCPTick" 24 909 6 "FUNCTION"
C L "TCPProcess" 24 1119 1 "*"
C L "TCPProcess" 24 1119 1 "*"
C L "TCPProcess" 24 1119 1 "*"
C L "TCPProcess" 24 1119 1 "*"
C L "TCPProcess" 24 1119 1 "*"
C L "TCPProcess" 24 1119 1 "*"
C L "TCPProcess" 24 1119 1 "*"
C L "TCPProcess" 24 1119 1 "*"
C L "TCPProcess" 24 1119 1 "*"
C L "TCPProcess" 24 1119 1 "*"
C L "TCPProcess" 24 1119 1 "*"
C L "TCPProcess" 24 1119 1 "*"
F G "TCPProcess" 24 1139 "int8()"
V L "remote" 24 1139 "*NODE_INFO"
V L "localIP" 24 1139 "*IP_ADDR"
V L "len" 24 1139 "WORD"
V L "TCPHeader" 24 1141 "TCP_HEADER"
V L "pseudoHeader" 24 1142 "PSEUDO_HEADER"
V L "socket" 24 1143 "TCP_SOCKET"
V L "checksum1" 24 1144 "WORD_VAL"
V L "checksum2" 24 1145 "WORD_VAL"
V L "optionsSize" 24 1146 "int8" "Calculate IP pseudoheader checksum."
C L "TCPProcess" 24 1119 2 "FUNCTION"
C L "TCPProcess" 24 1119 1 "FUNCTION"
C L "TCPProcess" 24 1119 1 "FUNCTION"
C L "TCPProcess" 24 1119 1 "FUNCTION"
C L "TCPProcess" 24 1119 1 "FUNCTION"
C L "TCPProcess" 24 1119 1 "FUNCTION"
C L "TCPProcess" 24 1119 3 "FUNCTION"
C L "TCPProcess" 24 1119 12 "FUNCTION"
C L "TransmitTCP" 24 1217 1 "*"
C L "TransmitTCP" 24 1217 1 "*"
C L "TransmitTCP" 24 1217 1 "*"
C L "TransmitTCP" 24 1217 1 "*"
C L "TransmitTCP" 24 1217 1 "*"
C L "TransmitTCP" 24 1217 1 "*"
C L "TransmitTCP" 24 1217 1 "*"
C L "TransmitTCP" 24 1217 1 "*"
C L "TransmitTCP" 24 1217 1 "*"
C L "TransmitTCP" 24 1217 1 "*"
C L "TransmitTCP" 24 1217 1 "*"
C L "TransmitTCP" 24 1217 1 "*"
C L "TransmitTCP" 24 1217 1 "*"
C L "TransmitTCP" 24 1217 1 "*"
C L "TransmitTCP" 24 1217 1 "*"
C L "TransmitTCP" 24 1217 1 "*"
C L "TransmitTCP" 24 1217 1 "*"
C L "TransmitTCP" 24 1217 1 "*"
C L "TransmitTCP" 24 1217 1 "*"
C L "TransmitTCP" 24 1217 1 "*"
C L "TransmitTCP" 24 1217 1 "*"
C L "TransmitTCP" 24 1217 1 "*"
C L "TransmitTCP" 24 1217 1 "*"
F G "TransmitTCP" 24 1248 "void()"
V L "remote" 24 1248 "*NODE_INFO"
V L "localPort" 24 1249 "TCP_PORT"
V L "remotePort" 24 1250 "TCP_PORT"
V L "tseq" 24 1251 "DWORD"
V L "tack" 24 1252 "DWORD"
V L "flags" 24 1253 "int8"
V L "buff" 24 1254 "BUFFER"
V L "len" 24 1255 "WORD"
V L "checkSum" 24 1257 "WORD_VAL"
V L "header" 24 1258 "TCP_HEADER"
V L "options" 24 1259 "TCP_OPTIONS"
V L "pseudoHeader" 24 1260 "PSEUDO_HEADER" "Make sure that this Tx buffer isn't currently being transmitted"
C L "TransmitTCP" 24 1217 4 "FUNCTION"
C L "TransmitTCP" 24 1217 2 "FUNCTION"
C L "TransmitTCP" 24 1217 1 "FUNCTION"
C L "TransmitTCP" 24 1217 1 "FUNCTION"
C L "TransmitTCP" 24 1217 1 "FUNCTION"
C L "TransmitTCP" 24 1217 1 "FUNCTION"
C L "TransmitTCP" 24 1217 1 "FUNCTION"
C L "TransmitTCP" 24 1217 1 "FUNCTION"
C L "TransmitTCP" 24 1217 1 "FUNCTION"
C L "TransmitTCP" 24 1217 5 "FUNCTION"
C L "FindMatching_TCP_Socket" 24 1385 1 "*"
C L "FindMatching_TCP_Socket" 24 1385 1 "*"
C L "FindMatching_TCP_Socket" 24 1385 1 "*"
C L "FindMatching_TCP_Socket" 24 1385 1 "*"
C L "FindMatching_TCP_Socket" 24 1385 1 "*"
C L "FindMatching_TCP_Socket" 24 1385 1 "*"
C L "FindMatching_TCP_Socket" 24 1385 1 "*"
C L "FindMatching_TCP_Socket" 24 1385 1 "*"
C L "FindMatching_TCP_Socket" 24 1385 1 "*"
C L "FindMatching_TCP_Socket" 24 1385 1 "*"
C L "FindMatching_TCP_Socket" 24 1385 1 "*"
C L "FindMatching_TCP_Socket" 24 1385 1 "*"
F G "FindMatching_TCP_Socket" 24 1405 "TCP_SOCKET(DWORD tack,int8 flags,BUFFER buff,WORD len)"
V L "h" 24 1405 "*TCP_HEADER"
V L "remote" 24 1405 "*NODE_INFO"
V L "ps" 24 1407 "*SOCKET_INFO"
V L "s" 24 1408 "TCP_SOCKET"
V L "partialMatch" 24 1409 "TCP_SOCKET"
C L "FindMatching_TCP_Socket" 24 1385 1 "FUNCTION"
C L "FindMatching_TCP_Socket" 24 1385 2 "FUNCTION"
C L "SwapTCPHeader" 24 1454 1 "*"
C L "SwapTCPHeader" 24 1454 1 "*"
C L "SwapTCPHeader" 24 1454 1 "*"
C L "SwapTCPHeader" 24 1454 1 "*"
C L "SwapTCPHeader" 24 1454 1 "*"
C L "SwapTCPHeader" 24 1454 1 "*"
C L "SwapTCPHeader" 24 1454 1 "*"
F G "SwapTCPHeader" 24 1469 "void(WORD len)"
V L "header" 24 1469 "*TCP_HEADER"
C L "CloseSocket" 24 1482 1 "*"
C L "CloseSocket" 24 1482 1 "*"
C L "CloseSocket" 24 1482 1 "*"
C L "CloseSocket" 24 1482 1 "*"
C L "CloseSocket" 24 1482 1 "*"
C L "CloseSocket" 24 1482 1 "*"
C L "CloseSocket" 24 1482 1 "*"
C L "CloseSocket" 24 1482 1 "*"
C L "CloseSocket" 24 1482 1 "*"
F G "CloseSocket" 24 1499 "void(*TCP_HEADER header)"
V L "ps" 24 1499 "*SOCKET_INFO"
C L "HandleTCPSeg" 24 1537 1 "*"
C L "HandleTCPSeg" 24 1537 1 "*"
C L "HandleTCPSeg" 24 1537 1 "*"
C L "HandleTCPSeg" 24 1537 1 "*"
C L "HandleTCPSeg" 24 1537 1 "*"
C L "HandleTCPSeg" 24 1537 1 "*"
C L "HandleTCPSeg" 24 1537 1 "*"
C L "HandleTCPSeg" 24 1537 1 "*"
C L "HandleTCPSeg" 24 1537 1 "*"
C L "HandleTCPSeg" 24 1537 1 "*"
C L "HandleTCPSeg" 24 1537 1 "*"
C L "HandleTCPSeg" 24 1537 1 "*"
C L "HandleTCPSeg" 24 1537 1 "*"
C L "HandleTCPSeg" 24 1537 1 "*"
C L "HandleTCPSeg" 24 1537 1 "*"
F G "HandleTCPSeg" 24 1560 "void(*SOCKET_INFO ps)"
V L "s" 24 1560 "TCP_SOCKET"
V L "remote" 24 1561 "*NODE_INFO"
V L "h" 24 1562 "*TCP_HEADER"
V L "len" 24 1563 "WORD"
V L "ack" 24 1565 "DWORD"
V L "seq" 24 1566 "DWORD"
V L "prevAck" 24 1567 "DWORD"
V L "prevSeq" 24 1567 "DWORD"
V L "ps" 24 1568 "*SOCKET_INFO"
V L "flags" 24 1569 "int8" "BYTE debugLastState;"
V L "temp" 24 1571 "sint32"
C L "HandleTCPSeg" 24 1537 1 "FUNCTION"
C L "HandleTCPSeg" 24 1537 1 "FUNCTION"
C L "HandleTCPSeg" 24 1537 1 "FUNCTION"
C L "HandleTCPSeg" 24 1537 5 "FUNCTION"
C L "HandleTCPSeg" 24 1537 2 "FUNCTION"
C L "HandleTCPSeg" 24 1537 1 "FUNCTION"
C L "HandleTCPSeg" 24 1537 1 "FUNCTION"
C L "HandleTCPSeg" 24 1537 2 "FUNCTION"
C L "HandleTCPSeg" 24 1537 1 "FUNCTION"
C L "HandleTCPSeg" 24 1537 1 "FUNCTION"
C L "HandleTCPSeg" 24 1537 1 "FUNCTION"
C L "HandleTCPSeg" 24 1537 2 "FUNCTION"
C L "HandleTCPSeg" 24 1537 1 "FUNCTION"
C L "HandleTCPSeg" 24 1537 1 "FUNCTION"
C L "HandleTCPSeg" 24 1537 1 "FUNCTION"
C L "HandleTCPSeg" 24 1537 3 "FUNCTION"
C L "HandleTCPSeg" 24 1537 1 "FUNCTION"
C L "HandleTCPSeg" 24 1537 3 "FUNCTION"
C L "HandleTCPSeg" 24 1537 1 "FUNCTION"
C L "HandleTCPSeg" 24 1537 3 "FUNCTION"
C L "HandleTCPSeg" 24 1537 2 "FUNCTION"
C L "HandleTCPSeg" 24 1537 2 "FUNCTION"
C L "HandleTCPSeg" 24 1537 2 "FUNCTION"
C L "HandleTCPSeg" 24 1537 1 "FUNCTION"
C L "HandleTCPSeg" 24 1537 1 "FUNCTION"
C L "HandleTCPSeg" 24 1537 3 "FUNCTION"
C L "HandleTCPSeg" 24 1537 1 "FUNCTION"
C L "HandleTCPSeg" 24 1537 4 "FUNCTION"
C L "HandleTCPSeg" 24 1537 1 "FUNCTION"
C L "HandleTCPSeg" 24 1537 1 "FUNCTION"
C L "HandleTCPSeg" 24 1537 1 "FUNCTION"
C L "HandleTCPSeg" 24 1537 2 "FUNCTION"
C L "HandleTCPSeg" 24 1537 2 "FUNCTION"
C L "HandleTCPSeg" 24 1537 1 "FUNCTION"
C L "HandleTCPSeg" 24 1537 1 "FUNCTION"
C L "HandleTCPSeg" 24 1537 6 "FUNCTION"
C L "HandleTCPSeg" 24 1537 2 "FUNCTION"
C L "HandleTCPSeg" 24 1537 2 "FUNCTION"
C L "HandleTCPSeg" 24 1537 1 "FUNCTION"
C L "HandleTCPSeg" 24 1537 1 "FUNCTION"
C L "HandleTCPSeg" 24 1537 7 "FUNCTION"
C L "HandleTCPSeg" 24 1537 6 "FUNCTION"
C L "HandleTCPSeg" 24 1537 6 "FUNCTION"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 2 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
D G "ICMP_H" 27 46 ""
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 2 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 23 1 1 "*"
C G "" 23 1 1 "*"
C G "" 23 1 1 "*"
C G "" 23 1 1 "*"
C G "" 23 1 1 "*"
C G "" 23 1 1 "*"
C G "" 23 1 1 "*"
C G "" 23 1 1 "*"
C G "" 23 1 1 "*"
C G "" 23 1 1 "*"
C G "" 23 1 1 "*"
C G "" 23 1 1 "*"
C G "" 23 1 1 "*"
C G "" 23 1 1 "*"
C G "" 23 1 1 "*"
C G "" 23 1 1 "*"
C G "" 23 1 1 "*"
C G "" 23 1 1 "*"
C G "" 23 1 1 "*"
C G "" 23 1 1 "*"
C G "" 23 1 1 "*"
C G "" 23 1 1 "*"
C G "" 23 1 1 "*"
C G "" 23 1 1 "*"
C G "" 23 1 1 "*"
C G "" 23 1 1 "*"
C G "" 23 1 1 "*"
C G "" 23 1 1 "*"
C G "" 23 1 1 "*"
C G "" 23 1 1 "*"
C G "" 23 1 1 "*"
C G "" 23 1 1 "*"
C G "" 23 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
D G "MAX_ICMP_DATA" 27 54 " (64)"
D G "MAX_ICMP_DATA_LEN" 27 56 " (MAX_ICMP_DATA)"
E G "ICMP_ECHO_REPLY" 27 62 "0"
E G "ICMP_ECHO_REQUEST" 27 63 "8"
T G "ICMP_CODE" 27 63 "_ICMP_CODE"
T G "ICMP_REQUESTS" 27 63 "_ICMP_CODE" "* Function:        BOOL ICMPIsTxReady()"
C G "" 27 66 1 "*"
C G "" 27 66 1 "*"
C G "" 27 66 1 "*"
C G "" 27 66 1 "*"
C G "" 27 66 1 "*"
D G "ICMPIsTxReady" 27 81 "()     MACIsTxReady(TRUE)"
C L "ICMPPut" 27 84 1 "*"
C L "ICMPPut" 27 84 1 "*"
C L "ICMPPut" 27 84 1 "*"
C L "ICMPPut" 27 84 1 "*"
C L "ICMPPut" 27 84 1 "*"
C L "ICMPPut" 27 84 1 "*"
C L "ICMPPut" 27 84 1 "*"
C L "ICMPPut" 27 84 1 "*"
C L "ICMPPut" 27 84 1 "*"
C L "ICMPPut" 27 84 1 "*"
C L "ICMPPut" 27 84 1 "*"
C L "ICMPPut" 27 84 1 "*"
C L "ICMPPut" 27 84 1 "*"
C L "ICMPPut" 27 84 1 "*"
C L "ICMPPut" 27 84 1 "*"
C L "ICMPPut" 27 84 1 "*"
F G "ICMPPut" 27 108 "void(*NODE_INFO remote,ICMP_CODE code,*int8 data,int8 len,WORD id,WORD seq)"
V L "remote" 27 108 "*NODE_INFO"
V L "code" 27 109 "ICMP_CODE"
V L "data" 27 110 "*int8"
V L "len" 27 111 "int8"
V L "id" 27 112 "WORD"
V L "seq" 27 113 "WORD" "* Function:        BOOL ICMPGet(ICMP_CODE *code,"
C L "ICMPPut" 27 116 1 "*"
C L "ICMPPut" 27 116 1 "*"
C L "ICMPPut" 27 116 1 "*"
C L "ICMPPut" 27 116 1 "*"
C L "ICMPPut" 27 116 1 "*"
C L "ICMPPut" 27 116 1 "*"
C L "ICMPPut" 27 116 1 "*"
C L "ICMPPut" 27 116 1 "*"
C L "ICMPPut" 27 116 1 "*"
C L "ICMPPut" 27 116 1 "*"
C L "ICMPPut" 27 116 1 "*"
C L "ICMPPut" 27 116 1 "*"
C L "ICMPPut" 27 116 1 "*"
C L "ICMPPut" 27 116 1 "*"
C L "ICMPPut" 27 116 1 "*"
F G "ICMPGet" 27 140 "int8(*ICMP_CODE code,*int8 data,*int8 len,*WORD id,*WORD seq)"
V L "code" 27 140 "*ICMP_CODE"
V L "data" 27 141 "*int8"
V L "len" 27 142 "*int8"
V L "id" 27 143 "*WORD"
V L "seq" 27 144 "*WORD" "*                  IP Defs for Microchip TCP/IP Stack"
C L "ICMPGet" 23 1 1 "*"
C L "ICMPGet" 23 1 1 "*"
C L "ICMPGet" 23 1 1 "*"
C L "ICMPGet" 23 1 1 "*"
C L "ICMPGet" 23 1 1 "*"
C L "ICMPGet" 23 1 1 "*"
C L "ICMPGet" 23 1 1 "*"
C L "ICMPGet" 23 1 1 "*"
C L "ICMPGet" 23 1 1 "*"
C L "ICMPGet" 23 1 1 "*"
C L "ICMPGet" 23 1 1 "*"
C L "ICMPGet" 23 1 1 "*"
C L "ICMPGet" 23 1 1 "*"
C L "ICMPGet" 23 1 1 "*"
C L "ICMPGet" 23 1 1 "*"
C L "ICMPGet" 23 1 1 "*"
C L "ICMPGet" 23 1 1 "*"
C L "ICMPGet" 23 1 1 "*"
C L "ICMPGet" 23 1 1 "*"
C L "ICMPGet" 23 1 1 "*"
C L "ICMPGet" 23 1 1 "*"
C L "ICMPGet" 23 1 1 "*"
C L "ICMPGet" 23 1 1 "*"
C L "ICMPGet" 23 1 1 "*"
C L "ICMPGet" 23 1 1 "*"
C L "ICMPGet" 23 1 1 "*"
C L "ICMPGet" 23 1 1 "*"
C L "ICMPGet" 23 1 1 "*"
C L "ICMPGet" 23 1 1 "*"
C L "ICMPGet" 23 1 1 "*"
C L "ICMPGet" 23 1 1 "*"
D G "debug_icmp" 26 57 ""
C L "ICMPGet" 26 58 2 "FUNCTION"
C L "ICMPGet" 26 62 1 "*"
T G "ICMP_PACKET" 26 73 "{int8 Type,int8 Code,WORD Checksum,WORD Identifier,WORD SequenceNumber,int8[64] Data}"
D G "ICMP_HEADER_SIZE" 26 74 " (sizeof(ICMP_PACKET) - MAX_ICMP_DATA)"
F G "SwapICMPPacket" 26 76 "void(*ICMP_PACKET p)"
V L "p" 26 76 "*ICMP_PACKET" "* Function:        BOOL ICMPGet(ICMP_CODE *code,"
C L "SwapICMPPacket" 26 79 1 "*"
C L "SwapICMPPacket" 26 79 1 "*"
C L "SwapICMPPacket" 26 79 1 "*"
C L "SwapICMPPacket" 26 79 1 "*"
C L "SwapICMPPacket" 26 79 1 "*"
C L "SwapICMPPacket" 26 79 1 "*"
C L "SwapICMPPacket" 26 79 1 "*"
C L "SwapICMPPacket" 26 79 1 "*"
C L "SwapICMPPacket" 26 79 1 "*"
C L "SwapICMPPacket" 26 79 1 "*"
C L "SwapICMPPacket" 26 79 1 "*"
C L "SwapICMPPacket" 26 79 1 "*"
C L "SwapICMPPacket" 26 79 1 "*"
C L "SwapICMPPacket" 26 79 1 "*"
C L "SwapICMPPacket" 26 79 1 "*"
F G "ICMPGet" 26 103 "int8()"
V L "code" 26 103 "*ICMP_CODE"
V L "data" 26 104 "*int8"
V L "len" 26 105 "*int8"
V L "id" 26 106 "*WORD"
V L "seq" 26 107 "*WORD"
V L "packet" 26 109 "ICMP_PACKET"
V L "CalcChecksum" 26 110 "WORD"
V L "ReceivedChecksum" 26 111 "WORD"
C L "ICMPGet" 26 79 1 "FUNCTION"
C L "ICMPGet" 26 79 4 "FUNCTION"
C L "ICMPGet" 26 79 1 "FUNCTION"
C L "ICMPPut" 26 158 1 "*"
C L "ICMPPut" 26 158 1 "*"
C L "ICMPPut" 26 158 1 "*"
C L "ICMPPut" 26 158 1 "*"
C L "ICMPPut" 26 158 1 "*"
C L "ICMPPut" 26 158 1 "*"
C L "ICMPPut" 26 158 1 "*"
C L "ICMPPut" 26 158 1 "*"
C L "ICMPPut" 26 158 1 "*"
C L "ICMPPut" 26 158 1 "*"
C L "ICMPPut" 26 158 1 "*"
C L "ICMPPut" 26 158 1 "*"
C L "ICMPPut" 26 158 1 "*"
C L "ICMPPut" 26 158 1 "*"
C L "ICMPPut" 26 158 1 "*"
C L "ICMPPut" 26 158 1 "*"
F G "ICMPPut" 26 182 "void()"
V L "remote" 26 182 "*NODE_INFO"
V L "code" 26 183 "ICMP_CODE"
V L "data" 26 184 "*int8"
V L "len" 26 185 "int8"
V L "id" 26 186 "WORD"
V L "seq" 26 187 "WORD"
V L "packet" 26 189 "ICMP_PACKET"
V L "ICMPLen" 26 190 "WORD"
V L "MyTxBuffer" 26 191 "BUFFER"
C L "ICMPPut" 26 158 2 "FUNCTION"
C L "ICMPPut" 26 158 1 "FUNCTION"
C L "SwapICMPPacket" 26 236 1 "*"
C L "SwapICMPPacket" 26 236 1 "*"
C L "SwapICMPPacket" 26 236 1 "*"
C L "SwapICMPPacket" 26 236 1 "*"
C L "SwapICMPPacket" 26 236 1 "*"
C L "SwapICMPPacket" 26 236 1 "*"
C L "SwapICMPPacket" 26 236 1 "*"
F G "SwapICMPPacket" 26 251 "void(int8 len,WORD id,WORD seq,*NODE_INFO remote,int8 opCode)"
V L "p" 26 251 "*ICMP_PACKET"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
D G "ARP_H" 29 44 ""
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 2 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
D G "ARP_REPLY" 29 52 " (0x00)"
D G "ARP_REQUEST" 29 53 " (0x01)"
D G "ARP_UNKNOWN" 29 54 " (0x02)"
C L "ARPGet" 29 57 1 "*"
C L "ARPGet" 29 57 1 "*"
C L "ARPGet" 29 57 1 "*"
C L "ARPGet" 29 57 1 "*"
C L "ARPGet" 29 57 1 "*"
C L "ARPGet" 29 57 1 "*"
C L "ARPGet" 29 57 1 "*"
C L "ARPGet" 29 57 1 "*"
C L "ARPGet" 29 57 1 "*"
F G "ARPGet" 29 74 "int8(*ICMP_PACKET p,WORD id,WORD seq,*NODE_INFO remote,int8 opCode)"
V L "remote" 29 74 "*NODE_INFO"
V L "opCode" 29 74 "*int8" "* Macro:           ARPIsRxReady()"
C L "ARPGet" 29 77 1 "*"
C L "ARPGet" 29 77 1 "*"
C L "ARPGet" 29 77 1 "*"
C L "ARPGet" 29 77 1 "*"
C L "ARPGet" 29 77 1 "*"
C L "ARPGet" 29 77 1 "*"
D G "ARPIsTxReady" 29 93 "()      MACIsTxReady(TRUE)"
C L "ARPGet" 29 97 1 "*"
C L "ARPGet" 29 97 1 "*"
C L "ARPGet" 29 97 1 "*"
C L "ARPGet" 29 97 1 "*"
C L "ARPGet" 29 97 1 "*"
C L "ARPGet" 29 97 1 "*"
C L "ARPGet" 29 97 1 "*"
C L "ARPGet" 29 97 1 "*"
F G "ARPPut" 29 113 "int8(*NODE_INFO remote,int8 opCode)"
V L "remote" 29 113 "*NODE_INFO"
V L "opCode" 29 113 "int8" "*                  ARP Server Defs for Microchip TCP/IP Stack"
C L "ARPPut" 30 1 1 "*"
C L "ARPPut" 30 1 1 "*"
C L "ARPPut" 30 1 1 "*"
C L "ARPPut" 30 1 1 "*"
C L "ARPPut" 30 1 1 "*"
C L "ARPPut" 30 1 1 "*"
C L "ARPPut" 30 1 1 "*"
C L "ARPPut" 30 1 1 "*"
C L "ARPPut" 30 1 1 "*"
C L "ARPPut" 30 1 1 "*"
C L "ARPPut" 30 1 1 "*"
C L "ARPPut" 30 1 1 "*"
C L "ARPPut" 30 1 1 "*"
C L "ARPPut" 30 1 1 "*"
C L "ARPPut" 30 1 1 "*"
C L "ARPPut" 30 1 1 "*"
C L "ARPPut" 30 1 1 "*"
C L "ARPPut" 30 1 1 "*"
C L "ARPPut" 30 1 1 "*"
C L "ARPPut" 30 1 1 "*"
C L "ARPPut" 30 1 1 "*"
C L "ARPPut" 30 1 1 "*"
C L "ARPPut" 30 1 1 "*"
C L "ARPPut" 30 1 1 "*"
C L "ARPPut" 30 1 1 "*"
C L "ARPPut" 30 1 1 "*"
C L "ARPPut" 30 1 1 "*"
C L "ARPPut" 30 1 1 "*"
C L "ARPPut" 30 1 1 "*"
C L "ARPPut" 30 1 1 "*"
C L "ARPPut" 30 1 1 "*"
D G "ARP_TSK_H" 30 45 ""
C L "ARPPut" 5 1 1 "*"
C L "ARPPut" 5 1 1 "*"
C L "ARPPut" 5 1 1 "*"
C L "ARPPut" 5 1 1 "*"
C L "ARPPut" 5 1 1 "*"
C L "ARPPut" 5 1 1 "*"
C L "ARPPut" 5 1 1 "*"
C L "ARPPut" 5 1 1 "*"
C L "ARPPut" 5 1 1 "*"
C L "ARPPut" 5 1 1 "*"
C L "ARPPut" 5 1 1 "*"
C L "ARPPut" 5 1 1 "*"
C L "ARPPut" 5 1 1 "*"
C L "ARPPut" 5 1 1 "*"
C L "ARPPut" 5 1 1 "*"
C L "ARPPut" 5 1 1 "*"
C L "ARPPut" 5 1 1 "*"
C L "ARPPut" 5 1 1 "*"
C L "ARPPut" 5 1 1 "*"
C L "ARPPut" 5 1 1 "*"
C L "ARPPut" 5 1 1 "*"
C L "ARPPut" 5 1 1 "*"
C L "ARPPut" 5 1 1 "*"
C L "ARPPut" 5 1 1 "*"
C L "ARPPut" 5 1 1 "*"
C L "ARPPut" 5 1 1 "*"
C L "ARPPut" 5 1 1 "*"
C L "ARPPut" 5 1 1 "*"
C L "ARPPut" 5 1 1 "*"
C L "ARPPut" 5 1 1 "*"
C L "ARPPut" 5 1 1 "*"
C L "ARPPut" 5 1 1 "*"
C L "ARPPut" 5 1 1 "*"
C L "ARPPut" 5 1 2 "*"
C L "ARPPut" 5 1 1 "*"
C L "ARPPut" 5 1 1 "*"
C L "ARPPut" 5 1 1 "*"
C L "ARPPut" 14 1 1 "*"
C L "ARPPut" 14 1 1 "*"
C L "ARPPut" 14 1 1 "*"
C L "ARPPut" 14 1 1 "*"
C L "ARPPut" 14 1 1 "*"
C L "ARPPut" 14 1 1 "*"
C L "ARPPut" 14 1 1 "*"
C L "ARPPut" 14 1 1 "*"
C L "ARPPut" 14 1 1 "*"
C L "ARPPut" 14 1 1 "*"
C L "ARPPut" 14 1 1 "*"
C L "ARPPut" 14 1 1 "*"
C L "ARPPut" 14 1 1 "*"
C L "ARPPut" 14 1 1 "*"
C L "ARPPut" 14 1 1 "*"
C L "ARPPut" 14 1 1 "*"
C L "ARPPut" 14 1 1 "*"
C L "ARPPut" 14 1 1 "*"
C L "ARPPut" 14 1 1 "*"
C L "ARPPut" 14 1 1 "*"
C L "ARPPut" 14 1 1 "*"
C L "ARPPut" 14 1 1 "*"
C L "ARPPut" 14 1 1 "*"
C L "ARPPut" 14 1 1 "*"
C L "ARPPut" 14 1 1 "*"
C L "ARPPut" 14 1 1 "*"
C L "ARPPut" 14 1 1 "*"
C L "ARPPut" 14 1 1 "*"
C L "ARPPut" 14 1 1 "*"
C L "ARPPut" 30 51 1 "*"
C L "ARPPut" 30 51 1 "*"
C L "ARPPut" 30 51 1 "*"
C L "ARPPut" 30 51 1 "*"
C L "ARPPut" 30 51 1 "*"
C L "ARPPut" 30 51 1 "*"
C L "ARPPut" 30 51 1 "*"
F G "ARPInit" 30 66 "void()"
C L "ARPInit" 30 69 1 "*"
C L "ARPInit" 30 69 1 "*"
C L "ARPInit" 30 69 1 "*"
C L "ARPInit" 30 69 1 "*"
C L "ARPInit" 30 69 1 "*"
C L "ARPInit" 30 69 1 "*"
C L "ARPInit" 30 69 1 "*"
F G "ARPProcess" 30 84 "int8()"
C L "ARPProcess" 30 87 1 "*"
C L "ARPProcess" 30 87 1 "*"
C L "ARPProcess" 30 87 1 "*"
C L "ARPProcess" 30 87 1 "*"
C L "ARPProcess" 30 87 1 "*"
C L "ARPProcess" 30 87 1 "*"
C L "ARPProcess" 30 87 1 "*"
F G "ARPResolve" 30 102 "void(*IP_ADDR IPAddr)"
V L "IPAddr" 30 102 "*IP_ADDR" "* Function:        BOOL ARPIsResolved(IP_ADDR* IPAddr,"
C L "ARPResolve" 30 105 1 "*"
C L "ARPResolve" 30 105 1 "*"
C L "ARPResolve" 30 105 1 "*"
C L "ARPResolve" 30 105 1 "*"
C L "ARPResolve" 30 105 1 "*"
C L "ARPResolve" 30 105 1 "*"
C L "ARPResolve" 30 105 1 "*"
C L "ARPResolve" 30 105 1 "*"
C L "ARPResolve" 30 105 1 "*"
F G "ARPIsResolved" 30 123 "int8(*IP_ADDR IPAddr,*MAC_ADDR MACAddr)"
V L "IPAddr" 30 123 "*IP_ADDR"
V L "MACAddr" 30 123 "*MAC_ADDR"
D G "debug_arptask" 28 56 ""
C L "ARPIsResolved" 28 57 1 "FUNCTION"
C L "ARPIsResolved" 28 59 1 "*"
E G "SM_ARP_IDLE" 28 65 "0"
E G "SM_ARP_REPLY" 28 66 "1"
T G "ARP_STATE" 28 66 "_ARP_STATE" "* This ARP task caches one ARP response."
V G "smARP" 28 72 "ARP_STATE"
V G "Cache" 28 74 "NODE_INFO" "* Function:        void ARPInit(void)"
C L "ARPIsResolved" 28 77 1 "*"
C L "ARPIsResolved" 28 77 1 "*"
C L "ARPIsResolved" 28 77 1 "*"
C L "ARPIsResolved" 28 77 1 "*"
C L "ARPIsResolved" 28 77 1 "*"
C L "ARPIsResolved" 28 77 1 "*"
F G "ARPInit" 28 92 "void()"
C L "ARPProcess" 28 108 1 "*"
C L "ARPProcess" 28 108 1 "*"
C L "ARPProcess" 28 108 1 "*"
C L "ARPProcess" 28 108 1 "*"
C L "ARPProcess" 28 108 1 "*"
C L "ARPProcess" 28 108 1 "*"
C L "ARPProcess" 28 108 1 "*"
F G "ARPProcess" 28 123 "int8()"
V L "remoteNode" 28 125 "NODE_INFO"
V L "opCode" 28 126 "int8"
C L "ARPProcess" 28 108 2 "FUNCTION"
C L "ARPResolve" 28 160 1 "*"
C L "ARPResolve" 28 160 1 "*"
C L "ARPResolve" 28 160 1 "*"
C L "ARPResolve" 28 160 1 "*"
C L "ARPResolve" 28 160 1 "*"
C L "ARPResolve" 28 160 1 "*"
F G "ARPResolve" 28 173 "void()"
V L "IPAddr" 28 173 "*IP_ADDR"
V L "remoteNode" 28 175 "NODE_INFO"
C L "ARPIsResolved" 28 184 1 "*"
C L "ARPIsResolved" 28 184 1 "*"
C L "ARPIsResolved" 28 184 1 "*"
C L "ARPIsResolved" 28 184 1 "*"
C L "ARPIsResolved" 28 184 1 "*"
C L "ARPIsResolved" 28 184 1 "*"
C L "ARPIsResolved" 28 184 1 "*"
C L "ARPIsResolved" 28 184 1 "*"
C L "ARPIsResolved" 28 184 1 "*"
C L "ARPIsResolved" 28 184 1 "*"
F G "ARPIsResolved" 28 202 "int8()"
V L "IPAddr" 28 202 "*IP_ADDR"
V L "MACAddr" 28 202 "*MAC_ADDR"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 2 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
D G "debug_arp" 31 53 ""
D G "ARP_OPERATION_REQ" 31 57 "0x01u"
D G "ARP_OPERATION_RESP" 31 58 "0x02u"
D G "HW_ETHERNET" 31 61 " (0x0001u)"
D G "ARP_IP" 31 62 " (0x0800u)"
T G "ARP_PACKET" 31 78 "{WORD HardwareType,WORD Protocol,int8 MACAddrLen,int8 ProtocolLen,WORD Operation,MAC_ADDR SenderMACAddr,IP_ADDR SenderIPAddr,MAC_ADDR TargetMACAddr,IP_ADDR TargetIPAddr}" "Helper function"
F G "SwapARPPacket" 31 81 "void(*ARP_PACKET p)"
V L "p" 31 81 "*ARP_PACKET" "* Function:        BOOL ARPGet(NODE_INFO* remote, BYTE* opCode)"
C L "SwapARPPacket" 31 84 1 "*"
C L "SwapARPPacket" 31 84 1 "*"
C L "SwapARPPacket" 31 84 1 "*"
C L "SwapARPPacket" 31 84 1 "*"
C L "SwapARPPacket" 31 84 1 "*"
C L "SwapARPPacket" 31 84 1 "*"
C L "SwapARPPacket" 31 84 1 "*"
C L "SwapARPPacket" 31 84 1 "*"
F G "ARPGet" 31 101 "int8()"
V L "remote" 31 101 "*NODE_INFO"
V L "opCode" 31 101 "*int8"
V L "packet" 31 103 "ARP_PACKET" "MACGetArray((int8*)&packet, sizeof(packet));"
C L "ARPPut" 31 144 1 "*"
C L "ARPPut" 31 144 1 "*"
C L "ARPPut" 31 144 1 "*"
C L "ARPPut" 31 144 1 "*"
C L "ARPPut" 31 144 1 "*"
C L "ARPPut" 31 144 1 "*"
C L "ARPPut" 31 144 1 "*"
C L "ARPPut" 31 144 1 "*"
C L "ARPPut" 31 144 1 "*"
F G "ARPPut" 31 161 "int8()"
V L "remote" 31 161 "*NODE_INFO"
V L "opCode" 31 161 "int8"
V L "packet" 31 163 "ARP_PACKET"
V L "MyTxBuffer" 31 165 "BUFFER"
C L "ARPPut" 31 144 1 "FUNCTION"
C L "ARPPut" 31 144 2 "FUNCTION"
C L "ARPPut" 31 144 1 "FUNCTION"
C L "SwapARPPacket" 31 222 1 "*"
C L "SwapARPPacket" 31 222 1 "*"
C L "SwapARPPacket" 31 222 1 "*"
C L "SwapARPPacket" 31 222 1 "*"
C L "SwapARPPacket" 31 222 1 "*"
C L "SwapARPPacket" 31 222 1 "*"
C L "SwapARPPacket" 31 222 1 "*"
F G "SwapARPPacket" 31 237 "void()"
V L "p" 31 237 "*ARP_PACKET"
C G "" 4 186 1 "*"
E G "SM_STACK_IDLE" 4 192 "0"
E G "SM_STACK_MAC" 4 193 "1"
E G "SM_STACK_IP" 4 194 "2"
E G "SM_STACK_ICMP" 4 195 "3"
E G "SM_STACK_ICMP_REPLY" 4 196 "4"
E G "SM_STACK_ARP" 4 197 "5"
E G "SM_STACK_TCP" 4 198 "6"
E G "SM_STACK_UDP" 4 199 "7"
T G "SM_STACK" 4 199 "_SM_STACK"
V G "smStack" 4 201 "SM_STACK"
V G "remoteNode" 4 203 "NODE_INFO" "* Function:        void StackInit(void)"
C L "StackInit" 4 206 1 "*"
C L "StackInit" 4 206 1 "*"
C L "StackInit" 4 206 1 "*"
C L "StackInit" 4 206 1 "*"
C L "StackInit" 4 206 1 "*"
C L "StackInit" 4 206 1 "*"
F G "StackInit" 4 221 "void()"
D G "DebugDisplayVals" 4 284 "()"
C L "StackTask" 4 286 1 "*"
C L "StackTask" 4 286 1 "*"
C L "StackTask" 4 286 1 "*"
C L "StackTask" 4 286 1 "*"
C L "StackTask" 4 286 1 "*"
C L "StackTask" 4 286 1 "*"
C L "StackTask" 4 286 1 "*"
C L "StackTask" 4 286 1 "*"
C L "StackTask" 4 286 1 "*"
C L "StackTask" 4 286 1 "*"
F G "StackTask" 4 305 "void()"
V L "dataCount" 4 307 "WORD"
V L "data" 4 310 "int8[64]"
V L "ICMPId" 4 311 "WORD"
V L "ICMPSeq" 4 312 "WORD"
V L "tempLocalIP" 4 314 "IP_ADDR"
V L "type" 4 324 "{int8 MACFrameType,int8 IPFrameType,ICMP_CODE ICMPCode}"
V L "lbContinue" 4 327 "BOOL"
C L "StackTask" 4 286 1 "FUNCTION"
C L "StackTask" 4 286 1 "FUNCTION"
D G "BUTTON1_PRESSED" 3 61 "()  (!input(PIN_A4))"
D G "USER_LED1" 3 63 "PIN_A5"
D G "USER_LED2" 3 64 "PIN_B4"
D G "USER_LED3" 3 65 "PIN_B5"
D G "LED_ON" 3 66 "output_low"
D G "LED_OFF" 3 67 "output_high"
F G "init_user_io" 3 68 "void()"
C L "init_user_io" 3 71 1 "FUNCTION"
C L "init_user_io" 3 71 1 "FUNCTION"
F G "MACAddrInit" 3 113 "void()"
F G "IPAddrInit" 3 122 "void()"
C L "IPAddrInit" 3 71 1 "FUNCTION"
C L "IPAddrInit" 3 71 1 "FUNCTION"
C L "IPAddrInit" 3 71 1 "FUNCTION"
V G "ExampleIPDatagram" 3 142 "int8[1]"
V G "ExampleUDPPacket" 3 148 "int8[1]"
V G "lcd_io" 32 46 "{int4 empty,int4 data}"
V G "lcd_lat" 32 46 "{int4 empty,int4 data}"
V G "lcd_tris" 32 46 "{int4 empty,int4 data}"
D G "lcd_type" 32 56 "2" "0=5x7, 1=5x10, 2=2 lines"
D G "lcd_line_two" 32 57 "0x40" "LCD RAM address for the second line"
V G "LCD_INIT_STRING" 32 60 "int8[4]"
C L "lcd_read_byte" 32 2 4 "FUNCTION"
F G "lcd_read_byte" 32 69 "int8()"
V L "low" 32 70 "int8"
V L "high" 32 70 "int8"
C L "lcd_read_byte" 32 2 1 "FUNCTION"
C L "lcd_read_byte" 32 2 1 "FUNCTION"
F G "lcd_send_nibble" 32 88 "void(int8 n)"
V L "n" 32 88 "int8"
F G "lcd_send_byte" 32 97 "void(int8 address,int8 n)"
V L "address" 32 97 "int8"
V L "n" 32 97 "int8"
F G "lcd_init" 32 112 "void()"
V L "i" 32 113 "int8"
C L "lcd_init" 32 2 1 "FUNCTION"
F G "lcd_gotoxy" 32 131 "void(int8 x,int8 y)"
V L "x" 32 131 "int8"
V L "y" 32 131 "int8"
V L "address" 32 132 "int8"
F G "lcd_putc" 32 142 "void(int8 c)"
V L "c" 32 142 "int8"
F G "lcd_getc" 32 153 "int8(int8 x,int8 y)"
V L "x" 32 153 "int8"
V L "y" 32 153 "int8"
V L "value" 32 154 "int8"
C L "lcd_getc" 32 2 1 "FUNCTION"
D G "NUM_LISTEN_SOCKETS" 0 16 "2"
D G "EXAMPLE_TCP_PORT" 0 18 " (int16)502"
V G "lcd_str" 0 20 "int8[2][20]" "this function is called by MyTCPTask() when the specified socket is connected"
C L "TCPConnectedTask" 0 23 2 "FUNCTION"
F G "TCPConnectedTask" 0 25 "int8(TCP_SOCKET socket,int8 which)"
V L "socket" 0 25 "TCP_SOCKET"
V L "which" 0 25 "int8"
V L "c" 0 26 "int8[1]"
V L "counter" 0 27 "int8[2]"
V L "button1_held" 0 28 "int8[2]"
V L "mb_frame" 0 29 "int8[1]"
V L "str" 0 30 "int8[20]"
V L "i" 0 31 "int8"
F G "input" 0 58 "int8()"
F G "input" 0 58 "int8()"
F G "TCPIsPutReady" 0 58 "int8(int8 socket)"
V L "socket" 0 58 "int8"
F G "sprintf" 0 60 "int8(int8 str)"
V L "str" 0 60 "int8"
V L "str" 0 60 "int8"
F G "TCPPutArray" 0 61 "int8(int8 socket,int8 str,int8 strlen)"
V L "socket" 0 61 "int8"
V L "str" 0 61 "int8"
V L "strlen" 0 61 "int8"
F G "TCPFlush" 0 62 "int8()"
V L "socket" 0 62 "int8"
F G "input" 0 64 "int8(int8 socket)"
F G "input" 0 64 "int8(int8 socket)"
F G "MyTCPTask" 0 77 "void()"
V L "lastTick" 0 78 "TICKTYPE[2]"
V L "socket" 0 79 "TCP_SOCKET[2]"
V L "MYTCP_STATE_NEW" 0 81 "0"
V L "MYTCP_STATE_LISTENING" 0 82 "1"
V L "MYTCP_STATE_CONNECTED" 0 82 "2"
V L "MYTCP_STATE_DISCONNECT" 0 83 "3"
V L "MYTCP_STATE_FORCE_DISCONNECT" 0 84 "4"
V L "state" 0 84 "[2]"
V L "remote" 0 85 "NODE_INFO[2]"
V L "currTick" 0 86 "TICKTYPE"
V L "dis" 0 87 "int8"
V L "i" 0 88 "int8"
F G "LCDTask" 0 152 "void()"
V L "lastTick" 0 153 "TICKTYPE"
V L "currTick" 0 154 "TICKTYPE"
V L "LCD_STATE_DISPLAY" 0 155 "0"
V L "LCD_STATE_WAIT" 0 155 "1"
V L "state" 0 155 ""
F G "main" 0 174 "void()"
C L "main" 0 23 2 "FUNCTION"
F B "reset_cpu" 0 0
F B "abs" 1 0
F B "sleep" 0 0
F B "delay_cycles" 1 0
F B "read_bank" 2 0
F B "write_bank" 3 0
F B "shift_left" 2 2
F B "shift_right" 2 2
F B "rotate_left" 2 0
F B "rotate_right" 2 0
F B "_mul" 2 0
F B "memset" 3 0
F B "isamoung" 2 0
F B "isamong" 2 0
F B "bit_set" 2 0
F B "bit_clear" 2 0
F B "bit_test" 2 0
F B "toupper" 1 0
F B "tolower" 1 0
F B "swap" 1 0
F B "printf" 1 255
F B "fprintf" 1 255
F B "sprintf" 1 255
F B "make8" 2 0
F B "make16" 2 0
F B "make32" 1 255
F B "label_address" 1 1
F B "goto_address" 1 0
F B "_va_arg" 1 0
F B "offsetofbit" 2 2
F B "enable_interrupts" 1 0
F B "disable_interrupts" 1 0
F B "interrupt_active" 1 0
F B "clear_interrupt" 1 0
F B "jump_to_isr" 1 0
F B "ext_int_edge" 1 2
F B "read_eeprom" 1 0
F B "write_eeprom" 2 0
F B "read_program_eeprom" 1 0
F B "write_program_eeprom" 2 0
F B "write_program_memory" 3 0
F B "read_program_memory" 3 0
F B "erase_program_eeprom" 1 0
F B "read_external_memory" 3 0
F B "write_external_memory" 3 0
F B "setup_external_memory" 1 0
F B "write_configuration_memory" 2 3
F B "read_configuration_memory" 2 3
F B "strcpy" 2 0
F B "memcpy" 3 0
F B "output_high" 1 0
F B "output_low" 1 0
F B "input" 1 0
F B "input_state" 1 0
F B "output_float" 1 0
F B "output_drive" 1 0
F B "output_bit" 1 1
F B "output_toggle" 1 0
F B "output_a" 1 0
F B "output_b" 1 0
F B "output_c" 1 0
F B "output_d" 1 0
F B "output_e" 1 0
F B "input_a" 0 0
F B "input_b" 0 0
F B "input_c" 0 0
F B "input_d" 0 0
F B "input_e" 0 0
F B "set_tris_a" 1 0
F B "set_tris_b" 1 0
F B "set_tris_c" 1 0
F B "set_tris_d" 1 0
F B "set_tris_e" 1 0
F B "get_tris_a" 0 0
F B "get_tris_b" 0 0
F B "get_tris_c" 0 0
F B "get_tris_d" 0 0
F B "get_tris_e" 0 0
F B "port_b_pullups" 1 0
F B "setup_counters" 2 0
F B "setup_wdt" 1 0
F B "restart_cause" 0 0
F B "restart_wdt" 0 0
F B "get_rtcc" 0 0
F B "set_rtcc" 1 0
F B "get_timer0" 0 0
F B "set_timer0" 1 0
F B "setup_comparator" 1 0
F B "setup_port_a" 1 0
F B "setup_adc_ports" 1 0
F B "setup_adc" 1 0
F B "set_adc_channel" 1 0
F B "read_adc" 0 1
F B "adc_done" 0 0
F B "setup_timer_0" 1 0
F B "setup_vref" 1 0
F B "setup_timer_1" 1 0
F B "get_timer1" 0 0
F B "set_timer1" 1 0
F B "setup_timer_2" 3 0
F B "get_timer2" 0 0
F B "set_timer2" 1 0
F B "setup_timer_3" 1 0
F B "set_timer3" 1 0
F B "get_timer3" 0 0
F B "setup_ccp1" 1 2
F B "set_pwm1_duty" 1 0
F B "setup_ccp2" 1 0
F B "set_pwm2_duty" 1 0
F B "setup_low_volt_detect" 1 0
F B "setup_oscillator" 1 2
F B "setup_psp" 1 0
F B "psp_output_full" 0 0
F B "psp_input_full" 0 0
F B "psp_overflow" 0 0
F B "setup_spi" 1 0
F B "spi_read" 0 1
F B "spi_write" 1 0
F B "spi_data_is_in" 0 0
F B "setup_spi2" 1 0
F B "spi_read2" 0 1
F B "spi_write2" 1 0
F B "spi_data_is_in2" 0 0
F B "brownout_enable" 1 0
F B "delay_ms" 1 0
F B "delay_us" 1 0
F B "putchar" 1 2
F B "puts" 1 2
F B "getch" 0 1
F B "gets" 1 3
F B "kbhit" 0 1
F B "set_uart_speed" 1 3
F B "setup_uart" 1 3
